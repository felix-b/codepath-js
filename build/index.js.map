{"version":3,"sources":["webpack://CodePath/webpack/universalModuleDefinition","webpack://CodePath/webpack/bootstrap","webpack://CodePath/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://CodePath/./node_modules/opentracing/lib/index.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/typeof.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/inherits.js","webpack://CodePath/./node_modules/opentracing/lib/span.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/createClass.js","webpack://CodePath/./node_modules/opentracing/lib/noop.js","webpack://CodePath/./node_modules/opentracing/lib/tracer.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://CodePath/./node_modules/opentracing/lib/span_context.js","webpack://CodePath/./node_modules/opentracing/lib/functions.js","webpack://CodePath/./node_modules/opentracing/lib/constants.js","webpack://CodePath/./node_modules/opentracing/lib/reference.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://CodePath/./node_modules/opentracing/lib/binary_carrier.js","webpack://CodePath/./node_modules/opentracing/lib/ext/tags.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://CodePath/./node_modules/opentracing/lib/global_tracer.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/construct.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://CodePath/./src/codePathTracer.js","webpack://CodePath/./src/serializable.js","webpack://CodePath/./src/codePathStream.js","webpack://CodePath/./src/multicastDelegate.js","webpack://CodePath/./src/asyncLocalProvider.js","webpack://CodePath/./src/logLevel.js","webpack://CodePath/./src/codePathScopeManager.js","webpack://CodePath/./src/codePath.js","webpack://CodePath/./src/codePathModel.js","webpack://CodePath/./src/codePathSearchModel.js","webpack://CodePath/./src/codePathFlatFilterModel.js","webpack://CodePath/./src/treeGrid.js","webpack://CodePath/./src/debounce.js","webpack://CodePath/./src/resizer.js","webpack://CodePath/./src/debugLog.js","webpack://CodePath/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","__export","binary_carrier_1","BinaryCarrier","default","Tags","Noop","reference_1","Reference","span_1","Span","span_context_1","SpanContext","tracer_1","Tracer","mock_tracer_1","MockTracer","initialize","self","ReferenceError","_typeof2","iterator","constructor","_typeof","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","instance","Constructor","TypeError","assertThisInitialized","subClass","superClass","noop","context","this","_context","tracer","_tracer","setOperationName","_setOperationName","setBaggageItem","_setBaggageItem","getBaggageItem","_getBaggageItem","setTag","_a","_addTags","addTags","keyValueMap","log","keyValuePairs","timestamp","_log","logEvent","eventName","payload","event","finish","finishTime","_finish","spanContext","_defineProperties","target","props","length","descriptor","protoProps","staticProps","span","Functions","startSpan","options","childOf","references","push","_startSpan","inject","format","carrier","_inject","extract","_extract","fields","_setPrototypeOf","toTraceId","toSpanId","Constants","REFERENCE_CHILD_OF","followsFrom","REFERENCE_FOLLOWS_FROM","FORMAT_BINARY","FORMAT_TEXT_MAP","FORMAT_HTTP_HEADERS","type","referencedContext","_type","_referencedContext","extendStatics","__extends","b","Array","__","MockContext","_super","_this","_span","opentracing","mock_context_1","MockSpan","_mockTracer","_uuid","_generateUUID","_startMs","Date","now","_finishMs","_operationName","_tags","_logs","set","_i","keys_1","keys","uuid","operationName","durationMs","tags","Math","abs","random","toString","substr","addReference","ref","debug","operation","millis","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","undefined","has","Wrapper","arguments","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","buffer","SPAN_KIND","SPAN_KIND_RPC_CLIENT","SPAN_KIND_RPC_SERVER","SPAN_KIND_MESSAGING_PRODUCER","SPAN_KIND_MESSAGING_CONSUMER","ERROR","COMPONENT","SAMPLING_PRIORITY","PEER_SERVICE","PEER_HOSTNAME","PEER_ADDRESS","PEER_HOST_IPV4","PEER_HOST_IPV6","PEER_PORT","HTTP_URL","HTTP_METHOD","HTTP_STATUS_CODE","MESSAGE_BUS_DESTINATION","DB_INSTANCE","DB_STATEMENT","DB_TYPE","DB_USER","mock_span_1","mock_report_1","_spans","_allocSpan","_startStack","Error","stack","clear","report","MockReport","spans","spansByUUID","spansByTag","debugSpans","unfinishedSpans","forEach","val","firstSpanWithTagValue","noopTracer","_globalTracer","globalTracerDelegate","GlobalTracerDelegate","apply","initGlobalTracer","globalTracer","fn","Function","indexOf","_construct","Parent","args","Reflect","sham","Proxy","e","isNativeReflectConstruct","a","isArray","arr2","iter","from","createCodePathTracer","traceId","stream","CodePathTracer","_traceId","_nextSpanId","_clock","clock","_scopeManager","scopeManager","_stream","writeStartTracer","CodePathSpan","CodePathSpanContext","spanId","getTraceId","_selfContext","_name","startTime","findReferences","writeStartSpan","contextToPlain","epoch","writeSpanTags","time","writeLog","$id","effectiveFinishTime","writeEndSpan","_spanId","plainToContext","isTagSerializable","addTagMetaStringify","tag","$meta","stringify","createCodePathStream","isStripTagsMode","stripTags","entries","isEnabled","enabled","strippedTagsById","nextStrippedTagsId","token","includeOrStripTags","messageId","enable","peekEntries","takeEntries","copyOfEntries","entry","normalizeTags","clearAll","getStrippedTags","ids","result","id","$$id","visitedObjects","Set","safeStringify","json","JSON","err","replaceCircularReferences","add","createMulticastDelegate","subscribers","delegate","subscriber","remove","filter","invoke","console","originalPromise","Promise","restoreOriginalPromise","createAsyncLocalProvider","currentLocals","getCurrentLocals","cloneCurrentLocals","completionHooks","rejectionHooks","nextInstanceId","PromiseWrapper","executor","parentLocals","thisLocals","thisInstanceId","resolve","reject","error","createAsyncLocal","initialValue","newValue","addPromiseCompletionHook","callback","addPromiseRejectionHook","LOG_LEVEL","warning","critical","createDefaultScopeManager","asyncLocalProvider","activeTracer","activeSpan","logToActiveSpan","$async","level","message","getActiveTracer","getActiveSpan","setActiveTracer","setActiveSpan","resetCurrentScope","createRealClock","performance","getTime","setInterval","func","delay","clearInterval","setTimeout","clearTimeout","defaultTracerFactory","createCodePath","tracerFactory","outputStream","spanEntries","existingSpan","tempSpan","parentContext","parentReferenceType","existingTracer","newTracer","getOrCreateActiveTracer","parentReferenceContext","getParentSpanContext","spanOptions","childSpan","childSpanId","thisCodePath","logDebug","logWarning","logError","logCritical","spanRoot","spanChild","spanFollower","finishSpan","doesNotifyTracerOnFinish","notifySpanFinished","parentEntry","input","output","createCodePathModel","insertNodesCallbacks","updateNodesCallbacks","extractEntryMetrics","metrics","traceNodeMap","rootNode","nextNodeId","initializeModel","mapByTraceId","getOrAddTraceSpanNodeMap","existingMap","nodeBySpanId","newMap","getSpanNode","setSpanNode","node","createRootNode","bubbleMetrics","insertQueue","updateQueue","insertSet","metricKeys","targetNode","bubbleSingleMetric","parent","handleInsertNodeEntry","getParentContext","parentNode","warn","findParentNode","newNode","createRegularNode","appendChildNodeToParent","entryHandlerByToken","StartTracer","StartSpan","Log","SpanTags","currentTagsIds","newTagsIds","EndSpan","duration","getRootNode","getNodesFlat","getNodesAsFlatArray","getTopLevelNodes","getTopLevelNodesAsArray","walkNodesDepthFirst","publish","handler","handleEntry","subscribe","insertNodes","updateNodes","unsubscribe","top","depth","firstChild","lastChild","prevSibling","nextSibling","newChild","flatNodes","topLevelNodes","walkImmediateSubNodes","findNextMatchingNode","fromNode","predicate","currentNode","finishedSubTree","findPrevMatchingNode","createCodePathSearchModel","sourceModel","resultNodeById","newlyCreatedResultNodes","resultRootNode","initializeFromSourceModel","sourceRootNode","depthFirstSearchSubTree","getResultParentNode","createThisResultNode","matched","createResultNode","isRootNode","thisNodeMatched","thisResultNode","subNode","performSearch","sourceModelSubscriber","handleInsertedSourceNodes","updatedNodes","getFirstMatchedNode","firstMatchedNode","getNextMatchedNode","matchedNode","getPrevMatchedNode","unsubscribeFromSource","sourceNode","resultParentNode","resultNode","matchHighlight","insertedNodes","getOrCreateResultParentNode","sourceChildNode","existingParent","createCodePathFlatFilterModel","createTreeGridController","view","model","rowById","masterIndexVersion","currentGroup","parentId","beginNewGroup","index","endCurrentGroup","startIndex","parentRow","nodesInGroup","slice","showSubNodes","row","findAbsoluteIndex","updateNode","controller","getNodeById","getNode","toggle","expand","collapse","selectNode","expandToNode","nodeRowIndex","getIsExpanded","getIsVisible","replaceModel","newModel","initWithCurrentModel","onNodeSelected","attachController","subTreeHeight","getParent","getPrevSibling","getNextSibling","getFirstChild","getSubTreeHeight","updateSubTreeHeight","delta","getIndexVersion","subNodes","createSubNodesRowControllers","createRootNodeController","createRowController","isExpanded","cachedAbsoluteIndex","cachedIndexVersion","indexRelativeToParent","sibling","parentAbsoluteIndex","thisRowIndex","removedNodeIds","removeNodes","hideSubNodes","createTreeGridView","table","columns","rows","nodeSelectedCallbacks","keyPressedCallbacks","onkeydown","ctrlKey","shiftKey","altKey","selectedTr","tbody","getTrNode","selectedNodeId","getTrNodeId","trToGo","keyCode","getTrIndex","childTr","parentNodeId","tr","findParentTr","parentTr","childNode","findExpandableChildTr","getTrToGo","handleTableKeyboardEvent","stopPropagation","defaultPrevented","document","createElement","appendChild","stringToTextNode","element","createTextNode","renderCell","rowIndex","colIndex","td","column","tdClass","getTdClass","classList","tdContents","htmlNode","map","applyTrClasses","className","getTrClasses","trClasses","scrollIntoViewIfNeeded","theController","cells","innerHTML","nodes","insertRow","setAttribute","onclick","insertCell","count","deletedNodeIds","deleteRow","newTbody","replaceChild","onKeyPressed","sectionRowIndex","nodeId","parseInt","getAttribute","isNaN","createDebounce","consumer","interval","optionalClock","timeoutId","bounce","createResizer","elements","minWidthPx","moveThresholdPx","gripElement","leftSideElement","rightSideElement","initial","last","saveBodyCursor","takeSnapshot","mouseX","pageX","leftWidth","clientWidth","rightWidth","onMouseMove","current","deltaX","style","width","onMouseUp","body","cursor","removeEventListener","onmousedown","assign","addEventListener","logSwitch","createDebugLog","component","globalVars","setEnabled","createSetEnabled","info","enableDebugLog","createEnableLogMessage","handleEnableLogMessage","postMessage","data","chrome","runtime","sendMessage","onMessage","addListener","request","sender","sendResponse","backgroundConnection"],"mappings":";;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,IARrB,CASGK,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,gBCnErDtC,EAAOD,QAfP,SAAyBwC,EAAKT,EAAKN,GAYjC,OAXIM,KAAOS,EACTtB,OAAOC,eAAeqB,EAAKT,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZqB,cAAc,EACdC,UAAU,IAGZF,EAAIT,GAAON,EAGNe,I,6BCXT,SAASG,EAAS/B,GACd,IAAK,IAAI0B,KAAK1B,EAAQZ,EAAQqC,eAAeC,KAAItC,EAAQsC,GAAK1B,EAAE0B,IAEpEpB,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAImB,EAAmB,EAAQ,IAC/B5C,EAAQ6C,cAAgBD,EAAiBE,QACzC,IAAIC,EAAO,EAAQ,IACnB/C,EAAQ+C,KAAOA,EACf,IAAIC,EAAO,EAAQ,IACfC,EAAc,EAAQ,IAC1BjD,EAAQkD,UAAYD,EAAYH,QAChC,IAAIK,EAAS,EAAQ,GACrBnD,EAAQoD,KAAOD,EAAOL,QACtB,IAAIO,EAAiB,EAAQ,IAC7BrD,EAAQsD,YAAcD,EAAeP,QACrC,IAAIS,EAAW,EAAQ,IACvBvD,EAAQwD,OAASD,EAASC,OAC1B,IAAIC,EAAgB,EAAQ,IAC5BzD,EAAQ0D,WAAaD,EAAcC,WACnCf,EAAS,EAAQ,KACjBA,EAAS,EAAQ,KACjBA,EAAS,EAAQ,KAEjBK,EAAKW,c,cChBL1D,EAAOD,QARP,SAAgC4D,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,I,cCLT,SAASE,EAAStB,GAA4T,OAA1OsB,EAArD,mBAAXvC,QAAoD,iBAApBA,OAAOwC,SAAoC,SAAkBvB,GAAO,cAAcA,GAA4B,SAAkBA,GAAO,OAAOA,GAAyB,mBAAXjB,QAAyBiB,EAAIwB,cAAgBzC,QAAUiB,IAAQjB,OAAOa,UAAY,gBAAkBI,IAA0BA,GAE9V,SAASyB,EAAQzB,GAWf,MAVsB,mBAAXjB,QAAuD,WAA9BuC,EAASvC,OAAOwC,UAClD9D,EAAOD,QAAUiE,EAAU,SAAiBzB,GAC1C,OAAOsB,EAAStB,IAGlBvC,EAAOD,QAAUiE,EAAU,SAAiBzB,GAC1C,OAAOA,GAAyB,mBAAXjB,QAAyBiB,EAAIwB,cAAgBzC,QAAUiB,IAAQjB,OAAOa,UAAY,SAAW0B,EAAStB,IAIxHyB,EAAQzB,GAGjBvC,EAAOD,QAAUiE,G,cChBjB,SAASC,EAAgBjD,GAIvB,OAHAhB,EAAOD,QAAUkE,EAAkBhD,OAAOiD,eAAiBjD,OAAOkD,eAAiB,SAAyBnD,GAC1G,OAAOA,EAAEoD,WAAanD,OAAOkD,eAAenD,IAEvCiD,EAAgBjD,GAGzBhB,EAAOD,QAAUkE,G,cCDjBjE,EAAOD,QANP,SAAyBsE,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,uC,gBCFxB,IAAIP,EAAU,EAAQ,GAElBQ,EAAwB,EAAQ,GAUpCxE,EAAOD,QARP,SAAoC4D,EAAMjD,GACxC,OAAIA,GAA2B,WAAlBsD,EAAQtD,IAAsC,mBAATA,EAI3C8D,EAAsBb,GAHpBjD,I,gBCNX,IAAIwD,EAAiB,EAAQ,IAiB7BlE,EAAOD,QAfP,SAAmB0E,EAAUC,GAC3B,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIH,UAAU,sDAGtBE,EAAStC,UAAYlB,OAAOY,OAAO6C,GAAcA,EAAWvC,UAAW,CACrE4B,YAAa,CACXvC,MAAOiD,EACPhC,UAAU,EACVD,cAAc,KAGdkC,GAAYR,EAAeO,EAAUC,K,6BCb3CzD,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAImD,EAAO,EAAQ,IAOfxB,EAAsB,WACtB,SAASA,KAgMT,OAtLAA,EAAKhB,UAAUyC,QAAU,WACrB,OAAOC,KAAKC,YAOhB3B,EAAKhB,UAAU4C,OAAS,WACpB,OAAOF,KAAKG,WAOhB7B,EAAKhB,UAAU8C,iBAAmB,SAAUnE,GAExC,OADA+D,KAAKK,kBAAkBpE,GAChB+D,MAsBX1B,EAAKhB,UAAUgD,eAAiB,SAAUrD,EAAKN,GAE3C,OADAqD,KAAKO,gBAAgBtD,EAAKN,GACnBqD,MAWX1B,EAAKhB,UAAUkD,eAAiB,SAAUvD,GACtC,OAAO+C,KAAKS,gBAAgBxD,IAQhCqB,EAAKhB,UAAUoD,OAAS,SAAUzD,EAAKN,GACnC,IAAIgE,EAGJ,OADAX,KAAKY,WAAUD,EAAK,IAAO1D,GAAON,EAAOgE,IAClCX,MAkBX1B,EAAKhB,UAAUuD,QAAU,SAAUC,GAE/B,OADAd,KAAKY,SAASE,GACPd,MA6BX1B,EAAKhB,UAAUyD,IAAM,SAAUC,EAAeC,GAE1C,OADAjB,KAAKkB,KAAKF,EAAeC,GAClBjB,MAKX1B,EAAKhB,UAAU6D,SAAW,SAAUC,EAAWC,GAC3C,OAAOrB,KAAKkB,KAAK,CAAEI,MAAOF,EAAWC,QAASA,KAelD/C,EAAKhB,UAAUiE,OAAS,SAAUC,GAC9BxB,KAAKyB,QAAQD,IAQjBlD,EAAKhB,UAAU2C,SAAW,WACtB,OAAOH,EAAK4B,aAOhBpD,EAAKhB,UAAU6C,QAAU,WACrB,OAAOL,EAAKI,QAGhB5B,EAAKhB,UAAU+C,kBAAoB,SAAUpE,KAG7CqC,EAAKhB,UAAUiD,gBAAkB,SAAUtD,EAAKN,KAGhD2B,EAAKhB,UAAUmD,gBAAkB,SAAUxD,KAO3CqB,EAAKhB,UAAUsD,SAAW,SAAUI,KAGpC1C,EAAKhB,UAAU4D,KAAO,SAAUF,EAAeC,KAK/C3C,EAAKhB,UAAUmE,QAAU,SAAUD,KAE5BlD,EAjMc,GAmMzBpD,EAAQoD,KAAOA,EACfpD,EAAQ8C,QAAUM,G,cC7MlB,SAASqD,EAAkBC,EAAQC,GACjC,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAMC,OAAQpG,IAAK,CACrC,IAAIqG,EAAaF,EAAMnG,GACvBqG,EAAWzF,WAAayF,EAAWzF,aAAc,EACjDyF,EAAWpE,cAAe,EACtB,UAAWoE,IAAYA,EAAWnE,UAAW,GACjDxB,OAAOC,eAAeuF,EAAQG,EAAW9E,IAAK8E,IAUlD5G,EAAOD,QANP,SAAsBuE,EAAauC,EAAYC,GAG7C,OAFID,GAAYL,EAAkBlC,EAAYnC,UAAW0E,GACrDC,GAAaN,EAAkBlC,EAAawC,GACzCxC,I,6BCZTrD,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI0B,EAAS,EAAQ,GACjBE,EAAiB,EAAQ,IACzBE,EAAW,EAAQ,IACvBvD,EAAQgF,OAAS,KACjBhF,EAAQwG,YAAc,KACtBxG,EAAQgH,KAAO,KAQfhH,EAAQ2D,WALR,WACI3D,EAAQgF,OAAS,IAAIzB,EAAST,QAC9B9C,EAAQgH,KAAO,IAAI7D,EAAOL,QAC1B9C,EAAQwG,YAAc,IAAInD,EAAeP,U,6BCZ7C5B,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAIwF,EAAY,EAAQ,IACpBjE,EAAO,EAAQ,IACfG,EAAS,EAAQ,GAYjBK,EAAwB,WACxB,SAASA,KA6HT,OAhGAA,EAAOpB,UAAU8E,UAAY,SAAUnG,EAAMoG,GAGzC,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCA,EAAQC,QAAS,CAEjB,IAAIA,EAAUH,EAAUG,QAAQD,EAAQC,SACpCD,EAAQE,WACRF,EAAQE,WAAWC,KAAKF,GAGxBD,EAAQE,WAAa,CAACD,UAElBD,EAAe,QAE3B,OAAOrC,KAAKyC,WAAWxG,EAAMoG,IA+BjC3D,EAAOpB,UAAUoF,OAAS,SAAUhB,EAAaiB,EAAQC,GAKrD,OAHIlB,aAAuBrD,EAAOL,UAC9B0D,EAAcA,EAAY3B,WAEvBC,KAAK6C,QAAQnB,EAAaiB,EAAQC,IAwB7ClE,EAAOpB,UAAUwF,QAAU,SAAUH,EAAQC,GACzC,OAAO5C,KAAK+C,SAASJ,EAAQC,IAWjClE,EAAOpB,UAAUmF,WAAa,SAAUxG,EAAM+G,GAC1C,OAAO9E,EAAKgE,MAGhBxD,EAAOpB,UAAUuF,QAAU,SAAUnB,EAAaiB,EAAQC,KAG1DlE,EAAOpB,UAAUyF,SAAW,SAAUJ,EAAQC,GAC1C,OAAO1E,EAAKwD,aAEThD,EA9HgB,GAgI3BxD,EAAQwD,OAASA,EACjBxD,EAAQ8C,QAAUU,G,cCjJlB,SAASuE,EAAgB9G,EAAGqB,GAM1B,OALArC,EAAOD,QAAU+H,EAAkB7G,OAAOiD,gBAAkB,SAAyBlD,EAAGqB,GAEtF,OADArB,EAAEoD,UAAY/B,EACPrB,GAGF8G,EAAgB9G,EAAGqB,GAG5BrC,EAAOD,QAAU+H,G,6BCRjB7G,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IAWtD,IAAI6B,EAA6B,WAC7B,SAASA,KAmBT,OAXAA,EAAYlB,UAAU4F,UAAY,WAC9B,MAAO,IAOX1E,EAAYlB,UAAU6F,SAAW,WAC7B,MAAO,IAEJ3E,EApBqB,GAsBhCtD,EAAQsD,YAAcA,EACtBtD,EAAQ8C,QAAUQ,G,6BClClBpC,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAIyG,EAAY,EAAQ,IACpBjF,EAAc,EAAQ,IACtBE,EAAS,EAAQ,GAerBnD,EAAQoH,QAPR,SAAiBZ,GAKb,OAHIA,aAAuBrD,EAAOL,UAC9B0D,EAAcA,EAAY3B,WAEvB,IAAI5B,EAAYH,QAAQoF,EAAUC,mBAAoB3B,IAiBjExG,EAAQoI,YAPR,SAAqB5B,GAKjB,OAHIA,aAAuBrD,EAAOL,UAC9B0D,EAAcA,EAAY3B,WAEvB,IAAI5B,EAAYH,QAAQoF,EAAUG,uBAAwB7B,K,6BC/BrEtF,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IActDzB,EAAQsI,cAAgB,SAcxBtI,EAAQuI,gBAAkB,WAiB1BvI,EAAQwI,oBAAsB,eAO9BxI,EAAQmI,mBAAqB,WAQ7BnI,EAAQqI,uBAAyB,gB,6BC5DjCnH,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI0B,EAAS,EAAQ,GAOjBD,EAA2B,WAU3B,SAASA,EAAUuF,EAAMC,GACrB5D,KAAK6D,MAAQF,EACb3D,KAAK8D,mBAAsBF,aAA6BvF,EAAOL,QAC3D4F,EAAkB7D,UAClB6D,EAgBR,OAVAxF,EAAUd,UAAUqG,KAAO,WACvB,OAAO3D,KAAK6D,OAMhBzF,EAAUd,UAAUsG,kBAAoB,WACpC,OAAO5D,KAAK8D,oBAET1F,EA9BmB,GAgC9BlD,EAAQ8C,QAAUI,G,6BCxClB,IACQ2F,EADJC,EAAahE,MAAQA,KAAKgE,YACtBD,EAAgB,SAAU/H,EAAGiI,GAI7B,OAHAF,EAAgB3H,OAAOiD,gBAClB,CAAEE,UAAW,cAAgB2E,OAAS,SAAUlI,EAAGiI,GAAKjI,EAAEuD,UAAY0E,IACvE,SAAUjI,EAAGiI,GAAK,IAAK,IAAIzG,KAAKyG,EAAOA,EAAE1G,eAAeC,KAAIxB,EAAEwB,GAAKyG,EAAEzG,MACpDxB,EAAGiI,IAErB,SAAUjI,EAAGiI,GAEhB,SAASE,IAAOnE,KAAKd,YAAclD,EADnC+H,EAAc/H,EAAGiI,GAEjBjI,EAAEsB,UAAkB,OAAN2G,EAAa7H,OAAOY,OAAOiH,IAAME,EAAG7G,UAAY2G,EAAE3G,UAAW,IAAI6G,KAGvF/H,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAKIyH,EAA6B,SAAUC,GAEvC,SAASD,EAAYlC,GACjB,IAAIoC,EAAQD,EAAOxI,KAAKmE,OAASA,KAIjC,OADAsE,EAAMC,MAAQrC,EACPoC,EAKX,OAXAN,EAAUI,EAAaC,GAQvBD,EAAY9G,UAAU4E,KAAO,WACzB,OAAOlC,KAAKuE,OAETH,EAZqB,CALd,EAAQ,GAkBZ5F,aACdtD,EAAQkJ,YAAcA,EACtBlJ,EAAQ8C,QAAUoG,G,6BCjClB,IACQL,EADJC,EAAahE,MAAQA,KAAKgE,YACtBD,EAAgB,SAAU/H,EAAGiI,GAI7B,OAHAF,EAAgB3H,OAAOiD,gBAClB,CAAEE,UAAW,cAAgB2E,OAAS,SAAUlI,EAAGiI,GAAKjI,EAAEuD,UAAY0E,IACvE,SAAUjI,EAAGiI,GAAK,IAAK,IAAIzG,KAAKyG,EAAOA,EAAE1G,eAAeC,KAAIxB,EAAEwB,GAAKyG,EAAEzG,MACpDxB,EAAGiI,IAErB,SAAUjI,EAAGiI,GAEhB,SAASE,IAAOnE,KAAKd,YAAclD,EADnC+H,EAAc/H,EAAGiI,GAEjBjI,EAAEsB,UAAkB,OAAN2G,EAAa7H,OAAOY,OAAOiH,IAAME,EAAG7G,UAAY2G,EAAE3G,UAAW,IAAI6G,KAGvF/H,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI6H,EAAc,EAAQ,GACtBC,EAAiB,EAAQ,IAIzBC,EAA0B,SAAUL,GAKpC,SAASK,EAASxE,GACd,IAAIoE,EAAQD,EAAOxI,KAAKmE,OAASA,KAQjC,OAPAsE,EAAMK,YAAczE,EACpBoE,EAAMM,MAAQN,EAAMO,gBACpBP,EAAMQ,SAAWC,KAAKC,MACtBV,EAAMW,UAAY,EAClBX,EAAMY,eAAiB,GACvBZ,EAAMa,MAAQ,GACdb,EAAMc,MAAQ,GACPd,EA+DX,OA5EAN,EAAUU,EAAUL,GAkBpBK,EAASpH,UAAU2C,SAAW,WAC1B,OAAO,IAAIwE,EAAezG,QAAQgC,OAEtC0E,EAASpH,UAAU+C,kBAAoB,SAAUpE,GAC7C+D,KAAKkF,eAAiBjJ,GAE1ByI,EAASpH,UAAUsD,SAAW,SAAUyE,GAEpC,IADA,IACSC,EAAK,EAAGC,EADNnJ,OAAOoJ,KAAKH,GACSC,EAAKC,EAAOzD,OAAQwD,IAAM,CACtD,IAAIrI,EAAMsI,EAAOD,GACjBtF,KAAKmF,MAAMlI,GAAOoI,EAAIpI,KAG9ByH,EAASpH,UAAU4D,KAAO,SAAU8B,EAAQ/B,GACxCjB,KAAKoF,MAAM5C,KAAK,CACZQ,OAAQA,EACR/B,UAAWA,KAGnByD,EAASpH,UAAUmE,QAAU,SAAUD,GACnCxB,KAAKiF,UAAYzD,GAAcuD,KAAKC,OAExCN,EAASpH,UAAUmI,KAAO,WACtB,OAAOzF,KAAK4E,OAEhBF,EAASpH,UAAUoI,cAAgB,WAC/B,OAAO1F,KAAKkF,gBAEhBR,EAASpH,UAAUqI,WAAa,WAC5B,OAAO3F,KAAKiF,UAAYjF,KAAK8E,UAEjCJ,EAASpH,UAAUsI,KAAO,WACtB,OAAO5F,KAAKmF,OAEhBT,EAASpH,UAAU4C,OAAS,WACxB,OAAOF,KAAK2E,aAEhBD,EAASpH,UAAUuH,cAAgB,WAG/B,MAAO,IAFG,WAAagB,KAAKC,IAAqB,WAAhBD,KAAKE,SAAyB,GAAGC,SAAS,KAAKC,QAAQ,IAC9E,WAAaJ,KAAKC,IAAqB,WAAhBD,KAAKE,SAAyB,GAAGC,SAAS,KAAKC,QAAQ,IAG5FvB,EAASpH,UAAU4I,aAAe,SAAUC,KAK5CzB,EAASpH,UAAU8I,MAAQ,WACvB,IAAI1I,EAAM,CACN+H,KAAMzF,KAAK4E,MACXyB,UAAWrG,KAAKkF,eAChBoB,OAAQ,CAACtG,KAAKiF,UAAYjF,KAAK8E,SAAU9E,KAAK8E,SAAU9E,KAAKiF,YAKjE,OAHI7I,OAAOoJ,KAAKxF,KAAKmF,OAAOrD,SACxBpE,EAAIkI,KAAO5F,KAAKmF,OAEbzH,GAEJgH,EA7EkB,CA8E3BF,EAAYlG,MACdpD,EAAQwJ,SAAWA,EACnBxJ,EAAQ8C,QAAU0G,G,gBCrGlB,IAAIpF,EAAiB,EAAQ,GAEzBD,EAAiB,EAAQ,IAEzBkH,EAAmB,EAAQ,IAE3BC,EAAY,EAAQ,IAExB,SAASC,EAAiBC,GACxB,IAAIC,EAAwB,mBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BA1L,EAAOD,QAAUuL,EAAmB,SAA0BC,GAC5D,GAAc,OAAVA,IAAmBH,EAAiBG,GAAQ,OAAOA,EAEvD,GAAqB,mBAAVA,EACT,MAAM,IAAIhH,UAAU,sDAGtB,QAAsB,IAAXiH,EAAwB,CACjC,GAAIA,EAAOG,IAAIJ,GAAQ,OAAOC,EAAOpK,IAAImK,GAEzCC,EAAOtB,IAAIqB,EAAOK,GAGpB,SAASA,IACP,OAAOP,EAAUE,EAAOM,UAAW1H,EAAeU,MAAMd,aAW1D,OARA6H,EAAQzJ,UAAYlB,OAAOY,OAAO0J,EAAMpJ,UAAW,CACjD4B,YAAa,CACXvC,MAAOoK,EACPzK,YAAY,EACZsB,UAAU,EACVD,cAAc,KAGX0B,EAAe0H,EAASL,IAG1BD,EAAiBC,GAG1BvL,EAAOD,QAAUuL,G,gBC1CjB,IAAIQ,EAAoB,EAAQ,IAE5BC,EAAkB,EAAQ,IAE1BC,EAAoB,EAAQ,IAMhChM,EAAOD,QAJP,SAA4BkM,GAC1B,OAAOH,EAAkBG,IAAQF,EAAgBE,IAAQD,M,6BCN3D/K,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IAOtD,IAAIoB,EACA,SAAuBsJ,GACnBrH,KAAKqH,OAASA,GAItBnM,EAAQ8C,QAAUD,G,6BCblB3B,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IAEtDzB,EAAQoM,UAAY,YAEpBpM,EAAQqM,qBAAuB,SAE/BrM,EAAQsM,qBAAuB,SAE/BtM,EAAQuM,6BAA+B,WAEvCvM,EAAQwM,6BAA+B,WAKvCxM,EAAQyM,MAAQ,QAKhBzM,EAAQ0M,UAAY,YAOpB1M,EAAQ2M,kBAAoB,oBAS5B3M,EAAQ4M,aAAe,eAEvB5M,EAAQ6M,cAAgB,gBAMxB7M,EAAQ8M,aAAe,eAKvB9M,EAAQ+M,eAAiB,YAGzB/M,EAAQgN,eAAiB,YAEzBhN,EAAQiN,UAAY,YAQpBjN,EAAQkN,SAAW,WAKnBlN,EAAQmN,YAAc,cAKtBnN,EAAQoN,iBAAmB,mBAS3BpN,EAAQqN,wBAA0B,0BAQlCrN,EAAQsN,YAAc,cAMtBtN,EAAQuN,aAAe,eAKvBvN,EAAQwN,QAAU,UAKlBxN,EAAQyN,QAAU,W,6BCzGlBvM,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI8H,EAAiB,EAAQ,IAC7BvJ,EAAQkJ,YAAcK,EAAezG,QACrC,IAAI4K,EAAc,EAAQ,IAC1B1N,EAAQwJ,SAAWkE,EAAY5K,QAC/B,IAAIW,EAAgB,EAAQ,IAC5BzD,EAAQ0D,WAAaD,EAAcX,S,6BCNnC,IACQ+F,EADJC,EAAahE,MAAQA,KAAKgE,YACtBD,EAAgB,SAAU/H,EAAGiI,GAI7B,OAHAF,EAAgB3H,OAAOiD,gBAClB,CAAEE,UAAW,cAAgB2E,OAAS,SAAUlI,EAAGiI,GAAKjI,EAAEuD,UAAY0E,IACvE,SAAUjI,EAAGiI,GAAK,IAAK,IAAIzG,KAAKyG,EAAOA,EAAE1G,eAAeC,KAAIxB,EAAEwB,GAAKyG,EAAEzG,MACpDxB,EAAGiI,IAErB,SAAUjI,EAAGiI,GAEhB,SAASE,IAAOnE,KAAKd,YAAclD,EADnC+H,EAAc/H,EAAGiI,GAEjBjI,EAAEsB,UAAkB,OAAN2G,EAAa7H,OAAOY,OAAOiH,IAAME,EAAG7G,UAAY2G,EAAE3G,UAAW,IAAI6G,KAGvF/H,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IAEtD,IAAI6H,EAAc,EAAQ,GACtBqE,EAAgB,EAAQ,IACxBD,EAAc,EAAQ,IAItBhK,EAA4B,SAAUyF,GAKtC,SAASzF,IACL,IAAI0F,EAAQD,EAAOxI,KAAKmE,OAASA,KAEjC,OADAsE,EAAMwE,OAAS,GACRxE,EA4CX,OAnDAN,EAAUpF,EAAYyF,GAYtBzF,EAAWtB,UAAUmF,WAAa,SAAUxG,EAAM+G,GAI9C,IAAId,EAAOlC,KAAK+I,aAGhB,GAFA7G,EAAK9B,iBAAiBnE,GACtB+D,KAAK8I,OAAOtG,KAAKN,GACbc,EAAOT,WACP,IAAK,IAAI+C,EAAK,EAAG3E,EAAKqC,EAAOT,WAAY+C,EAAK3E,EAAGmB,OAAQwD,IAAM,CAC3D,IAAIa,EAAMxF,EAAG2E,GACbpD,EAAKgE,aAAaC,GAK1B,OADAjE,EAAK8G,aAAc,IAAIC,OAAQC,MACxBhH,GAEXtD,EAAWtB,UAAUuF,QAAU,SAAUX,EAAMS,EAAQC,GACnD,MAAM,IAAIqG,MAAM,wBAEpBrK,EAAWtB,UAAUyF,SAAW,SAAUJ,EAAQC,GAC9C,MAAM,IAAIqG,MAAM,wBAEpBrK,EAAWtB,UAAUyL,WAAa,WAC9B,OAAO,IAAIH,EAAY5K,QAAQgC,OAKnCpB,EAAWtB,UAAU6L,MAAQ,WACzBnJ,KAAK8I,OAAS,IAMlBlK,EAAWtB,UAAU8L,OAAS,WAC1B,OAAO,IAAIP,EAAc7K,QAAQgC,KAAK8I,SAEnClK,EApDoB,CAqD7B4F,EAAY9F,QACdxD,EAAQ0D,WAAaA,EACrB1D,EAAQ8C,QAAUY,G,6BC5ElBxC,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IAKtD,IAAI0M,EAA4B,WAC5B,SAASA,EAAWC,GAChB,IAAIhF,EAAQtE,KACZA,KAAKsJ,MAAQA,EACbtJ,KAAKuJ,YAAc,GACnBvJ,KAAKwJ,WAAa,GAClBxJ,KAAKyJ,WAAa,GAClBzJ,KAAK0J,gBAAkB,GACvBJ,EAAMK,QAAQ,SAAUzH,GACG,IAAnBA,EAAK+C,WACLX,EAAMoF,gBAAgBlH,KAAKN,GAE/BoC,EAAMiF,YAAYrH,EAAKuD,QAAUvD,EACjCoC,EAAMmF,WAAWjH,KAAKN,EAAKkE,SAC3B,IAAIR,EAAO1D,EAAK0D,OAChBxJ,OAAOoJ,KAAKI,GAAM+D,QAAQ,SAAU1M,GAChC,IAAI2M,EAAMhE,EAAK3I,GACfqH,EAAMkF,WAAWvM,GAAOqH,EAAMkF,WAAWvM,IAAQ,GACjDqH,EAAMkF,WAAWvM,GAAK2M,GAAOtF,EAAMkF,WAAWvM,GAAK2M,IAAQ,GAC3DtF,EAAMkF,WAAWvM,GAAK2M,GAAKpH,KAAKN,OAe5C,OAXAmH,EAAW/L,UAAUuM,sBAAwB,SAAU5M,EAAK2M,GACxD,IAAI9N,EAAIkE,KAAKwJ,WAAWvM,GACxB,IAAKnB,EACD,OAAO,KAEX,IAAIqB,EAAIrB,EAAE8N,GACV,OAAKzM,EAGEA,EAAE,GAFE,MAIRkM,EAlCoB,GAoC/BnO,EAAQmO,WAAaA,EACrBnO,EAAQ8C,QAAUqL,G,6BC1ClB,IACQtF,EADJC,EAAahE,MAAQA,KAAKgE,YACtBD,EAAgB,SAAU/H,EAAGiI,GAI7B,OAHAF,EAAgB3H,OAAOiD,gBAClB,CAAEE,UAAW,cAAgB2E,OAAS,SAAUlI,EAAGiI,GAAKjI,EAAEuD,UAAY0E,IACvE,SAAUjI,EAAGiI,GAAK,IAAK,IAAIzG,KAAKyG,EAAOA,EAAE1G,eAAeC,KAAIxB,EAAEwB,GAAKyG,EAAEzG,MACpDxB,EAAGiI,IAErB,SAAUjI,EAAGiI,GAEhB,SAASE,IAAOnE,KAAKd,YAAclD,EADnC+H,EAAc/H,EAAGiI,GAEjBjI,EAAEsB,UAAkB,OAAN2G,EAAa7H,OAAOY,OAAOiH,IAAME,EAAG7G,UAAY2G,EAAE3G,UAAW,IAAI6G,KAGvF/H,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI8B,EAAW,EAAQ,IACnBqL,EAAa,IAAIrL,EAAST,QAC1B+L,EAAgB,KA+BhBC,EAAuB,IAnBe,SAAU3F,GAEhD,SAAS4F,IACL,OAAkB,OAAX5F,GAAmBA,EAAO6F,MAAMlK,KAAMgH,YAAchH,KAc/D,OAhBAgE,EAAUiG,EAAsB5F,GAIhC4F,EAAqB3M,UAAU8E,UAAY,WACvC,IAAIlC,EAAS6J,GAAiBD,EAC9B,OAAO5J,EAAOkC,UAAU8H,MAAMhK,EAAQ8G,YAE1CiD,EAAqB3M,UAAUoF,OAAS,WACpC,IAAIxC,EAAS6J,GAAiBD,EAC9B,OAAO5J,EAAOwC,OAAOwH,MAAMhK,EAAQ8G,YAEvCiD,EAAqB3M,UAAUwF,QAAU,WACrC,IAAI5C,EAAS6J,GAAiBD,EAC9B,OAAO5J,EAAO4C,QAAQoH,MAAMhK,EAAQ8G,YAEjCiD,EAjB8B,CAkBvCxL,EAAST,UAYX9C,EAAQiP,iBAHR,SAA0BjK,GACtB6J,EAAgB7J,GAapBhF,EAAQkP,aAPR,WAKI,OAAOJ,I,cChEX7O,EAAOD,QAJP,SAA2BmP,GACzB,OAAgE,IAAzDC,SAAStE,SAASnK,KAAKwO,GAAIE,QAAQ,mB,gBCD5C,IAAIlL,EAAiB,EAAQ,IAe7B,SAASmL,EAAWC,EAAQC,EAAMhE,GAchC,OA3BF,WACE,GAAuB,oBAAZiE,UAA4BA,QAAQnE,UAAW,OAAO,EACjE,GAAImE,QAAQnE,UAAUoE,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADA9F,KAAKzH,UAAU0I,SAASnK,KAAK8O,QAAQnE,UAAUzB,KAAM,GAAI,gBAClD,EACP,MAAO+F,GACP,OAAO,GAKLC,GAGF5P,EAAOD,QAAUsP,EAAa,SAAoBC,EAAQC,EAAMhE,GAC9D,IAAIsE,EAAI,CAAC,MACTA,EAAExI,KAAK0H,MAAMc,EAAGN,GAChB,IACIlL,EAAW,IADG8K,SAASpN,KAAKgN,MAAMO,EAAQO,IAG9C,OADItE,GAAOrH,EAAeG,EAAUkH,EAAMpJ,WACnCkC,GARTrE,EAAOD,QAAUsP,EAAaG,QAAQnE,UAYjCgE,EAAWN,MAAM,KAAMlD,WAGhC7L,EAAOD,QAAUsP,G,cCtBjBrP,EAAOD,QAVP,SAA4BkM,GAC1B,GAAIlD,MAAM+G,QAAQ7D,GAAM,CACtB,IAAK,IAAI1L,EAAI,EAAGwP,EAAO,IAAIhH,MAAMkD,EAAItF,QAASpG,EAAI0L,EAAItF,OAAQpG,IAC5DwP,EAAKxP,GAAK0L,EAAI1L,GAGhB,OAAOwP,K,cCFX/P,EAAOD,QAJP,SAA0BiQ,GACxB,GAAI1O,OAAOwC,YAAY7C,OAAO+O,IAAkD,uBAAzC/O,OAAOkB,UAAU0I,SAASnK,KAAKsP,GAAgC,OAAOjH,MAAMkH,KAAKD,K,cCG1HhQ,EAAOD,QAJP,WACE,MAAM,IAAIwE,UAAU,qD,+JCQf,SAAS2L,EAAqBC,EAASC,EAAQlJ,GACpD,OAAO,IAAImJ,EAAeF,EAASC,EAAQlJ,G,IAGvCmJ,E,YAOJ,WAAYF,EAASC,EAAQlJ,GAAU,IAAD,qBACpC,8BADoC,2JAEpC,EAAKoJ,SAAWH,EAChB,EAAKI,YAAc,EACnB,EAAKC,OAAStJ,EAAQuJ,MACtB,EAAKC,cAAgBxJ,EAAQyJ,aAC7B,EAAKC,QAAUR,EAEfA,EAAOS,iBAAiB3J,EAAQuJ,MAAM5G,MAAOsG,GART,E,wDAoB3BrP,EAAMoG,GACf,OAAO,IAAI4J,EACTjM,KACAA,KAAK2L,OACL3L,KAAK+L,QACL/L,KAAK0L,cACLzP,EACAoG,K,8BAOIX,EAAaiB,EAAQC,M,+BAMpBD,EAAQC,GACf,OAAO,IAAIsJ,EAAoB,GAAI,M,mCAInC,OAAOlM,KAAKyL,W,uCAIZ,OAAOzL,KAAK2L,OAAO3G,U,GAxDMtG,UA4DvBuN,E,YAeJ,WAAY/L,EAAQ0L,EAAOL,EAAQY,EAAQlQ,EAAMoG,GAAU,IAAD,cACxD,8BADwD,mJAGxD,IAAMiJ,EAAUpL,EAAOkM,aAEvB,EAAKjM,QAAUD,EACf,EAAKyL,OAASC,EACd,EAAKG,QAAUR,EACf,EAAKc,aAAe,IAAIH,EAAoBZ,EAASa,GACrD,EAAKG,MAAQrQ,EAEb,IAAMsQ,EAAalK,GAAWA,EAAQkK,WAAcX,EAAM5G,MAXF,EAoL5D,SAAwB3C,GACtB,IAAIC,OAAUuE,EACVvD,OAAcuD,EAelB,OAbAxE,GACEA,EAAQE,YACRF,EAAQE,WAAWoH,QAAQ,SAAAxD,GACzB,OAAQA,EAAIxC,QACV,KAAKN,qBACHf,EAAU6D,EAAIvC,oBACd,MACF,KAAKL,yBACHD,EAAc6C,EAAIvC,uBAKnB,CACLtB,UACAgB,eA3LiCkJ,CAAenK,GAAxCC,EAZgD,EAYhDA,QAASgB,EAZuC,EAYvCA,YAZuC,OAcxDiI,EAAOkB,eACLF,EACAjB,EACAa,EACAlQ,EACA,CACEqG,QAASoK,EAAepK,GACxBgB,YAAaoJ,EAAepJ,IAE9BjB,EAAQuD,KACRtD,GAAWgB,OAAcuD,EAAY+E,EAAMe,SAxBW,E,wDAsDxD,OAAO3M,KAAKqM,e,gCAYZ,OAAOrM,KAAKG,U,wCAMIlE,GAChB,MAAM,IAAIgN,MAAM,qC,sCAOFhM,EAAKN,GACnB,MAAM,IAAIsM,MAAM,mC,sCAQFhM,M,+BAWP+D,GAAgB,IAAD,EACM0L,EAAe1M,KAAKqM,cAAxCf,EADc,EACdA,QAASa,EADK,EACLA,OACjBnM,KAAK+L,QAAQa,cACX5M,KAAK2L,OAAO3G,MACZsG,EACAa,EACAnL,K,2BAWCA,EAAeC,GAClB,IAAM4L,EAAO5L,GAAajB,KAAK2L,OAAO3G,MADT,EAED0H,EAAe1M,KAAKqM,cAAxCf,EAFqB,EAErBA,QAASa,EAFY,EAEZA,OACjBnM,KAAK+L,QAAQe,SACXD,EACAvB,EACAa,EACAnL,EAAc+L,IACd/L,K,8BAcIQ,GACN,IAAMwL,EAAsBxL,GAAcxB,KAAK2L,OAAO3G,MADpC,EAEU0H,EAAe1M,KAAKqM,cAAxCf,EAFU,EAEVA,QAASa,EAFC,EAEDA,OACjBnM,KAAK+L,QAAQkB,aAAaD,EAAqB1B,EAASa,O,GA7JjC7N,QAsKrB4N,E,YAIJ,WAAYZ,EAASa,GAAS,IAAD,qBAC3B,8BAD2B,2DAE3B,EAAKV,SAAWH,EAChB,EAAK4B,QAAUf,EAHY,E,yDAY3B,OAAOnM,KAAKyL,W,iCASZ,OAAOzL,KAAKkN,Y,GAzBkB1O,eAoD3B,SAASkO,EAAe3M,GAC7B,GAAIA,EACF,MAAO,CACLuL,QAASvL,EAAQmD,YACjBiJ,OAAQpM,EAAQoD,YAKf,SAASgK,EAAT,GAA8C,IAApB7B,EAAmB,EAAnBA,QAASa,EAAU,EAAVA,OACxC,OAAO,IAAID,EAAoBZ,EAASa,G,oBC7SnC,SAASiB,EAAkBzQ,GAChC,IAAKA,EACH,OAAO,EAET,IAAMgH,EAAO,IAAOhH,GACpB,GAAa,aAATgH,EACF,OAAO,EAET,GAAa,WAATA,EAAmB,CACrB,GAAIO,MAAM+G,QAAQtO,GAAQ,CACxB,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAMmF,OAAQpG,IAChC,IAAK0R,EAAkBzQ,EAAMjB,IAC3B,OAAO,EAGX,OAAO,EAET,OAAO,EAET,OAAO,EAGF,SAAS2R,EAAoBzH,EAAM0H,GACpC1H,EAAK2H,OAAS3H,EAAK2H,MAAMC,UAC3B5H,EAAK2H,MAAMC,UAAUhL,KAAK8K,GAE1B1H,EAAK2H,MAAQ,CACXC,UAAW,CAACF,ICxBX,SAASG,EAAqBpL,GACnC,IAAMqL,EAAkBrL,GAAWA,EAAQsL,UACvCC,EAAU,GACVC,GAAYxL,KAAYA,EAAQyL,QAChCC,EAAmB,GACnBC,EAAqB,EAEzB,MAAO,CACLhC,iBADK,SACYa,EAAMvB,EAAS1F,GACzBiI,GAGLD,EAAQpL,KAAK,CACXqK,OACAoB,MAAO,cACP3C,UACA1F,KAAMsI,EAAmBtI,MAG7B6G,eAZK,SAYUI,EAAMvB,EAASa,EAAQgC,EAAW5L,EAAYqD,EAAM+G,GACjE,GAAKkB,EAAL,CADwE,IAIhEvL,EAAyBC,EAAzBD,QAASgB,EAAgBf,EAAhBe,YACjBsK,EAAQpL,KAAK,CACXqK,OACAF,QACAsB,MAAO,YACP3C,UACAa,SACA7J,UACAgB,cACA6K,YACAvI,KAAMsI,EAAmBtI,OAG7BqH,aA7BK,SA6BQJ,EAAMvB,EAASa,EAAQvG,GAC7BiI,GAGLD,EAAQpL,KAAK,CACXqK,OACAoB,MAAO,UACP3C,UACAa,SACAvG,KAAMsI,EAAmBtI,MAG7BkH,SAzCK,SAyCID,EAAMvB,EAASa,EAAQgC,EAAWvI,GACpCiI,GAGLD,EAAQpL,KAAK,CACXqK,OACAoB,MAAO,MACP3C,UACAa,SACAgC,YACAvI,KAAMsI,EAAmBtI,MAG7BgH,cAtDK,SAsDSC,EAAMvB,EAASa,EAAQvG,GAC9BiI,GAGLD,EAAQpL,KAAK,CACXqK,OACAoB,MAAO,WACP3C,UACAa,SACAvG,KAAMsI,EAAmBtI,MAG7BwI,OAlEK,SAkEEzR,GAELkR,OADwC,IAAVlR,KAAiCA,GAGjE0R,YAtEK,WAuEH,OAAOT,GAETU,YAzEK,WA0EH,IAAMC,EAAgBX,EAKtB,OAJAA,EAAU,GACLF,GACHa,EAAc5E,QAAQ,SAAA6E,GAAK,OAAIC,EAAcD,EAAM5I,QAE9C2I,GAETG,SAjFK,WAkFHd,EAAU,GACVG,EAAmB,IAErBY,gBArFK,SAqFWC,GACd,IAAKlB,EACH,MAAM,IAAIzE,MAAM,+CAGlB,IAAI4F,EAAS,GAKb,OAJAD,EAAIjF,QAAQ,SAAAmF,GACVD,EAAOC,GAAMf,EAAiBe,GAC9BL,EAAcV,EAAiBe,MAE1BD,IAIX,SAASX,EAAmBtI,GAC1B,IAAKA,EACH,MAAO,GAET,GAAI8H,GAAmBtR,OAAOoJ,KAAKI,GAAM9D,OAAS,EAAG,CACnD,IAAMiN,EAAOf,IAEb,OADAD,EAAiBgB,GAAQnJ,EAClB,CAAEmJ,QAEX,OAAOnJ,EAGT,SAAS6I,EAAc7I,GACrB,IAAIoJ,EAEJ,GAAoB,WAAhB,IAAOpJ,GAGT,IAAK,IAAI3I,KAFT+R,EAAiB,IAAIC,IAELrJ,EAAM,CACpB,IAAMjJ,EAAQiJ,EAAK3I,GAEdmQ,EAAkBzQ,KACrB0Q,EAAoBzH,EAAM3I,GAC1B2I,EAAK3I,GAAOiS,EAAcvS,IAKhC,SAASuS,EAAcxR,GACrB,IAAIyR,EAAO,KACX,IACEA,EAAOC,KAAK5B,UAAU9P,GACtB,MAAO2R,GACPF,EAAOC,KAAK5B,UAAU9P,EAAK4R,GAE7B,OAAIH,GAAQA,EAAKrN,OAAS,MACjBqN,EAAKlJ,OAAO,EAAG,OAAS,aAE1BkJ,EAGT,SAASG,EAA0BrS,EAAKN,GACtC,GAAqB,WAAjB,IAAOA,IAAgC,OAAVA,EAAgB,CAC/C,GAAIqS,EAAelI,IAAInK,GACrB,MAAO,SAETqS,EAAeO,IAAI5S,GAErB,OAAOA,I,qBC7JN,SAAS6S,EAAwBpO,GACtC,IAAIqO,EAAc,GAEZC,EAAW,CACfH,IADe,SACXI,GACFD,EAASE,OAAOD,GAChBF,EAAYjN,KAAKmN,IAEnBC,OALe,SAKRD,GACLF,EAAcA,EAAYI,OAAO,SAAApS,GAAC,OAAIA,IAAMkS,KAE9CG,OARe,WAQE,IAAD,uBAANpF,EAAM,yBAANA,EAAM,gBACd+E,EAAY9F,QAAQ,SAAAgG,GAClB,IACEA,EAAU,WAAV,EAAcjF,GACd,MAAOI,GACPiF,QAAQhP,IAAR,iBAAsBK,EAAtB,wBAAuD0J,QAM/D,OAAO4E,ECpBT,IAAMM,EAAkB1U,OAAO2U,QAExB,SAASC,IACd5U,OAAO2U,QAAUD,EAGZ,SAASG,IACd,IAAIC,EAAgB,IAAIxJ,IAElByJ,EAAmB,kBAAMD,GACzBE,EAAqB,kBAAM,IAAI1J,IAAIwJ,EAAcxC,YACjD2C,EAAkBf,EACtB,wCAEIgB,EAAiBhB,EACrB,uCAGEiB,EAAiB,EAEfC,EAdmC,YAevC,WAAYC,GAAW,YACrB,IAAMC,EAAeR,EACfS,EAAaP,IACbQ,EAAiBL,IAHH,iCAOd,SAASM,EAASC,GAqBtBZ,EAAgBS,EAChB,IACE,OAAOF,EAtBc,SAAAhU,GACrByT,EAAgBS,EAChB,IAEEN,EAAgBT,OAAOnT,EAAOmU,GAC9BC,EAAQpU,GAHV,QAKEyT,EAAgBQ,IAGE,SAAAK,GACpBb,EAAgBS,EAChB,IAEEL,EAAeV,OAAOmB,EAAOH,GAC7BE,EAAOC,GAHT,QAKEb,EAAgBQ,KAIpB,QAGER,EAAgBQ,MA/CiB,uBAcZX,UAyC7B,OAFA3U,OAAO2U,QAAUS,EAEV,CACLQ,iBADK,SACYC,GACf,IAAMlU,EAAM,GAEZ,OADAoT,IAAmBhL,IAAIpI,EAAKkU,GACrB,CACL5U,IADK,WAEH,OAAO8T,IAAmB9T,IAAIU,IAEhCoI,IAJK,SAID+L,GACFf,IAAmBhL,IAAIpI,EAAKmU,IAE9BxB,OAPK,WAQHS,IAAgB,OAAUpT,MAIhCqT,qBACAe,yBAjBK,SAiBoBC,GACvBf,EAAgBhB,IAAI+B,IAEtBC,wBApBK,SAoBmBD,GACtBd,EAAejB,IAAI+B,KCpFlB,IAAME,EAAY,CACvBpL,MAAO,EACP9E,MAAO,EACPmQ,QAAS,EACTR,MAAO,EACPS,SAAU,GC6CL,SAASC,EAA0BC,GACxC,IAAMC,EAAeD,EAAmBV,mBAClCY,EAAaF,EAAmBV,mBAEhCa,EAAkB,SAAAnM,GACtB,IAAM1D,EAAO4P,EAAWvV,MACpB2F,GACFA,EAAKnB,IAAI6E,IA2Bb,OAvBAgM,EAAmBP,yBAAyB,SAAA1U,GAE1CoV,EAAgB,CACdhF,IAAK,aACLiF,OAAQ,OACRC,MAAOT,EAAUpL,MACjBzJ,YAIJiV,EAAmBL,wBAAwB,SAAAlC,GAEzC0C,EAAgB,CACdhF,IAAK,cACLiF,OAAQ,QACRC,MAAOT,EAAUP,MACjBA,MAAO,CACLiB,QAAS7C,EAAI6C,QACbhJ,MAAOmG,EAAInG,WAKV,CACLiJ,gBADK,WAEH,OAAON,EAAatV,OAEtB6V,cAJK,WAKH,OAAON,EAAWvV,OAEpB8V,gBAPK,SAOWnS,GACd2R,EAAaxM,IAAInF,IAEnBoS,cAVK,SAUSpQ,GACZ4P,EAAWzM,IAAInD,KAKd,SAASqQ,K,2iBCvFT,IAAMC,EAAkB,WAC7B,MAAO,CACLxN,IADK,WAEH,OAAOyN,YAAYzN,OAErB2H,MAJK,WAKH,OAAO,IAAI5H,MAAO2N,WAEpBC,YAPK,yHAOOC,EAAMC,GAChB,OAAOF,YAAYC,EAAMC,KAE3BC,cAVK,uHAUShE,GACZgE,cAAchE,KAEhBiE,WAbK,yHAaMH,EAAMC,GACf,OAAOE,WAAWH,EAAMC,KAE1BG,aAhBK,uHAgBQlE,GACXkE,aAAalE,OA0BNmE,EAAuB,SAAC1H,EAAQlJ,GAAT,OAClCgJ,EAAqB,UAAD,OAAWhJ,EAAQuJ,MAAM5G,OAASuG,EAAQlJ,IAiBzD,SAAS6Q,EAAe7Q,GAC7B,IAOMuJ,EAASvJ,GAAWA,EAAQuJ,OAAU4G,IACtC1G,EACHzJ,GAAWA,EAAQyJ,cACpB6F,EATItP,GAAWA,EAAQuP,mBACdvP,EAAQuP,mBAEVzB,KAOHgD,EACH9Q,GAAWA,EAAQ8Q,eAAkBF,EAClCG,EACH/Q,GAAWA,EAAQ+Q,cACpB3F,EAAqBpL,EAAUA,EAAQkJ,YAAS1E,GAC9CwM,EAAc,GAuBZtB,EAAkB,SAAAnM,GACtB,IAAM0N,EAAexH,EAAasG,gBAClC,GAAIkB,EACFA,EAAavS,IAAI6E,OACZ,CACL,IACM2N,EADezH,EAAaqG,kBACJ/P,UAAU,gBACxCmR,EAASxS,IAAI6E,GACb2N,EAAShS,WAIPa,EAAY,SAAC0M,EAAIlJ,EAAM4N,EAAeC,GAC1C,IAAMvT,EAlCwB,WAC9B,IAAMwT,EAAiB5H,EAAaqG,kBACpC,GAAIuB,EACF,OAAOA,EAGT,IAAMC,EAAYR,EAAc,CAAEvH,QAAOE,eAAcqH,kBAEvD,OADArH,EAAauG,gBAAgBsB,GACtBA,EA0BQC,GACTC,EAxBqB,SAAAL,GAC3B,GAAIA,EACF,OAAOA,EAET,IAAMF,EAAexH,EAAasG,gBAClC,OAAIkB,EACKA,EAAavT,eADtB,EAmB+B+T,CAAqBN,GAC9CO,EAAc,CAClBxR,WAAYsR,GAA0B,CACpC,IAAIzV,YAAUqV,EAAqBI,IAErCjO,QAEIoO,EAAY9T,EAAOkC,UAAU0M,EAAIiF,GACvCjI,EAAawG,cAAc0B,GAC3B,IAAMC,EAAcD,EAAUjU,UAAUoD,WAKxC,OAJAkQ,EAAYY,GAAe,CACzB/R,KAAM8R,EACN3R,QAAS0R,GAEJC,GAGTlI,EAAauG,gBACXc,EAAcC,EAAc,CAC1BxH,QACAE,eACAqH,mBAIJ,IAAMe,EAAe,CACnB9B,cADmB,WAEjB,OAAOtG,EAAasG,iBAEtB+B,SAJmB,SAIVrF,EAAIlJ,GACXmM,EAAgB,EAAD,CAAGhF,IAAK+B,EAAImD,MAAOT,EAAUpL,OAAUR,KAExDzE,SAPmB,SAOV2N,EAAIlJ,GACXmM,EAAgB,EAAD,CAAGhF,IAAK+B,EAAImD,MAAOT,EAAUlQ,OAAUsE,KAExDwO,WAVmB,SAURtF,EAAIlJ,GACbmM,EAAgB,EAAD,CAAGhF,IAAK+B,EAAImD,MAAOT,EAAUC,SAAY7L,KAE1DyO,SAbmB,SAaVvF,EAAIlJ,GACXmM,EAAgB,EAAD,CAAGhF,IAAK+B,EAAImD,MAAOT,EAAUP,OAAUrL,KAExD0O,YAhBmB,SAgBPxF,EAAIlJ,GACdmM,EAAgB,EAAD,CAAGhF,IAAK+B,EAAImD,MAAOT,EAAUE,UAAa9L,KAE3D2O,SAnBmB,SAmBVzF,EAAIlJ,GAEX,OADAkG,EAAawG,mBAAczL,GACpBzE,EAAU0M,EAAIlJ,IAEvB4O,UAvBmB,SAuBT1F,EAAIlJ,EAAM4N,GAClB,OAAOpR,EAAU0M,EAAIlJ,EAAM4N,EAAenQ,uBAE5CoR,aA1BmB,SA0BN3F,EAAIlJ,EAAM4N,GACrB,OAAOpR,EAAU0M,EAAIlJ,EAAM4N,EAAejQ,2BAE5CmR,WA7BmB,SA6BR9O,GACT,IAAMkM,EAAahG,EAAasG,gBAChC,IAAKN,EACH,MAAM,IAAI7I,MAAM,oCAElB6I,EAAWvQ,SACNuQ,EAAW6C,0BACdT,EAAaU,mBAAmB9C,IAGpC8C,mBAvCmB,SAuCA1S,GACjB,IAAMR,EAAcQ,EAAKnC,UACnBoM,EAASzK,EAAYyB,WACrBmI,EAAU5J,EAAYwB,YACtBsL,EAAQ6E,EAAYlH,GAC1B,IAAKqC,EACH,MAAM,IAAIvF,MAAJ,oCAAuCkD,EAAvC,MAER,GAAIjK,IAAS4J,EAAasG,gBAAiB,CACzC,IAAMoB,EACJhF,EAAMnM,QAAQE,YACdiM,EAAMnM,QAAQE,WAAW,GAAGqB,oBAC9B,GAAI4P,GAAiBA,EAActQ,cAAgBoI,EAAS,CAC1D,IAAMuJ,EAAcxB,EAAYG,EAAcrQ,YAC1C0R,GACF/I,EAAawG,cAAcuC,EAAY3S,WAGzC4J,EAAawG,mBAAczL,UAGxBwM,EAAYlH,IAErBuC,SA9DmB,WA+DjB2E,EAAc,GACdvH,EAAawG,mBAAczL,KAI/B,MAAO,CACLiO,MAAOZ,EACPa,OAAQ3B,GC9NL,SAAS4B,EAAoB3S,GAClC,IAAM4S,EAAuBzF,EAC3B,6BAEI0F,EAAuB1F,EAC3B,6BAEI2F,EACJ9S,GAAWA,EAAQ8S,oBACf9S,EAAQ8S,oBACR,SAAA3G,GAAK,OAAIA,EAAM4G,SAEjBC,OAAexO,EACfyO,OAAWzO,EACX0O,EAAa,EAEXC,EAAkB,WA+S1B,IACMC,EAEEC,EAFFD,EAAe,GAEbC,EAA2B,SAAApK,GAC/B,IAAMqK,EAAcF,EAAanK,GACjC,GAAIqK,EACF,OAAOA,EAGT,IAkBEC,EAlBIC,GAkBJD,EAAe,GAEZ,CACLE,YADK,SACO3J,GACV,OAAOyJ,EAAazJ,IAEtB4J,YAJK,SAIO5J,EAAQ6J,GAClBJ,EAAazJ,GAAU6J,KAvBzB,OADAP,EAAanK,GAAWuK,EACjBA,GAzTPR,EA4TK,CACLS,YADK,SACOxK,EAASa,GAEnB,OADoBuJ,EAAyBpK,GAC1BwK,YAAY3J,IAEjC4J,YALK,SAKOzK,EAASa,EAAQ6J,GAE3B,OADoBN,EAAyBpK,GAC1ByK,YAAY5J,EAAQ6J,KAlUzCV,EAAWW,KAoCPC,EAAgB,SAACF,EAAMG,EAAaC,GACxC,GAAKJ,EAAKZ,QAKV,IAFA,IAAMiB,EAAY,IAAIpH,IAAIkH,GACpBG,EAAala,OAAOoJ,KAAKwQ,EAAKZ,SALoB,WAOlDmB,GAIJD,EAAW3M,QAAQ,SAAA1M,GACjB,IAAMN,EAAQqZ,EAAKZ,QAAQnY,IAtBN,SAACsZ,EAAYtZ,EAAKN,GACtC4Z,EAAWnB,QAEJmB,EAAWnB,QAAQnY,GAG7BsZ,EAAWnB,QAAQnY,IAAQN,EAF3B4Z,EAAWnB,QAAQnY,GAAON,EAF1B4Z,EAAWnB,QAAX,OAAwBnY,EAAMN,GAqB5B6Z,CAAmBD,EAAYtZ,EAAKN,KAEjC0Z,EAAUvP,IAAIyP,IACjBH,EAAY5T,KAAK+T,IATfA,EAAaP,EAAKS,OACtBF,EAAWzH,GAAK,EAChByH,EAAaA,EAAWE,OACvB,EAHGF,IAcFG,EAAwB,SAAClI,EAAO2H,EAAaC,GAAiB,IAC1D9K,EAAoBkD,EAApBlD,QAASa,EAAWqC,EAAXrC,OACXsK,EAhDe,SAAAjI,GACrB,IAAMgF,EATiB,SAAAhF,GACvB,MAAoB,cAAhBA,EAAMP,MACDO,EAAMlM,SAAWkM,EAAMlL,YAEvBkL,EAKamI,CAAiBnI,GACvC,GAAIgF,EAAe,CACjB,IAAMoD,EAAavB,EAAaS,YAC9BtC,EAAclI,QACdkI,EAAcrH,QAEhB,GAAIyK,EACF,OAAOA,EAET7G,QAAQ8G,KAAK,kBAAmB,sBAAuBrD,GAEzD,OAAO8B,EAoCQwB,CAAetI,GACxBuI,EAAUC,EACdzB,IACAkB,EACAjI,EACA2G,GAGF8B,EAAwBF,EAASN,GACb,cAAhBjI,EAAMP,OACRoH,EAAaU,YAAYzK,EAASa,EAAQ4K,GAG5CZ,EAAY3T,KAAKuU,GACjBb,EAAca,EAASZ,EAAaC,IA4BhCc,EAAsB,CAC1BC,YAH6B,SAAC3I,EAAO2H,EAAaC,KAIlDgB,UAAWV,EACXW,IAAKX,EACLY,SA7B0B,SAAC9I,EAAO2H,EAAaC,GAC/C,IAAMJ,EAAOX,EAAaS,YAAYtH,EAAMlD,QAASkD,EAAMrC,QAC3D,GAAI6J,GAAQxH,EAAM5I,MAAQ4I,EAAM5I,KAAKmJ,KAAM,CACzC,IAAMwI,EAAiBvB,EAAKxH,MAAM5I,KAAKmJ,KACjCyI,EAAatT,MAAM+G,QAAQsM,GAC7BA,EACAA,EACA,CAACA,GACD,GACJC,EAAWhV,KAAKgM,EAAM5I,KAAKmJ,MAC3BiH,EAAKxH,MAAM5I,KAAO,CAAEmJ,KAAMyI,GAC1BpB,EAAY5T,KAAKwT,KAmBnByB,QAfyB,SAACjJ,EAAO2H,EAAaC,GAC9C,IAAMJ,EAAOX,EAAaS,YAAYtH,EAAMlD,QAASkD,EAAMrC,QACvD6J,IACFA,EAAKxH,MAAMkJ,SAAWlJ,EAAM3B,KAAOmJ,EAAKxH,MAAM3B,KAC9CuJ,EAAY5T,KAAKwT,MAyBrB,OAFAR,IAEO,CACLmC,YADK,WAEH,OAAOrC,GAETsC,aAJK,WAKH,OAAOC,EAAoBvC,IAE7BwC,iBAPK,WAQH,OAAOC,EAAwBzC,IAEjC0C,oBAVK,SAUe1G,GAClB0G,EAAoB1C,EAAUhE,IAEhC2G,QAbK,SAaGrK,GACN,IAAMuI,EAAc,GACdC,EAAc,GACpBxI,EAAQjE,QAAQ,SAAA6E,IA3BA,SAACA,EAAO2H,EAAaC,GACvC,IAAM8B,EAAUhB,EAAoB1I,EAAMP,OACtCiK,EACFA,EAAQ1J,EAAO2H,EAAaC,GAE5BrG,QAAQkB,MAAR,+BAAsCzC,EAAMP,MAA5C,MAuBEkK,CAAY3J,EAAO2H,EAAaC,KAE9BD,EAAYrU,OAAS,GACvBmT,EAAqBnF,OAAOqG,GAE1BC,EAAYtU,OAAS,GACvBoT,EAAqBpF,OAAOsG,IAGhCgC,UA1BK,SA0BKzI,GACJA,EAAW0I,aACbpD,EAAqB1F,IAAII,EAAW0I,aAElC1I,EAAW2I,aACbpD,EAAqB3F,IAAII,EAAW2I,cAGxCC,YAlCK,SAkCO5I,GACNA,EAAW0I,aACbpD,EAAqBrF,OAAOD,EAAW0I,aAErC1I,EAAW2I,aACbpD,EAAqBtF,OAAOD,EAAW2I,cAK3C5J,SA5CK,WA6CH8G,KAEFL,uBAIG,SAASc,IACd,MAAO,CACLnH,GAAI,EACJN,WAAO3H,EACP4P,YAAQ5P,EACR2R,SAAK3R,EACL4R,OAAQ,EACRC,gBAAY7R,EACZ8R,eAAW9R,EACX+R,iBAAa/R,EACbgS,iBAAahS,EACbuO,aAASvO,GAIN,SAASmQ,EAAkBlI,EAAI2H,EAAQjI,EAAO2G,GACnD,IAAMa,EAAO,CACXlH,KACAN,QACAiI,SACAgC,MAAOhC,EAAOgC,MAAQ,EACtBD,IAAK/B,EAAO+B,IACZE,gBAAY7R,EACZ8R,eAAW9R,EACX+R,iBAAa/R,EACbgS,iBAAahS,EACbuO,QAASD,EAAsBA,EAAoB3G,GAASA,EAAM4G,SAKpE,OAHKY,EAAKwC,MACRxC,EAAKwC,IAAMxC,GAENA,EAGF,SAASiB,EAAwB6B,EAAUrC,GAC5CA,EAAOkC,WACTG,EAASF,YAAcnC,EAAOkC,UAC9BlC,EAAOkC,UAAUE,YAAcC,GAE/BrC,EAAOiC,WAAaI,EAEtBrC,EAAOkC,UAAYG,EAGd,SAASjB,EAAoBvC,GAClC,IAAKA,EACH,MAAO,GAET,IAAMyD,EAAY,GAElB,OADAf,EAAoB1C,EAAU,SAAAU,GAAI,OAAI+C,EAAUvW,KAAKwT,KAC9C+C,EAGF,SAAShB,EAAwBzC,GACtC,IAAM0D,EAAgB,GAItB,OAHAC,EAAsB3D,EAAU,SAAAU,GAC9BgD,EAAcxW,KAAKwT,KAEdgD,EAGF,SAAShB,EAAoB1C,EAAUhE,GAC5C,OAAO2H,EAAsB3D,EAAU,SAAAU,GACrC,OAAuB,IAAnB1E,EAAS0E,OAGTA,EAAK0C,aACqC,IAAxCV,EAAoBhC,EAAM1E,UADhC,KAQG,SAAS2H,EAAsBrC,EAAYtF,GAChD,GAAIsF,EACF,IAAK,IAAIZ,EAAOY,EAAW8B,WAAc1C,EAAMA,EAAOA,EAAK6C,YACzD,IAAuB,IAAnBvH,EAAS0E,GACX,OAAO,EAMR,SAASkD,EAAqBC,EAAUC,GAI7C,IAHA,IAAIC,EAAcF,EACdG,GAAkB,EAEfD,GAaL,IAZKC,GAAmBD,EAAYX,WAClCW,EAAcA,EAAYX,YAE1BY,GAAkB,EACdD,EAAYR,YACdQ,EAAcA,EAAYR,aAE1BS,GAAkB,EAClBD,EAAcA,EAAY5C,UAIzB6C,GAAmBF,EAAUC,GAChC,OAAOA,EAKN,SAASE,EAAqBJ,EAAUC,GAI7C,IAHA,IAAIC,EAAcF,EACdG,GAAkB,EAEfD,GAaL,IAZKC,GAAmBD,EAAYV,UAClCU,EAAcA,EAAYV,WAE1BW,GAAkB,EACdD,EAAYT,YACdS,EAAcA,EAAYT,aAE1BU,GAAkB,EAClBD,EAAcA,EAAY5C,UAIzB6C,GAAmBF,EAAUC,GAChC,OAAOA,EC/SN,SAASG,EAA0BC,EAAaL,GACrD,IAAMnE,EAAuBzF,EAC3B,mCAEI0F,EAAuB1F,EAC3B,mCAGEkK,EAAiB,GACjBC,OAA0B9S,EAC1B+S,OAAiB/S,EAEfgT,EAA4B,WAChCH,EAAiB,GACjBC,OAA0B9S,EAC1B+S,EA8DF,WACE,IAAME,EAAiBL,EAAY9B,cAC7BiC,EDoGD,CACL9K,GAAI,EACJN,WAAO3H,EACP4P,YAAQ5P,EACR2R,SAAK3R,EACL4R,OAAQ,EACRC,gBAAY7R,EACZ8R,eAAW9R,EACX+R,iBAAa/R,EACbgS,iBAAahS,EACbuO,aAASvO,GCzGT,OAJA6S,EAAeE,EAAe9K,IAAM8K,EAOtC,SAASG,EAAwB/D,EAAMgE,GACrC,IAAMC,EAAuB,SAAAC,GAC3B,OAAOC,EAAiBnE,EAAMkE,EAASF,IAGzC,IAAMI,GAAcpE,EAAKS,OACzB,IAAM4D,GAAmBD,GAAchB,EAAUpD,GACjD,IAAIsE,EAAiBD,EACjBJ,GAAqB,QACrBpT,EAEJ,IACE,IAAI0T,EAAUvE,EAAK0C,WACjB6B,EACFA,EAAUA,EAAQ1B,YAElBkB,EAAwBQ,EAAS,WAM/B,OALKD,IACHA,EAAiBF,EACbJ,IACAC,GAAqB,IAEpBK,IA3BXP,CAAwBD,EAAgB,kBAAMF,IAEvCA,EArEUY,IAGbC,EAAwB,CAC5BpC,YAAaqC,EACbpC,YAmJF,SAAkCqC,MA7IlC,OAHAlB,EAAYrB,UAAUqC,GACtBZ,IAEO,CACLlC,YADK,WAEH,OAAOiC,GAEThC,aAJK,WAKH,OAAOC,EAAoB+B,IAE7B9B,iBAPK,WAQH,OAAOC,EAAwB6B,IAEjCgB,oBAVK,WAWH,IAAIC,OAAmBhU,EAOvB,OANAmR,EAAoB4B,EAAgB,SAAA5D,GAClC,GAAIA,EAAKkE,QAEP,OADAW,EAAmB7E,GACZ,IAGJ6E,GAETC,mBApBK,SAoBcC,GACjB,OAAO7B,EAAqB6B,EAAa,SAAA/E,GAAI,OAAIA,EAAKkE,WAExDc,mBAvBK,SAuBcD,GACjB,OAAOxB,EAAqBwB,EAAa,SAAA/E,GAAI,OAAIA,EAAKkE,WAExD9B,UA1BK,SA0BKzI,GACJA,EAAW0I,aACbpD,EAAqB1F,IAAII,EAAW0I,aAElC1I,EAAW2I,aACbpD,EAAqB3F,IAAII,EAAW2I,cAGxCC,YAlCK,SAkCO5I,GACNA,EAAW0I,aACbpD,EAAqBrF,OAAOD,EAAW0I,aAErC1I,EAAW2I,aACbpD,EAAqBtF,OAAOD,EAAW2I,cAG3C2C,sBA1CK,WA2CHxB,EAAYlB,YAAYmC,IAE1BhM,SA7CK,WA8CH+K,EAAY/K,WACZmL,MAyCJ,SAASM,EAAiBe,EAAYhB,EAASF,GAC7C,IAAMmB,EAAmBnB,IACrBoB,EAAapE,EACfkE,EAAWpM,GACXqM,EACAD,EAAW1M,MACXiL,EAAYtE,qBAcd,OAZAuE,EAAe0B,EAAWtM,IAAMsM,EAC5BzB,GACFA,EAAwBnX,KAAK4Y,GAE/BnE,EAAwBmE,EAAYD,GACpCC,EAAWF,WAAaA,EACxBE,EAAWlB,QAAUA,EACjBgB,EAAWG,iBAEbD,EAAWC,eAAiBH,EAAWG,eACvCH,EAAWG,oBAAiBxU,GAEvBuU,EAgBT,SAASV,EAA0BY,GACjC3B,EAA0B,GACJ2B,EAAczL,OAAOuJ,GAE7BzP,QAAQ,SAAAuR,GAIpBf,EAAiBe,GAAY,EAHP,WACpB,OAnBN,SAASK,EAA4BC,GACnC,GAAKA,EAAgB/E,OAArB,CAGA,IAAMgF,EAAiB/B,EAAe8B,EAAgB/E,OAAO3H,IAC7D,OAAI2M,GAGGtB,EAAiBqB,EAAgB/E,QAAQ,EAAO,kBACrD8E,EAA4BC,EAAgB/E,WAUnC8E,CAA4BL,OAKnCvB,EAAwB7X,OAAS,GACnCmT,EAAqBnF,OAAO6J,GAE9BA,OAA0B9S,GCpKvB,SAAS6U,GAA8BjC,EAAaL,GACzD,IAAMnE,EAAuBzF,EAC3B,uCAEI0F,EAAuB1F,EAC3B,uCAGEkK,EAAiB,GACjBC,OAA0B9S,EAC1B+S,OAAiB/S,EAEfgT,EAA4B,WAChCH,EAAiB,GACjBC,OAA0B9S,EAC1B+S,EA8DF,WACE,IAAME,EAAiBL,EAAY9B,cAC7BiC,EFoGD,CACL9K,GAAI,EACJN,WAAO3H,EACP4P,YAAQ5P,EACR2R,SAAK3R,EACL4R,OAAQ,EACRC,gBAAY7R,EACZ8R,eAAW9R,EACX+R,iBAAa/R,EACbgS,iBAAahS,EACbuO,aAASvO,GEzGT,OAJA6S,EAAeE,EAAe9K,IAAM8K,EAOtC,SAASG,EAAwB/D,EAAMgE,GAKrC,IAAMI,GAAcpE,EAAKS,OACzB,IAAM4D,GAAmBD,GAAchB,EAAUpD,GAC5BqE,IANQH,GAOJ,EANhBC,EAAiBnE,EAAMkE,EAASF,IADZ,IAAAE,EAU7B,IACE,IAAIK,EAAUvE,EAAK0C,WACjB6B,EACFA,EAAUA,EAAQ1B,YAElBkB,EAAwBQ,EAASP,GArBnCD,CAAwBD,EAAgB,kBAAMF,IAEvCA,EArEUY,IAGbC,EAAwB,CAC5BpC,YA0GF,SAAmCiD,GACjC3B,EAA0B,GACJ2B,EAAczL,OAAOuJ,GAE7BzP,QAAQ,SAAAuR,GACpBf,EAAiBe,GAAY,EAAM,kBAAMtB,MAGvCD,EAAwB7X,OAAS,GACnCmT,EAAqBnF,OAAO6J,GAE9BA,OAA0B9S,GApH1ByR,YAuHF,SAAkCqC,MAjHlC,OAHAlB,EAAYrB,UAAUqC,GACtBZ,IAEO,CACLlC,YADK,WAEH,OAAOiC,GAEThC,aAJK,WAKH,OAAOC,EAAoB+B,IAE7B9B,iBAPK,WAQH,OAAOC,EAAwB6B,IAEjCgB,oBAVK,WAWH,IAAIC,OAAmBhU,EAOvB,OANAmR,EAAoB4B,EAAgB,SAAA5D,GAClC,GAAIA,EAAKkE,QAEP,OADAW,EAAmB7E,GACZ,IAGJ6E,GAETC,mBApBK,SAoBcC,GACjB,OAAO7B,EAAqB6B,EAAa,SAAA/E,GAAI,OAAIA,EAAKkE,WAExDc,mBAvBK,SAuBcD,GACjB,OAAOxB,EAAqBwB,EAAa,SAAA/E,GAAI,OAAIA,EAAKkE,WAExD9B,UA1BK,SA0BKzI,GACJA,EAAW0I,aACbpD,EAAqB1F,IAAII,EAAW0I,aAElC1I,EAAW2I,aACbpD,EAAqB3F,IAAII,EAAW2I,cAGxCC,YAlCK,SAkCO5I,GACNA,EAAW0I,aACbpD,EAAqBrF,OAAOD,EAAW0I,aAErC1I,EAAW2I,aACbpD,EAAqBtF,OAAOD,EAAW2I,cAG3C2C,sBA1CK,WA2CHxB,EAAYlB,YAAYkC,IAE1B/L,SA7CK,WA8CH+K,EAAY/K,WACZmL,MAkCJ,SAASM,EAAiBe,EAAYhB,EAASF,GAC7C,IAAMmB,EAAmBnB,IACrBoB,EAAapE,EACfkE,EAAWpM,GACXqM,EACAD,EAAW1M,MACXiL,EAAYtE,qBASd,OAPAuE,EAAe0B,EAAWtM,IAAMsM,EAC5BzB,GACFA,EAAwBnX,KAAK4Y,GAE/BnE,EAAwBmE,EAAYD,GACpCC,EAAWF,WAAaA,EACxBE,EAAWlB,QAAUA,EACdkB,G,wBCpIJ,SAASO,GAAyBC,EAAMC,GAC7C,IAAIC,EAAU,GACVC,EAAqB,EAInBpM,EAAa,CACjB0I,YAwOF,SAA6BiD,GAG3B,IAFA,IAAIU,OAAenV,EAEVnL,EAAI,EAAGA,EAAI4f,EAAcxZ,OAAQpG,IAAK,CAC7C,IAAMugB,EAAWX,EAAc5f,GAAG+a,OAAO3H,GACvBgN,EAAQG,GACrBD,GAAgBA,EAAaC,WAAaA,GAC7CC,EAAcxgB,GAMlB,SAASwgB,EAAcC,GACrBC,EAAgBD,GAChBH,EAAe,CACbC,SAAUX,EAAca,GAAO1F,OAAO3H,GACtCuN,WAAYF,GAIhB,SAASC,EAAgBD,GACvB,GAAIH,GAAgBA,EAAaK,WAAaF,EAAO,CACnD,IAAMG,EAAYR,EAAQE,EAAaC,UACvC,GAAIK,EAAW,CACb,IAAMC,EAAejB,EAAckB,MACjCR,EAAaK,WACbF,GAEFG,EAAUG,aAAaF,KAlB7BH,EAAgBd,EAAcxZ,SAlP9BwW,YA0QF,SAA4BqC,GAC1BA,EAAahR,QAAQ,SAAAqM,GACnB,IAAM0G,EAAMZ,EAAQ9F,EAAKlH,IACzB,GAAI4N,EAAK,CACP,IAAMP,EAAQO,EAAIC,oBAClBf,EAAKgB,WAAWT,EAAOnG,QA5QvB6G,EAAa,CACjBC,YADiB,SACLhO,GACV,IAAM4N,EAAMZ,EAAQhN,GACpB,GAAI4N,EACF,OAAOA,EAAIK,WAGfC,OAPiB,SAOVlO,GACL,OAAOgN,EAAQhN,GAAIkO,UAErBC,OAViB,SAUVnO,GACLgN,EAAQhN,GAAImO,UAEdC,SAbiB,SAaRpO,GACPgN,EAAQhN,GAAIoO,YAEdC,WAhBiB,SAgBNnH,GACT6G,EAAWO,aAAapH,GACxB,IACMqH,EADUvB,EAAQ9F,EAAKlH,IACA6N,oBAC7Bf,EAAKuB,WAAWE,EAAcrH,IAEhCoH,aAtBiB,SAsBJpH,GACN8F,EAAQ9F,EAAKlH,MAChB+N,EAAWO,aAAapH,EAAKS,QAC7BoG,EAAWI,OAAOjH,EAAKS,OAAO3H,MAGlCwO,cA5BiB,SA4BHxO,GACZ,IAAM4N,EAAMZ,EAAQhN,GACpB,QAAO4N,GAAMA,EAAIY,iBAEnBC,aAhCiB,SAgCJzO,GAEX,QADYgN,EAAQhN,IACPgN,EAAQhN,GAAIyO,gBAE3BC,aApCiB,SAoCJC,GACX5B,EAAMtD,YAAY5I,GAClBkM,EAAQ4B,EACRC,KAEFhP,SAzCiB,WA0CfmN,EAAMnN,WACNmO,EAAWW,aAAa3B,IAE1B8B,eA7CiB,SA6CFrM,GACbsK,EAAK+B,eAAerM,KAMxB,OAFAsK,EAAKgC,iBAAiBf,GACtBa,IACOb,EAEP,SAASa,IA2NT,IACQpI,EA3NNwG,EAAU,GACVC,EAAqB,EA0NfzG,EAAWuG,EAAMlE,cACvBmE,EAAQxG,EAASxG,IA5EnB,SAAkCwG,GAChC,IAAIuI,EAAgB,EACd/d,EAAO,aAEb,MAAO,CACLid,QAAS,kBAAMzH,GACfwI,UAAWhe,EACXie,eAAgBje,EAChBke,eAAgBle,EAChBme,cAAene,EACfwd,cAAe,kBAAM,GACrBC,aAAc,kBAAM,GACpBW,iBAAkB,kBAAML,GACxBM,oBATK,SASeC,GAClBP,GAAiBO,GAEnBC,gBAAiB,kBAAMtC,GACvBY,kBAAmB,kBAAO,GAC1BK,OAAQld,EACRmd,OAAQnd,EACRod,SAAUpd,EACV2c,aAjBK,SAiBQ6B,GACXC,EAA6BD,GAC7B1C,EAAKvD,YAAYwF,EAAeS,GAChCT,GAAiBS,EAASxc,SAoDP0c,CAAyBlJ,GAzNhDsG,EAAKlN,WACLiB,EAAW0I,YAAYwD,EAAM/D,oBAC7B+D,EAAMzD,UAAUzI,GAGlB,SAAS4O,EAA6BD,GAAW,IAAD,uBAC9C,YAAiBA,EAAjB,+CAA2B,CAAC,IAAnBtI,EAAkB,QACnB0G,EAAM+B,EAAoBzI,GAChC8F,EAAQ9F,EAAKlH,IAAM4N,GAHyB,mFAOhD,SAAS+B,EAAoBzI,GAC3B,IAAI0I,GAAa,EACbb,EAAgB,EAChBc,OAAsB9X,EACtB+X,EAAqB7C,EAKnB+B,EAAY,WAChB,OAAOhC,EAAQ9F,EAAKS,OAAO3H,KAEvBiP,EAAiB,WACrB,OAAO/H,EAAK4C,YAAckD,EAAQ9F,EAAK4C,YAAY9J,SAAMjI,GAQrDyW,EAAgB,WACpB,OAAOoB,GAEHnB,EAAe,WACnB,IAAM9G,EAASqH,IACf,OAAOrH,EAAO8G,gBAAkB9G,EAAO6G,iBAKnCa,EAAsB,SAAAC,GAC1BP,GAAiBO,EACjBQ,EAAqB7C,EACrB+B,IAAYK,oBAAoBC,IAQ5BzB,EAAoB,WACxB,IAHSgC,GAAuBC,IAAuB7C,EAGpB,CAEjC,IADA,IAAI8C,EAAwB,EAEtBC,EAAUf,IACZe,EACFA,EAAUA,EAAQf,iBAElBc,GAAyB,EAAIC,EAAQZ,mBAEvC,IAAMa,EAAsBjB,IAAYnB,oBACxCgC,EAAsBI,EAAsBF,EAAwB,EACpED,EAAqB7C,EAEvB,OAAO4C,GAEHlC,EAAe,SAAA6B,GACnB,GAAKf,KAAmBD,IAAxB,CAGA,IAAM0B,EAAerC,IACrB4B,EAA6BD,GAC7B1C,EAAKvD,YAAY2G,EAAenB,EAAgB,EAAGS,GACnDvC,IACAoC,GAAqBG,EAASxc,QAC9B8Z,EAAKgB,WAAWoC,EAAchJ,KAuB1BiH,EAAS,WACb,IAAIyB,GAAe1I,EAAK0C,WAAxB,CAIA,IADA,IAAM4F,EAAW,GAEX/D,EAAUvE,EAAK0C,WACjB6B,EACFA,EAAUA,EAAQ1B,YAElByF,EAAS9b,KAAK+X,GAEhBmE,GAAa,EACbjC,EAAa6B,KAETpB,EAAW,WACfwB,GAAa,EArCM,WACnB,GAAKnB,KAAoC,IAAlBM,EAAvB,CAGA,IAAMmB,EAAerC,IACfsC,EAAiBrD,EAAKsD,YAAYF,EAAe,EAAGnB,GAC1DoB,GAAkBA,EAAetV,QAAQ,SAAAmF,GAAE,cAAWgN,EAAQhN,KAC9DiN,IACAoC,GAAqBN,GACrBjC,EAAKgB,WAAWoC,EAAchJ,IA6B9BmJ,IAGF,MAAO,CACLpC,QAzGc,WACd,OAAO/G,GAyGP8H,YACAC,iBACAC,eAnGqB,WACrB,OAAOhI,EAAK6C,YAAciD,EAAQ9F,EAAK6C,YAAY/J,SAAMjI,GAmGzDoX,cAjGoB,WACpB,OAAOjI,EAAK0C,WAAaoD,EAAQ9F,EAAK0C,WAAW5J,SAAMjI,GAiGvDyW,gBACAC,eACAW,iBA1FuB,WACvB,OAAOL,GA0FPM,sBACAE,gBApFsB,WACtB,OAAOtC,GAoFPY,oBACAK,OA1Ca,WAMb,OALI0B,EACFxB,IAEAD,IAEK,CACLyB,eAoCFzB,SACAC,WACAT,iBAoFC,SAAS2C,GAAmBC,EAAOC,EAASC,GACjD,IAAMC,EAAwBhQ,EAC5B,6BAEIiQ,EAAsBjQ,EAC1B,2BAGF6P,EAAMK,UAAY,SAAA5U,GAChB,OAAoC,IAwItC,SAAkCA,GAChC,GAAIA,EAAE6U,SAAW7U,EAAE8U,UAAY9U,EAAE+U,OAC/B,OAAO,EAGT,IAAKC,EAIH,OAHIC,EAAMR,KAAKzd,OAAS,GACtBqb,EAAW,EAAG6C,EAAUD,EAAMR,KAAK,MAE9B,EAGT,IAAMU,EAAiBC,EAAYJ,GAEnC,OAAQhV,EAAE7N,KACR,IAAK,YACH,GAAI4f,EAAWS,cAAc2C,GAE3B,OADApD,EAAWK,SAAS+C,IACb,EAET,MACF,IAAK,aACH,IAAKpD,EAAWS,cAAc2C,GAE5B,OADApD,EAAWI,OAAOgD,IACX,EAKb,IAAME,EASR,SAAmBC,GACjB,OAAQA,GACN,IAAK,UACH,GAAIC,EAAWP,GAAc,EAC3B,OAAOC,EAAMR,KAAKc,EAAWP,GAAc,GAE7C,MACF,IAAK,YACH,GAAIO,EAAWP,GAAcC,EAAMR,KAAKzd,OAAS,EAC/C,OAAOie,EAAMR,KAAKc,EAAWP,GAAc,GAE7C,MACF,IAAK,YACH,OAsBN,SAAsBQ,GACpB,IACMC,EADYP,EAAUM,GACG7J,OAAO3H,GACtC,GAAIyR,EACF,IAAK,IAAIpE,EAAQkE,EAAWC,GAAW,EAAGnE,GAAS,EAAGA,IAAS,CAC7D,IAAMqE,EAAKT,EAAMR,KAAKpD,GACtB,GAAI+D,EAAYM,KAAQD,EACtB,OAAOC,GA7BFC,CAAaX,GACtB,IAAK,aACH,OAiCN,SAA+BY,GAE7B,IADA,IAAM9J,EAAaoJ,EAAUU,GAEvBvE,EAAQkE,EAAWK,GAAY,EACnCvE,EAAQ4D,EAAMR,KAAKzd,OACnBqa,IACA,CACA,IAAMmE,EAAUP,EAAMR,KAAKpD,GACrBwE,EAAYX,EAAUM,GAC5B,GAAIK,EAAUlK,SAAWG,EACvB,MAEF,GAAI+J,EAAUjI,WACZ,OAAO4H,GA9CAM,CAAsBd,IAxBlBe,CAAU/V,EAAE7N,KAC3B,GAAIkjB,EAEF,OADAhD,EAAWkD,EAAWF,GAASH,EAAUG,KAClC,EAGT,OAAO,EA3KHW,CAAyBhW,IAC3BA,EAAEiW,mBACK,IAETtB,EAAoB3P,OAAOhF,IACnBA,EAAEkW,mBAGZ,IAAIjB,EAAQkB,SAASC,cAAc,SACnC7B,EAAM8B,YAAYpB,GAElB,IAAIlD,OAAahW,EACbiZ,OAAajZ,EAEXua,EAAmB,SAAAC,GACvB,MAAuB,iBAAZA,EACFJ,SAASK,eAAeD,GAE1BA,GAGHE,EAAa,SAACvL,EAAMwL,EAAUC,EAAUjB,EAAIkB,GAChD,IAAMC,EAASrC,EAAQmC,GACjBG,EACJD,EAAOE,YAAcF,EAAOE,WAAW7L,EAAM6G,EAAY2E,GAC3DI,GAAWF,EAAGI,UAAUvS,IAAIqS,GAC5B,IAAMG,EAAaJ,EAAOJ,WAAWvL,EAAM6G,EAAY2E,GACvDO,GACEA,EACGlS,OAAO,SAAAmS,GAAQ,QAAMA,IACrBC,IAAIb,GACJzX,QAAQ,SAAAqY,GAAQ,OAAIN,EAAGP,YAAYa,MAOpCE,EAAiB,SAAC1B,EAAIxK,EAAMmG,GAChC,IAAMuC,EAAa7B,EAAWS,cAActH,EAAKlH,IAMjD,GALA0R,EAAG2B,UAAY,GACf3B,EAAGsB,UAAUvS,IAAImP,EAAa,WAAa,aACvC8B,IAAOV,GACTU,EAAGsB,UAAUvS,IAAI,YAEfgQ,GAAQA,EAAK6C,aAAc,CAAC,IAAD,EACvBC,EAAY9C,EAAK6C,aAAapM,EAAMmG,IAC1C,EAAAqE,EAAGsB,WAAUvS,IAAb,aAAoB8S,MAelBlF,EAAa,SAAChB,EAAOnG,GACrB8J,GACFA,EAAWgC,UAAUlS,OAAO,YAE9BkQ,OAAajZ,EACQ,iBAAVsV,GAAsBA,GAAS,KACxC2D,EAAaC,EAAMR,KAAKpD,IACb2F,UAAUvS,IAAI,YACzBiQ,EAAsB1P,OAAOkG,GAC7B8J,EAAWwC,2BAsDf,MAAO,CACL1E,iBA5FuB,SAAA2E,GACvB1F,EAAa0F,GA4Fb3F,WA5EiB,SAACT,EAAOnG,GACzB,IAAMwK,EAAKT,EAAMR,KAAKpD,GACtB+F,EAAe1B,EAAIxK,EAAMmG,GAEzB,IAAK,IAAIsF,EAAW,EAAGA,EAAWnC,EAAQxd,OAAQ2f,IAAY,CAC5D,IAAMC,EAAKlB,EAAGgC,MAAMf,GACpBC,EAAGe,UAAY,GACflB,EAAWvL,EAAMmG,EAAOsF,EAAUjB,EAAIkB,KAsExCrJ,YArDkB,SAAC8D,EAAOuG,GAC1B,IADqC,IAAD,WAC3BhnB,GACP,IAAM8lB,EAAWrF,EAAQzgB,EACnB8kB,EAAKT,EAAM4C,UAAUxG,EAAQzgB,GACnC8kB,EAAGoC,aAAa,WAAYF,EAAMhnB,GAAGoT,IACrCoT,EAAe1B,EAAIkC,EAAMhnB,GAAIygB,EAAQzgB,GACrC8kB,EAAGqC,QAAU,WACX1F,EAAWqD,EAAGgB,SAAW,EAAGkB,EAAMhnB,KAEpC,IAAK,IAAI+lB,EAAW,EAAGA,EAAWnC,EAAQxd,OAAQ2f,IAAY,CAC5D,IAAMC,EAAKlB,EAAGsC,WAAWrB,GACzBF,EAAWmB,EAAMhnB,GAAI8lB,EAAUC,EAAUjB,EAAIkB,GAE/ClB,EAAGsC,WAAWxD,EAAQxd,SAZfpG,EAAI,EAAGA,EAAIgnB,EAAM5gB,OAAQpG,IAAM,EAA/BA,IAqDTwjB,YArCkB,SAAC/C,EAAO4G,GAExBjD,GACAA,EAAW0B,SAAW,GAAKrF,GAC3B2D,EAAW0B,SAAW,EAAIrF,EAAQ4G,IAElCjD,OAAajZ,EACb2Y,EAAsB1P,YAAOjJ,IAG/B,IADA,IAAMmc,EAAiB,GACdtnB,EAAIqnB,EAAQ,EAAGrnB,GAAK,EAAGA,IAAK,CACnC,IAAM8kB,EAAKT,EAAMR,KAAKpD,EAAQzgB,GAC9BsnB,EAAexgB,KAAK0d,EAAYM,IAChCT,EAAMkD,UAAU9G,EAAQzgB,GAE1B,OAAOsnB,GAuBP7F,aACAzO,SArBe,WACf,IAAMwU,EAAWjC,SAASC,cAAc,SACxC7B,EAAM8D,aAAaD,EAAUnD,GAC7BA,EAAQmD,EACR/F,KAkBAQ,eAfqB,SAAArM,GACrBkO,EAAsBjQ,IAAI+B,IAe1B8R,aAZmB,SAAA9R,GACnBmO,EAAoBlQ,IAAI+B,KAuE1B,SAAS+O,EAAWG,GAClB,OAAOA,EAAG6C,gBAGZ,SAASnD,EAAYM,GACnB,IAAM8C,EAASC,SAAS/C,EAAGgD,aAAa,aACxC,OAAQC,MAAMH,QAAmBzc,EAATyc,EAG1B,SAAStD,EAAUQ,GACjB,IAAM8C,EAASpD,EAAYM,GAC3B,GAAI8C,EACF,OAAOzG,EAAWC,YAAYwG,ICzf7B,SAASI,GAAeC,EAAUC,EAAUC,GACjD,IAAMjY,EAAQiY,GAAiBrR,IAC3BsR,OAAYjd,EAEhB,MAAO,CACLkd,OADK,WAECD,GACFlY,EAAMoH,aAAa8Q,GAErBA,EAAYlY,EAAMmH,WAAW,WAC3B+Q,OAAYjd,EACZ8c,KACCC,KCdF,SAASI,GAAcC,GAC5B,IAAMC,EAAa,GACbC,EAAkB,EAChBC,EAAmDH,EAAnDG,YAAaC,EAAsCJ,EAAtCI,gBAAiBC,EAAqBL,EAArBK,iBAElCC,OAAU1d,EACV2d,OAAO3d,EACP4d,OAAiB5d,EAIrB,SAAS6d,EAAa5Z,GACpB,MAAO,CACL6Z,OAAQ7Z,EAAE8Z,MACVC,UAAWR,EAAkBA,EAAgBS,iBAAcje,EAC3Dke,WAAYT,EAAmBA,EAAiBQ,iBAAcje,GAkBlE,SAASme,EAAYla,GACnB,IAAMma,EAAUP,EAAa5Z,GAE7B,GAAIjF,KAAKC,IAAImf,EAAQN,OAASH,EAAKG,SAAWR,EAAiB,CAC7DK,EAAOS,EACP,IAAIC,EAASD,EAAQN,OAASJ,EAAQI,OAGpCJ,EAAQM,WACRK,EAAS,GACTX,EAAQM,UAAYK,EAAShB,IAE7BgB,IAAWX,EAAQM,UAAYX,IAG/BK,EAAQQ,YACRG,EAAS,GACTX,EAAQQ,WAAaG,EAAShB,IAE9BgB,EAASX,EAAQQ,WAAab,GAG5BG,GAAmBA,EAAgBc,MAAMC,MAAMtjB,OAAS,IAC1DuiB,EAAgBc,MAAMC,MAAtB,UAAiCb,EAAQM,UAAYK,EAArD,OAEEZ,GAAoBA,EAAiBa,MAAMC,MAAMtjB,OAAS,IAC5DwiB,EAAiBa,MAAMC,MAAvB,UAAkCb,EAAQQ,WAAaG,EAAvD,OAIJ,OADApa,EAAEiW,mBACK,EAGT,SAASsE,EAAUva,GASjB,OARAmW,SAASqE,KAAKH,MAAMI,OAASd,EAC7BnpB,OAAOkqB,oBAAoB,YAAaR,GAAa,GACrD1pB,OAAOkqB,oBAAoB,UAAWH,GAAW,GAEjDd,OAAU1d,EACV2d,OAAO3d,EAEPiE,EAAEiW,mBACK,EAlETqD,EAAYqB,YAUZ,SAAqB3a,GAWnB,OAVAyZ,EAAUG,EAAa5Z,GACvB0Z,EAAOpoB,OAAOspB,OAAO,GAAInB,GAEzBjpB,OAAOqqB,iBAAiB,YAAaX,GAAa,GAClD1pB,OAAOqqB,iBAAiB,UAAWN,GAAW,GAE9CZ,EAAiBxD,SAASqE,KAAKH,MAAMI,OACrCtE,SAASqE,KAAKH,MAAMI,OAAS,YAE7Bza,EAAEiW,mBACK,GC9BX,IAAI6E,QAAY/e,EAET,SAASgf,GAAeC,EAAWC,GAGxC,OAwBOH,KACHA,GAAY,CACVE,YACAjY,WAAW,EACXmY,WAAYC,GAAiBH,EAAWC,KA5BvC,CACLhlB,IADK,WAEuB,IAAD,EAArB6kB,GAAU/X,YACZ,EAAAkC,SAAQhP,IAAR,oBAGJmlB,KANK,WAOuB,IAAD,EAArBN,GAAU/X,YACZ,EAAAkC,SAAQmW,KAAR,oBAGJrP,KAXK,WAYuB,IAAD,EAArB+O,GAAU/X,YACZ,EAAAkC,SAAQ8G,KAAR,oBAGJ5F,MAhBK,WAiBuB,IAAD,EAArB2U,GAAU/X,YACZ,EAAAkC,SAAQkB,MAAR,qBAgBD,SAASkV,GAAe/X,GACzBwX,IACFA,GAAUI,WAAW5X,GACrB2B,QAAQhP,IACN,sBADF,sBAEiB6kB,GAAUE,UAF3B,gBAGE1X,IAGF2B,QAAQhP,IAAI,sBAAuB,kCAIvC,SAASklB,GAAiBH,EAAWC,GACnC,IAAMK,EAAyB,SAAAhY,GAC7B,MAAO,CACLzK,KAAM,mCACNyK,SAAUA,IAIRiY,EAAyB,SAAAnU,GAER,WAAnB,IAAOA,IACU,qCAAjBA,EAAQvO,MACkB,kBAAnBuO,EAAQ9D,QAEf+X,GAAejU,EAAQ9D,SAI3B,OAAQ0X,GACN,IAAK,OACH,OAAO,SAAA1X,GACLwX,GAAU/X,YAAcO,EACxB9S,OAAOgrB,YAAYF,EAAuBhY,GAAS,MAEvD,IAAK,UAIH,OAHA9S,OAAOqqB,iBAAiB,UAAW,SAAArkB,GACjC+kB,EAAuB/kB,EAAMilB,QAExB,SAAAnY,GACLwX,GAAU/X,YAAcO,EACxBoY,OAAOC,QAAQC,YAAYN,EAAuBhY,KAEtD,IAAK,aAQH,OAPAoY,OAAOC,QAAQE,UAAUC,YAAY,SACnCC,EACAC,EACAC,GAEAV,EAAuBQ,KAElB,SAAAzY,GACLwX,GAAU/X,YAAcO,GAE5B,IAAK,UAOH,OANA2X,GACEA,EAAWiB,qBAAqBL,UAAUC,YAAY,SACpD1U,GAEAmU,EAAuBnU,KAEpB,SAAA9D,GACLwX,GAAU/X,YAAcO,GAE5B,QACE,OAAO,SAAAA,GACLwX,GAAU/X,YAAcO,IC3GhC","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CodePath\"] = factory();\n\telse\n\t\troot[\"CodePath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    // The SpanContext is entirely implementation dependent\n    /**\n     * Returns a string representation of the implementation internal trace ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toTraceId = function () {\n        return '';\n    };\n    /**\n     * Returns a string representation of the implementation internal span ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toSpanId = function () {\n        return '';\n    };\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","import {\n  Tracer,\n  Span,\n  SpanContext,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nexport function createCodePathTracer(traceId, stream, options) {\n  return new CodePathTracer(traceId, stream, options);\n}\n\nclass CodePathTracer extends Tracer {\n  _traceId;\n  _clock;\n  _scopeManager;\n  _stream;\n  _nextSpanId;\n\n  constructor(traceId, stream, options) {\n    super();\n    this._traceId = traceId;\n    this._nextSpanId = 1;\n    this._clock = options.clock;\n    this._scopeManager = options.scopeManager;\n    this._stream = stream;\n\n    stream.writeStartTracer(options.clock.now(), traceId);\n  }\n\n  // NOTE: the input to this method is *always* an associative array. The\n  // public-facing startSpan() method normalizes the arguments so that\n  // all N implementations do not need to worry about variations in the call\n  // signature.\n  //\n  // The default behavior returns a no-op span.\n  // protected _startSpan(name: string, fields: SpanOptions): Span {\n  //   return Noop.span!;\n  // }\n  _startSpan(name, options) {\n    return new CodePathSpan(\n      this,\n      this._clock,\n      this._stream,\n      this._nextSpanId++,\n      name,\n      options\n    );\n  }\n\n  // The default behavior is a no-op.\n  // protected _inject(spanContext: SpanContext, format: string, carrier: any): void {\n  // }\n  _inject(spanContext, format, carrier) {}\n\n  // The default behavior is to return a no-op SpanContext.\n  // protected _extract(format: string, carrier: any): SpanContext | null {\n  //   return Noop.spanContext!;\n  // }\n  _extract(format, carrier) {\n    return new CodePathSpanContext(\"\", \"\");\n  }\n\n  getTraceId() {\n    return this._traceId;\n  }\n\n  getCurrentTime() {\n    return this._clock.now();\n  }\n}\n\nclass CodePathSpan extends Span {\n  _tracer;\n  _clock;\n  _stream;\n  _selfContext;\n  _name;\n  // _childOfContext;\n  // _followsFromContext;\n  // _operationName;\n  // _startTime;\n  // _endTime;\n  // _baggageItems;\n  // _tags;\n  // _logs;\n\n  constructor(tracer, clock, stream, spanId, name, options) {\n    super();\n\n    const traceId = tracer.getTraceId();\n\n    this._tracer = tracer;\n    this._clock = clock;\n    this._stream = stream;\n    this._selfContext = new CodePathSpanContext(traceId, spanId);\n    this._name = name;\n\n    const startTime = (options && options.startTime) || clock.now();\n    const { childOf, followsFrom } = findReferences(options);\n\n    stream.writeStartSpan(\n      startTime,\n      traceId,\n      spanId,\n      name,\n      {\n        childOf: contextToPlain(childOf),\n        followsFrom: contextToPlain(followsFrom)\n      },\n      options.tags,\n      childOf || followsFrom ? undefined : clock.epoch()\n    );\n\n    // this._operationName = name;\n    // this._startTime = (options && options.startTime) || tracer.getCurrentTime();\n    // this._endTime = undefined;\n    // this._baggageItems = {};\n    // this._tags = (options && options.tags) || {};\n    // this._logs = [];\n  }\n\n  // getData() {\n  //   return {\n  //     context: contextToPlain(this._selfContext),\n  //     childOf: contextToPlain(this._childOfContext),\n  //     followsFrom: contextToPlain(this._followsFromContext),\n  //     operationName: this._operationName,\n  //     startTime: this._startTime,\n  //     endTime: this._endTime,\n  //     baggageItems: this._baggageItems,\n  //     tags: this._tags,\n  //     logs: this._logs\n  //   };\n  // }\n\n  // By default returns a no-op SpanContext.\n  // protected _context(): SpanContext {\n  //     return noop.spanContext!;\n  // }\n  _context() {\n    return this._selfContext;\n  }\n\n  // By default returns a no-op tracer.\n  //\n  // The base class could store the tracer that created it, but it does not\n  // in order to ensure the no-op span implementation has zero members,\n  // which allows V8 to aggressively optimize calls to such objects.\n  // protected _tracer(): Tracer {\n  //     return noop.tracer!;\n  // }\n  _tracer() {\n    return this._tracer;\n  }\n\n  // By default does nothing\n  // protected _setOperationName(name: string): void {\n  // }\n  _setOperationName(name) {\n    throw new Error(\"Not supported: setOperationName\");\n    //this._operationName = name;\n  }\n\n  // By default does nothing\n  // protected _setBaggageItem(key: string, value: string): void {\n  // }\n  _setBaggageItem(key, value) {\n    throw new Error(\"Not supported: setBaggageItem\");\n    //this._baggageItems[key] = value;\n  }\n\n  // By default does nothing\n  // protected _getBaggageItem(key: string): string | undefined {\n  //     return undefined;\n  // }\n  _getBaggageItem(key) {\n    return undefined;\n    //return this._baggageItems[key];\n  }\n\n  // By default does nothing\n  //\n  // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n  // will always be an associative array.\n  // protected _addTags(keyValuePairs: { [key: string]: any }): void {\n  // }\n  _addTags(keyValuePairs) {\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeSpanTags(\n      this._clock.now(),\n      traceId,\n      spanId,\n      keyValuePairs\n    );\n    // this._tags = {\n    //   ...this._tags,\n    //   ...keyValuePairs\n    // };\n  }\n\n  // By default does nothing\n  // protected _log(keyValuePairs: { [key: string]: any }, timestamp?: number): void {\n  // }\n  _log(keyValuePairs, timestamp) {\n    const time = timestamp || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeLog(\n      time,\n      traceId,\n      spanId,\n      keyValuePairs.$id,\n      keyValuePairs\n    );\n    // const logEntry = {\n    //   ...(keyValuePairs || {}),\n    //   $time: timestamp || this._tracer.getCurrentTime()\n    // };\n    // this._logs.push(logEntry);\n  }\n\n  // By default does nothing\n  //\n  // finishTime is expected to be either a number or undefined.\n  // protected _finish(finishTime?: number): void {\n  // }\n  _finish(finishTime) {\n    const effectiveFinishTime = finishTime || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeEndSpan(effectiveFinishTime, traceId, spanId);\n\n    // if (this._endTime) {\n    //   throw new Error(\"Invalid operation: span already finished\");\n    // }\n    // this._endTime = finishTime || this._tracer.getCurrentTime();\n  }\n}\n\nclass CodePathSpanContext extends SpanContext {\n  _traceId;\n  _spanId;\n\n  constructor(traceId, spanId) {\n    super();\n    this._traceId = traceId;\n    this._spanId = spanId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal trace ID.\n   *\n   * @returns {string}\n   */\n  toTraceId() {\n    return this._traceId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal span ID.\n   *\n   * @returns {string}\n   */\n  toSpanId() {\n    return this._spanId;\n  }\n}\n\nfunction findReferences(options) {\n  let childOf = undefined;\n  let followsFrom = undefined;\n\n  options &&\n    options.references &&\n    options.references.forEach(ref => {\n      switch (ref.type()) {\n        case REFERENCE_CHILD_OF:\n          childOf = ref.referencedContext();\n          break;\n        case REFERENCE_FOLLOWS_FROM:\n          followsFrom = ref.referencedContext();\n          break;\n      }\n    });\n\n  return {\n    childOf,\n    followsFrom\n  };\n}\n\nexport function contextToPlain(context) {\n  if (context) {\n    return {\n      traceId: context.toTraceId(),\n      spanId: context.toSpanId()\n    };\n  }\n}\n\nexport function plainToContext({ traceId, spanId }) {\n  return new CodePathSpanContext(traceId, spanId);\n}\n","export function isTagSerializable(value) {\n  if (!value) {\n    return true;\n  }\n  const type = typeof value;\n  if (type === \"function\") {\n    return false;\n  }\n  if (type === \"object\") {\n    if (Array.isArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        if (!isTagSerializable(value[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function addTagMetaStringify(tags, tag) {\n  if (tags.$meta && tags.$meta.stringify) {\n    tags.$meta.stringify.push(tag);\n  } else {\n    tags.$meta = {\n      stringify: [tag]\n    };\n  }\n}\n","import { REFERENCE_FOLLOWS_FROM, REFERENCE_CHILD_OF } from \"opentracing\";\nimport { isTagSerializable, addTagMetaStringify } from \"./serializable\";\n\nexport function createCodePathStream(options) {\n  const isStripTagsMode = options && options.stripTags;\n  let entries = [];\n  let isEnabled = options ? !!options.enabled : true;\n  let strippedTagsById = {};\n  let nextStrippedTagsId = 1;\n\n  return {\n    writeStartTracer(time, traceId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"StartTracer\",\n        traceId,\n        tags: includeOrStripTags(tags)\n      });\n    },\n    writeStartSpan(time, traceId, spanId, messageId, references, tags, epoch) {\n      if (!isEnabled) {\n        return;\n      }\n      const { childOf, followsFrom } = references;\n      entries.push({\n        time,\n        epoch,\n        token: \"StartSpan\",\n        traceId,\n        spanId,\n        childOf,\n        followsFrom,\n        messageId,\n        tags: includeOrStripTags(tags)\n      });\n    },\n    writeEndSpan(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"EndSpan\",\n        traceId,\n        spanId,\n        tags: includeOrStripTags(tags)\n      });\n    },\n    writeLog(time, traceId, spanId, messageId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"Log\",\n        traceId,\n        spanId,\n        messageId,\n        tags: includeOrStripTags(tags)\n      });\n    },\n    writeSpanTags(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"SpanTags\",\n        traceId,\n        spanId,\n        tags: includeOrStripTags(tags)\n      });\n    },\n    enable(value) {\n      const effectiveValue = typeof value === \"undefined\" ? true : !!value;\n      isEnabled = effectiveValue;\n    },\n    peekEntries() {\n      return entries;\n    },\n    takeEntries() {\n      const copyOfEntries = entries;\n      entries = [];\n      if (!isStripTagsMode) {\n        copyOfEntries.forEach(entry => normalizeTags(entry.tags));\n      }\n      return copyOfEntries;\n    },\n    clearAll() {\n      entries = [];\n      strippedTagsById = {};\n    },\n    getStrippedTags(ids) {\n      if (!isStripTagsMode) {\n        throw new Error(\"CodePathStream is not in stripped tags mode\");\n      }\n\n      let result = {};\n      ids.forEach(id => {\n        result[id] = strippedTagsById[id];\n        normalizeTags(strippedTagsById[id]);\n      });\n      return result;\n    }\n  };\n\n  function includeOrStripTags(tags) {\n    if (!tags) {\n      return {};\n    }\n    if (isStripTagsMode && Object.keys(tags).length > 0) {\n      const $$id = nextStrippedTagsId++;\n      strippedTagsById[$$id] = tags;\n      return { $$id };\n    }\n    return tags;\n  }\n\n  function normalizeTags(tags) {\n    let visitedObjects;\n\n    if (typeof tags === \"object\") {\n      visitedObjects = new Set();\n\n      for (let key in tags) {\n        const value = tags[key];\n\n        if (!isTagSerializable(value)) {\n          addTagMetaStringify(tags, key);\n          tags[key] = safeStringify(value);\n        }\n      }\n    }\n\n    function safeStringify(obj) {\n      let json = null;\n      try {\n        json = JSON.stringify(obj);\n      } catch (err) {\n        json = JSON.stringify(obj, replaceCircularReferences);\n      }\n      if (json && json.length > 16384) {\n        return json.substr(0, 16384) + \"...[trunc]\";\n      }\n      return json;\n    }\n\n    function replaceCircularReferences(key, value) {\n      if (typeof value === \"object\" && value !== null) {\n        if (visitedObjects.has(value)) {\n          return \"[circ]\";\n        }\n        visitedObjects.add(value);\n      }\n      return value;\n    }\n  }\n}\n","export function createMulticastDelegate(eventName) {\n  let subscribers = [];\n\n  const delegate = {\n    add(subscriber) {\n      delegate.remove(subscriber);\n      subscribers.push(subscriber);\n    },\n    remove(subscriber) {\n      subscribers = subscribers.filter(s => s !== subscriber);\n    },\n    invoke(...args) {\n      subscribers.forEach(subscriber => {\n        try {\n          subscriber(...args);\n        } catch (e) {\n          console.log(`Event [${eventName}] invocation failed!`, e);\n        }\n      });\n    }\n  };\n\n  return delegate;\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\n\nconst originalPromise = window.Promise;\n\nexport function restoreOriginalPromise() {\n  window.Promise = originalPromise;\n}\n\nexport function createAsyncLocalProvider() {\n  let currentLocals = new Map();\n\n  const getCurrentLocals = () => currentLocals;\n  const cloneCurrentLocals = () => new Map(currentLocals.entries());\n  const completionHooks = createMulticastDelegate(\n    \"AsyncLocalProvider.PromiseCompletion\"\n  );\n  const rejectionHooks = createMulticastDelegate(\n    \"AsyncLocalProvider.PromiseRejection\"\n  );\n\n  let nextInstanceId = 1;\n\n  class PromiseWrapper extends Promise {\n    constructor(executor) {\n      const parentLocals = currentLocals;\n      const thisLocals = cloneCurrentLocals();\n      const thisInstanceId = nextInstanceId++;\n\n      //console.log(`PrmoseWrapper[${thisInstanceId}].ctor`);\n\n      super(function(resolve, reject) {\n        const wrapperResolve = value => {\n          currentLocals = thisLocals;\n          try {\n            //console.log(`PrmoseWrapper[${thisInstanceId}].resolve(${value})`);\n            completionHooks.invoke(value, thisInstanceId);\n            resolve(value);\n          } finally {\n            currentLocals = parentLocals;\n          }\n        };\n        const wrapperReject = error => {\n          currentLocals = thisLocals;\n          try {\n            //console.log(`PrmoseWrapper[${thisInstanceId}].reject(${error})`);\n            rejectionHooks.invoke(error, thisInstanceId);\n            reject(error);\n          } finally {\n            currentLocals = parentLocals;\n          }\n        };\n        currentLocals = thisLocals;\n        try {\n          return executor(wrapperResolve, wrapperReject);\n        } finally {\n          currentLocals = parentLocals;\n        }\n      });\n    }\n  }\n\n  window.Promise = PromiseWrapper;\n\n  return {\n    createAsyncLocal(initialValue) {\n      const key = {};\n      getCurrentLocals().set(key, initialValue);\n      return {\n        get() {\n          return getCurrentLocals().get(key);\n        },\n        set(newValue) {\n          getCurrentLocals().set(key, newValue);\n        },\n        remove() {\n          getCurrentLocals().delete(key);\n        }\n      };\n    },\n    cloneCurrentLocals,\n    addPromiseCompletionHook(callback) {\n      completionHooks.add(callback);\n    },\n    addPromiseRejectionHook(callback) {\n      rejectionHooks.add(callback);\n    }\n  };\n}\n","export const LOG_LEVEL = {\n  debug: 0,\n  event: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n","import { LOG_LEVEL } from \"./logLevel\";\n\n//let currentScopeManager = createInternalScopeManager();\n\n// export function trace(promiseOrFunc) {\n//   const logToActiveSpan = tags => {\n//     const activeSpan = currentScopeManager.getActiveSpan();\n//     if (activeSpan) {\n//       activeSpan.log(tags);\n//     }\n//   };\n\n//   const callerScopeManager = currentScopeManager.clone();\n\n//   const originalPromise =\n//     typeof promiseOrFunc === \"function\" ? promiseOrFunc() : promiseOrFunc;\n\n//   const saveScopeManager = currentScopeManager;\n\n//   const wrapperPromise = new Promise((resolve, reject) => {\n//     originalPromise\n//       .then(value => {\n//         currentScopeManager = saveScopeManager;\n//         logToActiveSpan({\n//           $id: \"async-then\",\n//           $async: \"then\",\n//           level: LOG_LEVEL.debug,\n//           value\n//         });\n//         resolve(value);\n//       })\n//       .catch(err => {\n//         currentScopeManager = saveScopeManager;\n//         logToActiveSpan({\n//           $id: \"async-catch\",\n//           $async: \"catch\",\n//           level: LOG_LEVEL.error,\n//           error: {\n//             message: err.message,\n//             stack: err.stack\n//           }\n//         });\n//         reject(err);\n//       });\n//   });\n\n//   currentScopeManager = callerScopeManager;\n//   return wrapperPromise;\n// }\n\nexport function createDefaultScopeManager(asyncLocalProvider) {\n  const activeTracer = asyncLocalProvider.createAsyncLocal();\n  const activeSpan = asyncLocalProvider.createAsyncLocal();\n\n  const logToActiveSpan = tags => {\n    const span = activeSpan.get();\n    if (span) {\n      span.log(tags);\n    }\n  };\n\n  asyncLocalProvider.addPromiseCompletionHook(value => {\n    //console.log('COMPLETION-HOOK!');\n    logToActiveSpan({\n      $id: \"async-then\",\n      $async: \"then\",\n      level: LOG_LEVEL.debug,\n      value\n    });\n  });\n\n  asyncLocalProvider.addPromiseRejectionHook(err => {\n    //console.log('REJECTION-HOOK!');\n    logToActiveSpan({\n      $id: \"async-catch\",\n      $async: \"catch\",\n      level: LOG_LEVEL.error,\n      error: {\n        message: err.message,\n        stack: err.stack\n      }\n    });\n  });\n\n  return {\n    getActiveTracer() {\n      return activeTracer.get();\n    },\n    getActiveSpan() {\n      return activeSpan.get();\n    },\n    setActiveTracer(tracer) {\n      activeTracer.set(tracer);\n    },\n    setActiveSpan(span) {\n      activeSpan.set(span);\n    }\n  };\n}\n\nexport function resetCurrentScope() {}\n","import {\n  Tracer,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nimport { createCodePathTracer } from \"./codePathTracer\";\nimport { createCodePathStream } from \"./codePathStream\";\nimport { createAsyncLocalProvider } from \"./asyncLocalProvider\";\nimport { createDefaultScopeManager } from \"./codePathScopeManager\";\nimport { LOG_LEVEL } from \"./logLevel\";\n\nexport const createRealClock = () => {\n  return {\n    now() {\n      return performance.now();\n    },\n    epoch() {\n      return new Date().getTime();\n    },\n    setInterval(func, delay) {\n      return setInterval(func, delay);\n    },\n    clearInterval(id) {\n      clearInterval(id);\n    },\n    setTimeout(func, delay) {\n      return setTimeout(func, delay);\n    },\n    clearTimeout(id) {\n      clearTimeout(id);\n    }\n  };\n};\n\n// export const createDefaultScopeManager = () => {\n//   let activeTracer = undefined;\n//   let activeSpan = undefined;\n//   return {\n//     getActiveTracer() {\n//       return activeTracer;\n//     },\n//     getActiveSpan() {\n//       return activeSpan;\n//     },\n//     setActiveTracer(tracer) {\n//       activeTracer = tracer;\n//     },\n//     setActiveSpan(span) {\n//       activeSpan = span;\n//     }\n//   };\n// };\n\nexport const noopTracerFactory = () => new Tracer();\n\nexport const defaultTracerFactory = (stream, options) =>\n  createCodePathTracer(`webuser${options.clock.now()}`, stream, options);\n\nexport const GlobalCodePath = {\n  configure(options) {\n    const { input, output } = createCodePath(options);\n    Object.assign(GlobalCodePath, {\n      ...input,\n      getOutputStream() {\n        return output;\n      }\n    });\n  },\n  getOutputStream() {\n    throw new Error(\"GlobalCodePath was not configured\");\n  }\n};\n\nexport function createCodePath(options) {\n  const getAsyncLocalProvider = () => {\n    if (options && options.asyncLocalProvider) {\n      return options.asyncLocalProvider;\n    }\n    return createAsyncLocalProvider();\n  };\n\n  const clock = (options && options.clock) || createRealClock();\n  const scopeManager =\n    (options && options.scopeManager) ||\n    createDefaultScopeManager(getAsyncLocalProvider());\n  const tracerFactory =\n    (options && options.tracerFactory) || defaultTracerFactory;\n  const outputStream =\n    (options && options.outputStream) ||\n    createCodePathStream(options ? options.stream : undefined);\n  let spanEntries = {};\n\n  const getOrCreateActiveTracer = () => {\n    const existingTracer = scopeManager.getActiveTracer();\n    if (existingTracer) {\n      return existingTracer;\n    }\n\n    const newTracer = tracerFactory({ clock, scopeManager, tracerFactory });\n    scopeManager.setActiveTracer(newTracer);\n    return newTracer;\n  };\n\n  const getParentSpanContext = parentContext => {\n    if (parentContext) {\n      return parentContext;\n    }\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      return existingSpan.context();\n    }\n  };\n\n  const logToActiveSpan = tags => {\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      existingSpan.log(tags);\n    } else {\n      const activeTracer = scopeManager.getActiveTracer();\n      const tempSpan = activeTracer.startSpan(\"unknown-root\");\n      tempSpan.log(tags);\n      tempSpan.finish();\n    }\n  };\n\n  const startSpan = (id, tags, parentContext, parentReferenceType) => {\n    const tracer = getOrCreateActiveTracer();\n    const parentReferenceContext = getParentSpanContext(parentContext);\n    const spanOptions = {\n      references: parentReferenceContext && [\n        new Reference(parentReferenceType, parentReferenceContext)\n      ],\n      tags\n    };\n    const childSpan = tracer.startSpan(id, spanOptions);\n    scopeManager.setActiveSpan(childSpan);\n    const childSpanId = childSpan.context().toSpanId();\n    spanEntries[childSpanId] = {\n      span: childSpan,\n      options: spanOptions\n    };\n    return childSpan;\n  };\n\n  scopeManager.setActiveTracer(\n    tracerFactory(outputStream, {\n      clock,\n      scopeManager,\n      tracerFactory\n    })\n  );\n\n  const thisCodePath = {\n    getActiveSpan() {\n      return scopeManager.getActiveSpan();\n    },\n    logDebug(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.debug, ...tags });\n    },\n    logEvent(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.event, ...tags });\n    },\n    logWarning(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.warning, ...tags });\n    },\n    logError(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.error, ...tags });\n    },\n    logCritical(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.critical, ...tags });\n    },\n    spanRoot(id, tags) {\n      scopeManager.setActiveSpan(undefined);\n      return startSpan(id, tags);\n    },\n    spanChild(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_CHILD_OF);\n    },\n    spanFollower(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_FOLLOWS_FROM);\n    },\n    finishSpan(tags) {\n      const activeSpan = scopeManager.getActiveSpan();\n      if (!activeSpan) {\n        throw new Error(\"Current scope has no active span\");\n      }\n      activeSpan.finish();\n      if (!activeSpan.doesNotifyTracerOnFinish) {\n        thisCodePath.notifySpanFinished(activeSpan);\n      }\n    },\n    notifySpanFinished(span) {\n      const spanContext = span.context();\n      const spanId = spanContext.toSpanId();\n      const traceId = spanContext.toTraceId();\n      const entry = spanEntries[spanId];\n      if (!entry) {\n        throw new Error(`Trace span not found: id [${spanId}]`);\n      }\n      if (span === scopeManager.getActiveSpan()) {\n        const parentContext =\n          entry.options.references &&\n          entry.options.references[0].referencedContext();\n        if (parentContext && parentContext.toTraceId() === traceId) {\n          const parentEntry = spanEntries[parentContext.toSpanId()];\n          if (parentEntry) {\n            scopeManager.setActiveSpan(parentEntry.span);\n          }\n        } else {\n          scopeManager.setActiveSpan(undefined);\n        }\n      }\n      delete spanEntries[spanId];\n    },\n    clearAll() {\n      spanEntries = {};\n      scopeManager.setActiveSpan(undefined);\n    }\n  };\n\n  return {\n    input: thisCodePath,\n    output: outputStream\n  };\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathModel(options) {\n  const insertNodesCallbacks = createMulticastDelegate(\n    \"CodePathModel.insertNodes\"\n  );\n  const updateNodesCallbacks = createMulticastDelegate(\n    \"CodePathModel.updateNodes\"\n  );\n  const extractEntryMetrics =\n    options && options.extractEntryMetrics\n      ? options.extractEntryMetrics\n      : entry => entry.metrics;\n\n  let traceNodeMap = undefined;\n  let rootNode = undefined;\n  let nextNodeId = 1;\n\n  const initializeModel = () => {\n    traceNodeMap = createTraceNodeMap();\n    rootNode = createRootNode();\n  };\n\n  const getParentContext = entry => {\n    if (entry.token === \"StartSpan\") {\n      return entry.childOf || entry.followsFrom;\n    } else {\n      return entry;\n    }\n  };\n\n  const findParentNode = entry => {\n    const parentContext = getParentContext(entry);\n    if (parentContext) {\n      const parentNode = traceNodeMap.getSpanNode(\n        parentContext.traceId,\n        parentContext.spanId\n      );\n      if (parentNode) {\n        return parentNode;\n      }\n      console.warn(\"CODEPATH.MODEL>\", \"Span node not found\", parentContext);\n    }\n    return rootNode;\n  };\n\n  const bubbleSingleMetric = (targetNode, key, value) => {\n    if (!targetNode.metrics) {\n      targetNode.metrics = { [key]: value };\n    } else if (!targetNode.metrics[key]) {\n      targetNode.metrics[key] = value;\n    } else {\n      targetNode.metrics[key] += value;\n    }\n  };\n\n  const bubbleMetrics = (node, insertQueue, updateQueue) => {\n    if (!node.metrics) {\n      return;\n    }\n    const insertSet = new Set(insertQueue);\n    const metricKeys = Object.keys(node.metrics);\n    for (\n      let targetNode = node.parent;\n      targetNode.id > 0;\n      targetNode = targetNode.parent\n    ) {\n      metricKeys.forEach(key => {\n        const value = node.metrics[key];\n        bubbleSingleMetric(targetNode, key, value);\n      });\n      if (!insertSet.has(targetNode)) {\n        updateQueue.push(targetNode);\n      }\n    }\n  };\n\n  const handleInsertNodeEntry = (entry, insertQueue, updateQueue) => {\n    const { traceId, spanId } = entry;\n    const parent = findParentNode(entry);\n    const newNode = createRegularNode(\n      nextNodeId++,\n      parent,\n      entry,\n      extractEntryMetrics\n    );\n\n    appendChildNodeToParent(newNode, parent);\n    if (entry.token === \"StartSpan\") {\n      traceNodeMap.setSpanNode(traceId, spanId, newNode);\n    }\n\n    insertQueue.push(newNode);\n    bubbleMetrics(newNode, insertQueue, updateQueue);\n  };\n\n  const handleSpanTagsEntry = (entry, insertQueue, updateQueue) => {\n    const node = traceNodeMap.getSpanNode(entry.traceId, entry.spanId);\n    if (node && entry.tags && entry.tags.$$id) {\n      const currentTagsIds = node.entry.tags.$$id;\n      const newTagsIds = Array.isArray(currentTagsIds)\n        ? currentTagsIds\n        : currentTagsIds\n        ? [currentTagsIds]\n        : [];\n      newTagsIds.push(entry.tags.$$id);\n      node.entry.tags = { $$id: newTagsIds };\n      updateQueue.push(node);\n    }\n  };\n\n  const handleEndSpanEntry = (entry, insertQueue, updateQueue) => {\n    const node = traceNodeMap.getSpanNode(entry.traceId, entry.spanId);\n    if (node) {\n      node.entry.duration = entry.time - node.entry.time;\n      updateQueue.push(node);\n    }\n  };\n\n  const handleStartTracerEntry = (entry, insertQueue, updateQueue) => {};\n\n  const entryHandlerByToken = {\n    StartTracer: handleStartTracerEntry,\n    StartSpan: handleInsertNodeEntry,\n    Log: handleInsertNodeEntry,\n    SpanTags: handleSpanTagsEntry,\n    EndSpan: handleEndSpanEntry\n  };\n\n  const handleEntry = (entry, insertQueue, updateQueue) => {\n    const handler = entryHandlerByToken[entry.token];\n    if (handler) {\n      handler(entry, insertQueue, updateQueue);\n    } else {\n      console.error(`Unknown entry token [${entry.token}]`);\n    }\n  };\n\n  initializeModel();\n\n  return {\n    getRootNode() {\n      return rootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(rootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(rootNode);\n    },\n    walkNodesDepthFirst(callback) {\n      walkNodesDepthFirst(rootNode, callback);\n    },\n    publish(entries) {\n      const insertQueue = [];\n      const updateQueue = [];\n      entries.forEach(entry => {\n        handleEntry(entry, insertQueue, updateQueue);\n      });\n      if (insertQueue.length > 0) {\n        insertNodesCallbacks.invoke(insertQueue);\n      }\n      if (updateQueue.length > 0) {\n        updateNodesCallbacks.invoke(updateQueue);\n      }\n    },\n    subscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.add(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.add(subscriber.updateNodes);\n      }\n    },\n    unsubscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.remove(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.remove(subscriber.updateNodes);\n      }\n    },\n    // deleteRow(id) {\n    // },\n    clearAll() {\n      initializeModel();\n    },\n    extractEntryMetrics\n  };\n}\n\nexport function createRootNode() {\n  return {\n    id: 0,\n    entry: undefined,\n    parent: undefined,\n    top: undefined,\n    depth: -1,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined,\n    metrics: undefined\n  };\n}\n\nexport function createRegularNode(id, parent, entry, extractEntryMetrics) {\n  const node = {\n    id,\n    entry,\n    parent,\n    depth: parent.depth + 1,\n    top: parent.top,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined,\n    metrics: extractEntryMetrics ? extractEntryMetrics(entry) : entry.metrics\n  };\n  if (!node.top) {\n    node.top = node;\n  }\n  return node;\n}\n\nexport function appendChildNodeToParent(newChild, parent) {\n  if (parent.lastChild) {\n    newChild.prevSibling = parent.lastChild;\n    parent.lastChild.nextSibling = newChild;\n  } else {\n    parent.firstChild = newChild;\n  }\n  parent.lastChild = newChild;\n}\n\nexport function getNodesAsFlatArray(rootNode) {\n  if (!rootNode) {\n    return [];\n  }\n  const flatNodes = [];\n  walkNodesDepthFirst(rootNode, node => flatNodes.push(node));\n  return flatNodes;\n}\n\nexport function getTopLevelNodesAsArray(rootNode) {\n  const topLevelNodes = [];\n  walkImmediateSubNodes(rootNode, node => {\n    topLevelNodes.push(node);\n  });\n  return topLevelNodes;\n}\n\nexport function walkNodesDepthFirst(rootNode, callback) {\n  return walkImmediateSubNodes(rootNode, node => {\n    if (callback(node) === false) {\n      return false;\n    }\n    if (node.firstChild) {\n      if (walkNodesDepthFirst(node, callback) === false) {\n        return false;\n      }\n    }\n  });\n}\n\nexport function walkImmediateSubNodes(parentNode, callback) {\n  if (parentNode) {\n    for (let node = parentNode.firstChild; !!node; node = node.nextSibling) {\n      if (callback(node) === false) {\n        return false;\n      }\n    }\n  }\n}\n\nexport function findNextMatchingNode(fromNode, predicate) {\n  let currentNode = fromNode;\n  let finishedSubTree = false;\n\n  while (currentNode) {\n    if (!finishedSubTree && currentNode.firstChild) {\n      currentNode = currentNode.firstChild;\n    } else {\n      finishedSubTree = false;\n      if (currentNode.nextSibling) {\n        currentNode = currentNode.nextSibling;\n      } else {\n        finishedSubTree = true;\n        currentNode = currentNode.parent;\n      }\n    }\n\n    if (!finishedSubTree && predicate(currentNode)) {\n      return currentNode;\n    }\n  }\n}\n\nexport function findPrevMatchingNode(fromNode, predicate) {\n  let currentNode = fromNode;\n  let finishedSubTree = false;\n\n  while (currentNode) {\n    if (!finishedSubTree && currentNode.lastChild) {\n      currentNode = currentNode.lastChild;\n    } else {\n      finishedSubTree = false;\n      if (currentNode.prevSibling) {\n        currentNode = currentNode.prevSibling;\n      } else {\n        finishedSubTree = true;\n        currentNode = currentNode.parent;\n      }\n    }\n\n    if (!finishedSubTree && predicate(currentNode)) {\n      return currentNode;\n    }\n  }\n}\n\nfunction createTraceNodeMap() {\n  let mapByTraceId = {};\n\n  const getOrAddTraceSpanNodeMap = traceId => {\n    const existingMap = mapByTraceId[traceId];\n    if (existingMap) {\n      return existingMap;\n    }\n\n    const newMap = createSpanNodeMap();\n    mapByTraceId[traceId] = newMap;\n    return newMap;\n  };\n\n  return {\n    getSpanNode(traceId, spanId) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.getSpanNode(spanId);\n    },\n    setSpanNode(traceId, spanId, node) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.setSpanNode(spanId, node);\n    }\n  };\n}\n\nfunction createSpanNodeMap() {\n  let nodeBySpanId = {};\n\n  return {\n    getSpanNode(spanId) {\n      return nodeBySpanId[spanId];\n    },\n    setSpanNode(spanId, node) {\n      nodeBySpanId[spanId] = node;\n    }\n  };\n}\n","import {\n  createRootNode,\n  createRegularNode,\n  appendChildNodeToParent,\n  getNodesAsFlatArray,\n  getTopLevelNodesAsArray,\n  walkNodesDepthFirst,\n  findNextMatchingNode,\n  findPrevMatchingNode\n} from \"./codePathModel\";\n\nimport { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathSearchModel(sourceModel, predicate) {\n  const insertNodesCallbacks = createMulticastDelegate(\n    \"CodePathSearchModel.insertNodes\"\n  );\n  const updateNodesCallbacks = createMulticastDelegate(\n    \"CodePathSearchModel.updateNodes\"\n  );\n\n  let resultNodeById = {};\n  let newlyCreatedResultNodes = undefined;\n  let resultRootNode = undefined;\n\n  const initializeFromSourceModel = () => {\n    resultNodeById = {};\n    newlyCreatedResultNodes = undefined;\n    resultRootNode = performSearch();\n  };\n\n  const sourceModelSubscriber = {\n    insertNodes: handleInsertedSourceNodes,\n    updateNodes: handleUpdatedSourceNodes\n  };\n\n  sourceModel.subscribe(sourceModelSubscriber);\n  initializeFromSourceModel();\n\n  return {\n    getRootNode() {\n      return resultRootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(resultRootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(resultRootNode);\n    },\n    getFirstMatchedNode() {\n      let firstMatchedNode = undefined;\n      walkNodesDepthFirst(resultRootNode, node => {\n        if (node.matched) {\n          firstMatchedNode = node;\n          return false;\n        }\n      });\n      return firstMatchedNode;\n    },\n    getNextMatchedNode(matchedNode) {\n      return findNextMatchingNode(matchedNode, node => node.matched);\n    },\n    getPrevMatchedNode(matchedNode) {\n      return findPrevMatchingNode(matchedNode, node => node.matched);\n    },\n    subscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.add(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.add(subscriber.updateNodes);\n      }\n    },\n    unsubscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.remove(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.remove(subscriber.updateNodes);\n      }\n    },\n    unsubscribeFromSource() {\n      sourceModel.unsubscribe(handleInsertedSourceNodes);\n    },\n    clearAll() {\n      sourceModel.clearAll();\n      initializeFromSourceModel();\n    }\n  };\n\n  function performSearch() {\n    const sourceRootNode = sourceModel.getRootNode();\n    const resultRootNode = createRootNode();\n    resultNodeById[resultRootNode.id] = resultRootNode;\n\n    depthFirstSearchSubTree(sourceRootNode, () => resultRootNode);\n\n    return resultRootNode;\n  }\n\n  function depthFirstSearchSubTree(node, getResultParentNode) {\n    const createThisResultNode = matched => {\n      return createResultNode(node, matched, getResultParentNode);\n    };\n\n    const isRootNode = !node.parent;\n    const thisNodeMatched = !isRootNode && predicate(node);\n    let thisResultNode = thisNodeMatched\n      ? createThisResultNode(true)\n      : undefined;\n\n    for (\n      let subNode = node.firstChild;\n      !!subNode;\n      subNode = subNode.nextSibling\n    ) {\n      depthFirstSearchSubTree(subNode, () => {\n        if (!thisResultNode) {\n          thisResultNode = isRootNode\n            ? getResultParentNode()\n            : createThisResultNode(false);\n        }\n        return thisResultNode;\n      });\n    }\n  }\n\n  function createResultNode(sourceNode, matched, getResultParentNode) {\n    const resultParentNode = getResultParentNode();\n    let resultNode = createRegularNode(\n      sourceNode.id,\n      resultParentNode,\n      sourceNode.entry,\n      sourceModel.extractEntryMetrics\n    );\n    resultNodeById[resultNode.id] = resultNode;\n    if (newlyCreatedResultNodes) {\n      newlyCreatedResultNodes.push(resultNode);\n    }\n    appendChildNodeToParent(resultNode, resultParentNode);\n    resultNode.sourceNode = sourceNode;\n    resultNode.matched = matched;\n    if (sourceNode.matchHighlight) {\n      // TODO: make predicate return { matched, highlight }\n      resultNode.matchHighlight = sourceNode.matchHighlight;\n      sourceNode.matchHighlight = undefined;\n    }\n    return resultNode;\n  }\n\n  function getOrCreateResultParentNode(sourceChildNode) {\n    if (!sourceChildNode.parent) {\n      return;\n    }\n    const existingParent = resultNodeById[sourceChildNode.parent.id];\n    if (existingParent) {\n      return existingParent;\n    }\n    return createResultNode(sourceChildNode.parent, false, () =>\n      getOrCreateResultParentNode(sourceChildNode.parent)\n    );\n  }\n\n  function handleInsertedSourceNodes(insertedNodes) {\n    newlyCreatedResultNodes = [];\n    const matchingNodes = insertedNodes.filter(predicate);\n\n    matchingNodes.forEach(sourceNode => {\n      const getParentNode = () => {\n        return getOrCreateResultParentNode(sourceNode);\n      };\n      createResultNode(sourceNode, true, getParentNode);\n    });\n\n    if (newlyCreatedResultNodes.length > 0) {\n      insertNodesCallbacks.invoke(newlyCreatedResultNodes);\n    }\n    newlyCreatedResultNodes = undefined;\n  }\n\n  function handleUpdatedSourceNodes(updatedNodes) {}\n}\n","import {\n  createRootNode,\n  createRegularNode,\n  appendChildNodeToParent,\n  getNodesAsFlatArray,\n  getTopLevelNodesAsArray,\n  walkNodesDepthFirst,\n  findNextMatchingNode,\n  findPrevMatchingNode\n} from \"./codePathModel\";\n\nimport { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathFlatFilterModel(sourceModel, predicate) {\n  const insertNodesCallbacks = createMulticastDelegate(\n    \"CodePathFlatFilterModel.insertNodes\"\n  );\n  const updateNodesCallbacks = createMulticastDelegate(\n    \"CodePathFlatFilterModel.updateNodes\"\n  );\n\n  let resultNodeById = {};\n  let newlyCreatedResultNodes = undefined;\n  let resultRootNode = undefined;\n\n  const initializeFromSourceModel = () => {\n    resultNodeById = {};\n    newlyCreatedResultNodes = undefined;\n    resultRootNode = performSearch();\n  };\n\n  const sourceModelSubscriber = {\n    insertNodes: handleInsertedSourceNodes,\n    updateNodes: handleUpdatedSourceNodes\n  };\n\n  sourceModel.subscribe(sourceModelSubscriber);\n  initializeFromSourceModel();\n\n  return {\n    getRootNode() {\n      return resultRootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(resultRootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(resultRootNode);\n    },\n    getFirstMatchedNode() {\n      let firstMatchedNode = undefined;\n      walkNodesDepthFirst(resultRootNode, node => {\n        if (node.matched) {\n          firstMatchedNode = node;\n          return false;\n        }\n      });\n      return firstMatchedNode;\n    },\n    getNextMatchedNode(matchedNode) {\n      return findNextMatchingNode(matchedNode, node => node.matched);\n    },\n    getPrevMatchedNode(matchedNode) {\n      return findPrevMatchingNode(matchedNode, node => node.matched);\n    },\n    subscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.add(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.add(subscriber.updateNodes);\n      }\n    },\n    unsubscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.remove(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.remove(subscriber.updateNodes);\n      }\n    },\n    unsubscribeFromSource() {\n      sourceModel.unsubscribe(sourceModelSubscriber);\n    },\n    clearAll() {\n      sourceModel.clearAll();\n      initializeFromSourceModel();\n    }\n  };\n\n  function performSearch() {\n    const sourceRootNode = sourceModel.getRootNode();\n    const resultRootNode = createRootNode();\n    resultNodeById[resultRootNode.id] = resultRootNode;\n\n    depthFirstSearchSubTree(sourceRootNode, () => resultRootNode);\n\n    return resultRootNode;\n  }\n\n  function depthFirstSearchSubTree(node, getResultParentNode) {\n    const createThisResultNode = matched => {\n      return createResultNode(node, matched, getResultParentNode);\n    };\n\n    const isRootNode = !node.parent;\n    const thisNodeMatched = !isRootNode && predicate(node);\n    let thisResultNode = thisNodeMatched\n      ? createThisResultNode(true)\n      : undefined;\n\n    for (\n      let subNode = node.firstChild;\n      !!subNode;\n      subNode = subNode.nextSibling\n    ) {\n      depthFirstSearchSubTree(subNode, getResultParentNode);\n    }\n  }\n\n  function createResultNode(sourceNode, matched, getResultParentNode) {\n    const resultParentNode = getResultParentNode();\n    let resultNode = createRegularNode(\n      sourceNode.id,\n      resultParentNode,\n      sourceNode.entry,\n      sourceModel.extractEntryMetrics\n    );\n    resultNodeById[resultNode.id] = resultNode;\n    if (newlyCreatedResultNodes) {\n      newlyCreatedResultNodes.push(resultNode);\n    }\n    appendChildNodeToParent(resultNode, resultParentNode);\n    resultNode.sourceNode = sourceNode;\n    resultNode.matched = matched;\n    return resultNode;\n  }\n\n  function handleInsertedSourceNodes(insertedNodes) {\n    newlyCreatedResultNodes = [];\n    const matchingNodes = insertedNodes.filter(predicate);\n\n    matchingNodes.forEach(sourceNode => {\n      createResultNode(sourceNode, true, () => resultRootNode);\n    });\n\n    if (newlyCreatedResultNodes.length > 0) {\n      insertNodesCallbacks.invoke(newlyCreatedResultNodes);\n    }\n    newlyCreatedResultNodes = undefined;\n  }\n\n  function handleUpdatedSourceNodes(updatedNodes) {}\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\nimport { createCodePathModel } from \"./codePathModel\";\n\nexport function createTreeGridController(view, model) {\n  let rowById = {};\n  let masterIndexVersion = 1;\n\n  //setInterval(() => console.log(rowById), 1000);\n\n  const subscriber = {\n    insertNodes: handleInsertedNodes,\n    updateNodes: handleUpdatedNodes\n  };\n\n  const controller = {\n    getNodeById(id) {\n      const row = rowById[id];\n      if (row) {\n        return row.getNode();\n      }\n    },\n    toggle(id) {\n      return rowById[id].toggle();\n    },\n    expand(id) {\n      rowById[id].expand();\n    },\n    collapse(id) {\n      rowById[id].collapse();\n    },\n    selectNode(node) {\n      controller.expandToNode(node);\n      const nodeRow = rowById[node.id];\n      const nodeRowIndex = nodeRow.findAbsoluteIndex();\n      view.selectNode(nodeRowIndex, node);\n    },\n    expandToNode(node) {\n      if (!rowById[node.id]) {\n        controller.expandToNode(node.parent);\n        controller.expand(node.parent.id);\n      }\n    },\n    getIsExpanded(id) {\n      const row = rowById[id];\n      return row ? row.getIsExpanded() : false;\n    },\n    getIsVisible(id) {\n      const row = rowById[id];\n      return row ? rowById[id].getIsVisible() : false;\n    },\n    replaceModel(newModel) {\n      model.unsubscribe(subscriber);\n      model = newModel;\n      initWithCurrentModel();\n    },\n    clearAll() {\n      model.clearAll();\n      controller.replaceModel(model);\n    },\n    onNodeSelected(callback) {\n      view.onNodeSelected(callback);\n    }\n  };\n\n  view.attachController(controller);\n  initWithCurrentModel();\n  return controller;\n\n  function initWithCurrentModel() {\n    rowById = {};\n    masterIndexVersion = 1;\n    initRootNode();\n    view.clearAll();\n    subscriber.insertNodes(model.getTopLevelNodes());\n    model.subscribe(subscriber);\n  }\n\n  function createSubNodesRowControllers(subNodes) {\n    for (let node of subNodes) {\n      const row = createRowController(node);\n      rowById[node.id] = row;\n    }\n  }\n\n  function createRowController(node) {\n    let isExpanded = false;\n    let subTreeHeight = 0;\n    let cachedAbsoluteIndex = undefined;\n    let cachedIndexVersion = masterIndexVersion;\n\n    const getNode = () => {\n      return node;\n    };\n    const getParent = () => {\n      return rowById[node.parent.id];\n    };\n    const getPrevSibling = () => {\n      return node.prevSibling ? rowById[node.prevSibling.id] : undefined;\n    };\n    const getNextSibling = () => {\n      return node.nextSibling ? rowById[node.nextSibling.id] : undefined;\n    };\n    const getFirstChild = () => {\n      return node.firstChild ? rowById[node.firstChild.id] : undefined;\n    };\n    const getIsExpanded = () => {\n      return isExpanded;\n    };\n    const getIsVisible = () => {\n      const parent = getParent();\n      return parent.getIsVisible() && parent.getIsExpanded();\n    };\n    const getSubTreeHeight = () => {\n      return subTreeHeight;\n    };\n    const updateSubTreeHeight = delta => {\n      subTreeHeight += delta;\n      cachedIndexVersion = masterIndexVersion;\n      getParent().updateSubTreeHeight(delta);\n    };\n    const getIndexVersion = () => {\n      return masterIndexVersion;\n    };\n    const isCachedAbsoluteIndexValid = () => {\n      return !!cachedAbsoluteIndex && cachedIndexVersion === masterIndexVersion;\n    };\n    const findAbsoluteIndex = () => {\n      if (!isCachedAbsoluteIndexValid()) {\n        let indexRelativeToParent = 0;\n        for (\n          let sibling = getPrevSibling();\n          !!sibling;\n          sibling = sibling.getPrevSibling()\n        ) {\n          indexRelativeToParent += 1 + sibling.getSubTreeHeight();\n        }\n        const parentAbsoluteIndex = getParent().findAbsoluteIndex();\n        cachedAbsoluteIndex = parentAbsoluteIndex + indexRelativeToParent + 1;\n        cachedIndexVersion = masterIndexVersion;\n      }\n      return cachedAbsoluteIndex;\n    };\n    const showSubNodes = subNodes => {\n      if (!getIsVisible() || !getIsExpanded()) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      createSubNodesRowControllers(subNodes);\n      view.insertNodes(thisRowIndex + subTreeHeight + 1, subNodes);\n      masterIndexVersion++;\n      updateSubTreeHeight(+subNodes.length);\n      view.updateNode(thisRowIndex, node);\n    };\n    const hideSubNodes = () => {\n      if (!getIsVisible() || subTreeHeight === 0) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      const removedNodeIds = view.removeNodes(thisRowIndex + 1, subTreeHeight);\n      removedNodeIds && removedNodeIds.forEach(id => delete rowById[id]);\n      masterIndexVersion++;\n      updateSubTreeHeight(-subTreeHeight);\n      view.updateNode(thisRowIndex, node);\n    };\n    const toggle = () => {\n      if (isExpanded) {\n        collapse();\n      } else {\n        expand();\n      }\n      return {\n        isExpanded\n      };\n    };\n    const expand = () => {\n      if (isExpanded || !node.firstChild) {\n        return;\n      }\n      const subNodes = [];\n      for (\n        let subNode = node.firstChild;\n        !!subNode;\n        subNode = subNode.nextSibling\n      ) {\n        subNodes.push(subNode);\n      }\n      isExpanded = true;\n      showSubNodes(subNodes);\n    };\n    const collapse = () => {\n      isExpanded = false;\n      hideSubNodes();\n    };\n\n    return {\n      getNode,\n      getParent,\n      getPrevSibling,\n      getNextSibling,\n      getFirstChild,\n      getIsExpanded,\n      getIsVisible,\n      getSubTreeHeight,\n      updateSubTreeHeight,\n      getIndexVersion,\n      findAbsoluteIndex,\n      toggle,\n      expand,\n      collapse,\n      showSubNodes\n    };\n  }\n\n  function createRootNodeController(rootNode) {\n    let subTreeHeight = 0;\n    const noop = () => {};\n\n    return {\n      getNode: () => rootNode,\n      getParent: noop,\n      getPrevSibling: noop,\n      getNextSibling: noop,\n      getFirstChild: noop,\n      getIsExpanded: () => true,\n      getIsVisible: () => true,\n      getSubTreeHeight: () => subTreeHeight,\n      updateSubTreeHeight(delta) {\n        subTreeHeight += delta;\n      },\n      getIndexVersion: () => masterIndexVersion,\n      findAbsoluteIndex: () => -1,\n      toggle: noop,\n      expand: noop,\n      collapse: noop,\n      showSubNodes(subNodes) {\n        createSubNodesRowControllers(subNodes);\n        view.insertNodes(subTreeHeight, subNodes);\n        subTreeHeight += subNodes.length;\n      }\n    };\n  }\n\n  function handleInsertedNodes(insertedNodes) {\n    let currentGroup = undefined;\n\n    for (let i = 0; i < insertedNodes.length; i++) {\n      const parentId = insertedNodes[i].parent.id;\n      const parentRow = rowById[parentId];\n      if (!currentGroup || currentGroup.parentId !== parentId) {\n        beginNewGroup(i);\n      }\n    }\n\n    endCurrentGroup(insertedNodes.length);\n\n    function beginNewGroup(index) {\n      endCurrentGroup(index);\n      currentGroup = {\n        parentId: insertedNodes[index].parent.id,\n        startIndex: index\n      };\n    }\n\n    function endCurrentGroup(index) {\n      if (currentGroup && currentGroup.startIndex < index) {\n        const parentRow = rowById[currentGroup.parentId];\n        if (parentRow) {\n          const nodesInGroup = insertedNodes.slice(\n            currentGroup.startIndex,\n            index\n          );\n          parentRow.showSubNodes(nodesInGroup);\n        }\n      }\n    }\n  }\n\n  function handleUpdatedNodes(updatedNodes) {\n    updatedNodes.forEach(node => {\n      const row = rowById[node.id];\n      if (row) {\n        const index = row.findAbsoluteIndex();\n        view.updateNode(index, node);\n      }\n    });\n  }\n\n  function initRootNode() {\n    const rootNode = model.getRootNode();\n    rowById[rootNode.id] = createRootNodeController(rootNode);\n  }\n}\n\nexport function createTreeGridView(table, columns, rows) {\n  const nodeSelectedCallbacks = createMulticastDelegate(\n    \"TreeGridView.NodeSelected\"\n  );\n  const keyPressedCallbacks = createMulticastDelegate(\n    \"TreeGridView.KeyPressed\"\n  );\n\n  table.onkeydown = e => {\n    if (handleTableKeyboardEvent(e) === true) {\n      e.stopPropagation();\n      return false;\n    }\n    keyPressedCallbacks.invoke(e);\n    return !e.defaultPrevented;\n  };\n\n  let tbody = document.createElement(\"tbody\");\n  table.appendChild(tbody);\n\n  let controller = undefined;\n  let selectedTr = undefined;\n\n  const stringToTextNode = element => {\n    if (typeof element === \"string\") {\n      return document.createTextNode(element);\n    }\n    return element;\n  };\n\n  const renderCell = (node, rowIndex, colIndex, tr, td) => {\n    const column = columns[colIndex];\n    const tdClass =\n      column.getTdClass && column.getTdClass(node, controller, rowIndex);\n    tdClass && td.classList.add(tdClass);\n    const tdContents = column.renderCell(node, controller, rowIndex);\n    tdContents &&\n      tdContents\n        .filter(htmlNode => !!htmlNode)\n        .map(stringToTextNode)\n        .forEach(htmlNode => td.appendChild(htmlNode));\n  };\n\n  const attachController = theController => {\n    controller = theController;\n  };\n\n  const applyTrClasses = (tr, node, index) => {\n    const isExpanded = controller.getIsExpanded(node.id);\n    tr.className = \"\";\n    tr.classList.add(isExpanded ? \"expanded\" : \"collapsed\");\n    if (tr === selectedTr) {\n      tr.classList.add(\"selected\");\n    }\n    if (rows && rows.getTrClasses) {\n      const trClasses = rows.getTrClasses(node, index);\n      tr.classList.add(...trClasses);\n    }\n  };\n\n  const updateNode = (index, node) => {\n    const tr = tbody.rows[index];\n    applyTrClasses(tr, node, index);\n\n    for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n      const td = tr.cells[colIndex];\n      td.innerHTML = \"\";\n      renderCell(node, index, colIndex, tr, td);\n    }\n  };\n\n  const selectNode = (index, node) => {\n    if (selectedTr) {\n      selectedTr.classList.remove(\"selected\");\n    }\n    selectedTr = undefined;\n    if (typeof index === \"number\" && index >= 0) {\n      selectedTr = tbody.rows[index];\n      selectedTr.classList.add(\"selected\");\n      nodeSelectedCallbacks.invoke(node);\n      selectedTr.scrollIntoViewIfNeeded(); //TODO\n    }\n  };\n\n  const insertNodes = (index, nodes) => {\n    for (let i = 0; i < nodes.length; i++) {\n      const rowIndex = index + i;\n      const tr = tbody.insertRow(index + i);\n      tr.setAttribute(\"data-nid\", nodes[i].id);\n      applyTrClasses(tr, nodes[i], index + i);\n      tr.onclick = () => {\n        selectNode(tr.rowIndex - 1, nodes[i]);\n      };\n      for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n        const td = tr.insertCell(colIndex);\n        renderCell(nodes[i], rowIndex, colIndex, tr, td);\n      }\n      tr.insertCell(columns.length);\n    }\n  };\n\n  const removeNodes = (index, count) => {\n    if (\n      selectedTr &&\n      selectedTr.rowIndex - 1 >= index &&\n      selectedTr.rowIndex - 1 < index + count\n    ) {\n      selectedTr = undefined;\n      nodeSelectedCallbacks.invoke(undefined);\n    }\n    const deletedNodeIds = [];\n    for (let i = count - 1; i >= 0; i--) {\n      const tr = tbody.rows[index + i];\n      deletedNodeIds.push(getTrNodeId(tr));\n      tbody.deleteRow(index + i);\n    }\n    return deletedNodeIds;\n  };\n\n  const clearAll = () => {\n    const newTbody = document.createElement(\"tbody\");\n    table.replaceChild(newTbody, tbody);\n    tbody = newTbody;\n    selectNode();\n  };\n\n  const onNodeSelected = callback => {\n    nodeSelectedCallbacks.add(callback);\n  };\n\n  const onKeyPressed = callback => {\n    keyPressedCallbacks.add(callback);\n  };\n\n  return {\n    attachController,\n    updateNode,\n    insertNodes,\n    removeNodes,\n    selectNode,\n    clearAll,\n    onNodeSelected,\n    onKeyPressed\n  };\n\n  function handleTableKeyboardEvent(e) {\n    if (e.ctrlKey || e.shiftKey || e.altKey) {\n      return false;\n    }\n\n    if (!selectedTr) {\n      if (tbody.rows.length > 0) {\n        selectNode(0, getTrNode(tbody.rows[0]));\n      }\n      return true;\n    }\n\n    const selectedNodeId = getTrNodeId(selectedTr);\n\n    switch (e.key) {\n      case \"ArrowLeft\":\n        if (controller.getIsExpanded(selectedNodeId)) {\n          controller.collapse(selectedNodeId);\n          return true;\n        }\n        break;\n      case \"ArrowRight\":\n        if (!controller.getIsExpanded(selectedNodeId)) {\n          controller.expand(selectedNodeId);\n          return true;\n        }\n        break;\n    }\n\n    const trToGo = getTrToGo(e.key);\n    if (trToGo) {\n      selectNode(getTrIndex(trToGo), getTrNode(trToGo));\n      return true;\n    }\n\n    return false;\n  }\n\n  function getTrToGo(keyCode) {\n    switch (keyCode) {\n      case \"ArrowUp\":\n        if (getTrIndex(selectedTr) > 0) {\n          return tbody.rows[getTrIndex(selectedTr) - 1];\n        }\n        break;\n      case \"ArrowDown\":\n        if (getTrIndex(selectedTr) < tbody.rows.length - 1) {\n          return tbody.rows[getTrIndex(selectedTr) + 1];\n        }\n        break;\n      case \"ArrowLeft\":\n        return findParentTr(selectedTr);\n      case \"ArrowRight\":\n        return findExpandableChildTr(selectedTr);\n    }\n  }\n\n  function getTrIndex(tr) {\n    return tr.sectionRowIndex;\n  }\n\n  function getTrNodeId(tr) {\n    const nodeId = parseInt(tr.getAttribute(\"data-nid\"));\n    return !isNaN(nodeId) ? nodeId : undefined;\n  }\n\n  function getTrNode(tr) {\n    const nodeId = getTrNodeId(tr);\n    if (nodeId) {\n      return controller.getNodeById(nodeId);\n    }\n  }\n\n  function findParentTr(childTr) {\n    const childNode = getTrNode(childTr);\n    const parentNodeId = childNode.parent.id;\n    if (parentNodeId) {\n      for (let index = getTrIndex(childTr) - 1; index >= 0; index--) {\n        const tr = tbody.rows[index];\n        if (getTrNodeId(tr) === parentNodeId) {\n          return tr;\n        }\n      }\n    }\n  }\n\n  function findExpandableChildTr(parentTr) {\n    const parentNode = getTrNode(parentTr);\n    for (\n      let index = getTrIndex(parentTr) + 1;\n      index < tbody.rows.length;\n      index++\n    ) {\n      const childTr = tbody.rows[index];\n      const childNode = getTrNode(childTr);\n      if (childNode.parent !== parentNode) {\n        break;\n      }\n      if (childNode.firstChild) {\n        return childTr;\n      }\n    }\n  }\n}\n","import { createRealClock } from \"./codePath\";\n\nexport function createDebounce(consumer, interval, optionalClock) {\n  const clock = optionalClock || createRealClock();\n  let timeoutId = undefined;\n\n  return {\n    bounce() {\n      if (timeoutId) {\n        clock.clearTimeout(timeoutId);\n      }\n      timeoutId = clock.setTimeout(() => {\n        timeoutId = undefined;\n        consumer();\n      }, interval);\n    }\n  };\n}\n","export function createResizer(elements) {\n  const minWidthPx = 10;\n  const moveThresholdPx = 3;\n  const { gripElement, leftSideElement, rightSideElement } = elements;\n\n  let initial = undefined;\n  let last = undefined;\n  let saveBodyCursor = undefined;\n\n  gripElement.onmousedown = onMouseDown;\n\n  function takeSnapshot(e) {\n    return {\n      mouseX: e.pageX,\n      leftWidth: leftSideElement ? leftSideElement.clientWidth : undefined,\n      rightWidth: rightSideElement ? rightSideElement.clientWidth : undefined\n    };\n  }\n\n  function onMouseDown(e) {\n    initial = takeSnapshot(e);\n    last = Object.assign({}, initial);\n\n    window.addEventListener(\"mousemove\", onMouseMove, true);\n    window.addEventListener(\"mouseup\", onMouseUp, true);\n\n    saveBodyCursor = document.body.style.cursor;\n    document.body.style.cursor = \"ew-resize\";\n\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseMove(e) {\n    const current = takeSnapshot(e);\n\n    if (Math.abs(current.mouseX - last.mouseX) >= moveThresholdPx) {\n      last = current;\n      let deltaX = current.mouseX - initial.mouseX;\n\n      if (\n        initial.leftWidth &&\n        deltaX < 0 &&\n        initial.leftWidth + deltaX < minWidthPx\n      ) {\n        deltaX = -(initial.leftWidth - minWidthPx);\n      }\n      if (\n        initial.rightWidth &&\n        deltaX > 0 &&\n        initial.rightWidth - deltaX < minWidthPx\n      ) {\n        deltaX = initial.rightWidth - minWidthPx;\n      }\n\n      if (leftSideElement && leftSideElement.style.width.length > 0) {\n        leftSideElement.style.width = `${initial.leftWidth + deltaX}px`;\n      }\n      if (rightSideElement && rightSideElement.style.width.length > 0) {\n        rightSideElement.style.width = `${initial.rightWidth - deltaX}px`;\n      }\n    }\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseUp(e) {\n    document.body.style.cursor = saveBodyCursor;\n    window.removeEventListener(\"mousemove\", onMouseMove, true);\n    window.removeEventListener(\"mouseup\", onMouseUp, true);\n\n    initial = undefined;\n    last = undefined;\n\n    e.stopPropagation();\n    return false;\n  }\n}\n","let logSwitch = undefined;\n\nexport function createDebugLog(component, globalVars) {\n  ensureLogSwitchInitialized();\n\n  return {\n    log(...args) {\n      if (logSwitch.isEnabled) {\n        console.log(...args);\n      }\n    },\n    info(...args) {\n      if (logSwitch.isEnabled) {\n        console.info(...args);\n      }\n    },\n    warn(...args) {\n      if (logSwitch.isEnabled) {\n        console.warn(...args);\n      }\n    },\n    error(...args) {\n      if (logSwitch.isEnabled) {\n        console.error(...args);\n      }\n    }\n  };\n\n  function ensureLogSwitchInitialized() {\n    if (!logSwitch) {\n      logSwitch = {\n        component,\n        isEnabled: false,\n        setEnabled: createSetEnabled(component, globalVars)\n      };\n    }\n  }\n}\n\nexport function enableDebugLog(enable) {\n  if (logSwitch) {\n    logSwitch.setEnabled(enable);\n    console.log(\n      \"CODEPATH.DEBUG-LOG>\",\n      `log switch [${logSwitch.component}] was set to`,\n      enable\n    );\n  } else {\n    console.log(\"CODEPATH.DEBUG-LOG>\", \"log switch was not initialized\");\n  }\n}\n\nfunction createSetEnabled(component, globalVars) {\n  const createEnableLogMessage = enable => {\n    return {\n      type: \"codePath/devTools/enableDebugLog\",\n      enable: !!enable\n    };\n  };\n\n  const handleEnableLogMessage = message => {\n    if (\n      typeof message === \"object\" &&\n      message.type === \"codePath/devTools/enableDebugLog\" &&\n      typeof message.enable === \"boolean\"\n    ) {\n      enableDebugLog(message.enable, true);\n    }\n  };\n\n  switch (component) {\n    case \"page\":\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n        window.postMessage(createEnableLogMessage(enable), \"*\");\n      };\n    case \"content\":\n      window.addEventListener(\"message\", event => {\n        handleEnableLogMessage(event.data);\n      });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n        chrome.runtime.sendMessage(createEnableLogMessage(enable));\n      };\n    case \"background\":\n      chrome.runtime.onMessage.addListener(function(\n        request,\n        sender,\n        sendResponse\n      ) {\n        handleEnableLogMessage(request);\n      });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n    case \"devtool\":\n      globalVars &&\n        globalVars.backgroundConnection.onMessage.addListener(function(\n          message\n        ) {\n          handleEnableLogMessage(message);\n        });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n    default:\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n  }\n}\n","export { createCodePath, createRealClock } from \"./codePath\";\nexport {\n  createAsyncLocalProvider,\n  restoreOriginalPromise\n} from \"./asyncLocalProvider\";\nexport {\n  createDefaultScopeManager,\n  resetCurrentScope\n} from \"./codePathScopeManager\";\nexport { createCodePathStream } from \"./codePathStream\";\nexport {\n  createCodePathTracer,\n  contextToPlain,\n  plainToContext\n} from \"./codePathTracer\";\nexport {\n  createCodePathModel,\n  walkNodesDepthFirst,\n  walkImmediateSubNodes,\n  findNextMatchingNode,\n  findPrevMatchingNode\n} from \"./codePathModel\";\nexport { createCodePathSearchModel } from \"./codePathSearchModel\";\nexport { createCodePathFlatFilterModel } from \"./codePathFlatFilterModel\";\nexport { createTreeGridController, createTreeGridView } from \"./treeGrid\";\nexport { createMulticastDelegate } from \"./multicastDelegate\";\nexport { createDebounce } from \"./debounce\";\nexport { createResizer } from \"./resizer\";\nexport { LOG_LEVEL } from \"./logLevel\";\nexport { createDebugLog, enableDebugLog } from \"./debugLog\";\nexport { isTagSerializable, addTagMetaStringify } from \"./serializable\";\n"],"sourceRoot":""}