{"version":3,"sources":["webpack://CodePath/webpack/universalModuleDefinition","webpack://CodePath/webpack/bootstrap","webpack://CodePath/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/createClass.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/inherits.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/typeof.js","webpack://CodePath/./node_modules/opentracing/lib/binary_carrier.js","webpack://CodePath/./node_modules/opentracing/lib/constants.js","webpack://CodePath/./node_modules/opentracing/lib/ext/tags.js","webpack://CodePath/./node_modules/opentracing/lib/functions.js","webpack://CodePath/./node_modules/opentracing/lib/global_tracer.js","webpack://CodePath/./node_modules/opentracing/lib/index.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://CodePath/./node_modules/opentracing/lib/noop.js","webpack://CodePath/./node_modules/opentracing/lib/reference.js","webpack://CodePath/./node_modules/opentracing/lib/span.js","webpack://CodePath/./node_modules/opentracing/lib/span_context.js","webpack://CodePath/./node_modules/opentracing/lib/tracer.js","webpack://CodePath/./src/codePath.js","webpack://CodePath/./src/codePathModel.js","webpack://CodePath/./src/codePathScopeManager.js","webpack://CodePath/./src/codePathSearchModel.js","webpack://CodePath/./src/codePathStream.js","webpack://CodePath/./src/codePathTracer.js","webpack://CodePath/./src/debounce.js","webpack://CodePath/./src/index.js","webpack://CodePath/./src/logLevel.js","webpack://CodePath/./src/multicastDelegate.js","webpack://CodePath/./src/resizer.js","webpack://CodePath/./src/treeGrid.js"],"names":["createRealLowResolutionClock","now","Date","getTime","setInterval","func","delay","clearInterval","id","setTimeout","clearTimeout","noopTracerFactory","Tracer","defaultTracerFactory","stream","options","createCodePathTracer","clock","GlobalCodePath","configure","createCodePath","input","output","Object","assign","getOutputStream","Error","scopeManager","createDefaultScopeManager","tracerFactory","outputStream","createCodePathStream","undefined","spanEntries","getOrCreateActiveTracer","existingTracer","getActiveTracer","newTracer","setActiveTracer","getParentSpanContext","parentContext","existingSpan","getActiveSpan","context","logToActiveSpan","tags","log","tempSpan","activeTracer","startSpan","finish","parentReferenceType","tracer","parentReferenceContext","spanOptions","references","Reference","childSpan","setActiveSpan","childSpanId","toSpanId","span","thisCodePath","logDebug","$id","level","LOG_LEVEL","debug","logEvent","event","logWarning","warning","logError","error","logCritical","critical","spanRoot","spanChild","REFERENCE_CHILD_OF","spanFollower","REFERENCE_FOLLOWS_FROM","finishSpan","activeSpan","doesNotifyTracerOnFinish","notifySpanFinished","spanContext","spanId","traceId","toTraceId","entry","referencedContext","parentEntry","createCodePathModel","subscribers","createMulticastDelegate","traceNodeMap","rootNode","nextNodeId","initializeModel","createTraceNodeMap","createRootNode","getParentContext","token","childOf","followsFrom","findParentNode","parentNode","getSpanNode","console","warn","insertNode","parent","newNode","createRegularNode","appendChildNodeToParent","setSpanNode","getRootNode","getNodesFlat","getNodesAsFlatArray","getTopLevelNodes","getTopLevelNodesAsArray","walkNodesDepthFirst","callback","publish","entries","insertedNodes","filter","map","invoke","subscribe","add","unsubscribe","remove","clearAll","depth","firstChild","lastChild","prevSibling","nextSibling","newChild","flatNodes","node","push","topLevelNodes","walkImmediateSubNodes","mapByTraceId","getOrAddTraceSpanNodeMap","existingMap","newMap","createSpanNodeMap","spanNodeMap","nodeBySpanId","currentScopeManager","createInternalScopeManager","trace","promiseOrFunc","callerScopeManager","clone","originalPromise","saveScopeManager","wrapperPromise","Promise","resolve","reject","then","value","$async","err","resetCurrentScope","source","thisScopeManager","createCodePathSearchModel","sourceModel","predicate","resultNodeById","newlyCreatedResultNodes","resultRootNode","initializeFromSourceModel","performSearch","sourceModelSubscriber","getFirstMatchedNode","firstMatchedNode","matched","getNextMatchedNode","matchedNode","currentNode","finishedSubTree","unsubscribeFromSource","sourceRootNode","depthFirstSearchSubTree","getResultParentNode","createThisResultNode","createResultNode","isRootNode","thisNodeMatched","thisResultNode","subNode","sourceNode","resultParentNode","resultNode","getOrCreateResultParentNode","sourceChildNode","existingParent","matchingNodes","forEach","getParentNode","length","isEnabled","enabled","writeStartTracer","time","writeStartSpan","messageId","writeEndSpan","writeLog","writeSpanTags","enable","effectiveValue","peekEntries","takeEntries","copyOfEntries","normalizeTags","visitedObjects","Set","meta","$meta","stringify","tag","safeStringify","obj","json","JSON","replaceCircularReferences","substr","key","has","CodePathTracer","_traceId","_nextSpanId","_clock","_scopeManager","_stream","name","CodePathSpan","format","carrier","CodePathSpanContext","getTraceId","_tracer","_selfContext","startTime","findReferences","contextToPlain","keyValuePairs","timestamp","finishTime","effectiveFinishTime","Span","_spanId","SpanContext","ref","type","plainToContext","createDebounce","consumer","interval","optionalClock","timeoutId","bounce","eventName","delegate","subscriber","s","args","e","createResizer","elements","minWidthPx","moveThresholdPx","gripElement","leftSideElement","rightSideElement","initial","last","saveBodyCursor","onmousedown","onMouseDown","takeSnapshot","mouseX","pageX","leftWidth","clientWidth","rightWidth","window","addEventListener","onMouseMove","onMouseUp","document","body","style","cursor","stopPropagation","current","Math","abs","deltaX","width","removeEventListener","createTreeGridController","view","model","rowById","masterIndexVersion","controller","getNodeById","row","getNode","toggle","expand","collapse","selectNode","expandToNode","nodeRow","nodeRowIndex","findAbsoluteIndex","getIsExpanded","getIsVisible","replaceModel","newModel","initWithCurrentModel","onNodeSelected","attachController","initRootNode","createSubNodesRowControllers","subNodes","createRowController","isExpanded","subTreeHeight","cachedAbsoluteIndex","cachedIndexVersion","getParent","getPrevSibling","getNextSibling","getFirstChild","getSubTreeHeight","updateSubTreeHeight","delta","getIndexVersion","isCachedAbsoluteIndexValid","indexRelativeToParent","sibling","parentAbsoluteIndex","showSubNodes","thisRowIndex","insertNodes","updateNode","hideSubNodes","removeNodes","createRootNodeController","noop","currentGroup","i","parentId","parentRow","beginNewGroup","endCurrentGroup","index","startIndex","nodesInGroup","slice","createTreeGridView","table","columns","nodeSelectedCallbacks","keyPressedCallbacks","onkeydown","handleTableKeyboardEvent","tbody","createElement","appendChild","selectedTr","stringToTextNode","element","createTextNode","renderCell","rowIndex","colIndex","tr","td","tdContents","htmlNode","theController","rows","cells","innerHTML","classList","scrollIntoViewIfNeeded","nodes","insertRow","setAttribute","onclick","insertCell","count","deleteRow","newTbody","replaceChild","onKeyPressed","ctrlKey","shiftKey","altKey","getTrNode","selectedNodeId","getTrNodeId","trToGo","getTrToGo","getTrIndex","keyCode","findParentTr","findExpandableChildTr","sectionRowIndex","nodeId","parseInt","getAttribute","isNaN","childTr","childNode","parentNodeId","parentTr"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;;;;;;ACjBA,cAAc,mBAAO,CAAC,0EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,+FAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACTA,wBAAwB,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,sBAAsB;;AAEnW;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAcgC;;;;;;;;;;;;AC3Ga;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,kBAAkB,mBAAO,CAAC,gEAAa;AACvC,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACnCa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACvEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0EAAkB;AACjD;AACA,WAAW,mBAAO,CAAC,8DAAY;AAC/B;AACA,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,kBAAkB,mBAAO,CAAC,gEAAa;AACvC;AACA,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C;AACA,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA,oBAAoB,mBAAO,CAAC,0EAAe;AAC3C;AACA,SAAS,mBAAO,CAAC,wEAAiB;AAClC,SAAS,mBAAO,CAAC,gEAAa;AAC9B,SAAS,mBAAO,CAAC,gEAAa;AAC9B;AACA;AACA,iC;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,qC;;;;;;;;;;;;ACtGa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC9Ea;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gC;;;;;;;;;;;;AC9Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,gBAAgB,KAAK;AACrB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;;83BClJA;;AAOA;AACA;AACA;AACA;;AAEO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AAChD,SAAO;AACLC,OADK,iBACC;AACJ,aAAO,IAAIC,IAAJ,GAAWC,OAAX,EAAP;AACD,KAHI;AAILC,eAJK,0MAIOC,IAJP,EAIaC,KAJb,EAIoB;AACvB,aAAOF,WAAW,CAACC,IAAD,EAAOC,KAAP,CAAlB;AACD,KANI;AAOLC,iBAPK,kNAOSC,EAPT,EAOa;AAChBD,mBAAa,CAACC,EAAD,CAAb;AACD,KATI;AAU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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CodePath\"] = factory();\n\telse\n\t\troot[\"CodePath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    // The SpanContext is entirely implementation dependent\n    /**\n     * Returns a string representation of the implementation internal trace ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toTraceId = function () {\n        return '';\n    };\n    /**\n     * Returns a string representation of the implementation internal span ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toSpanId = function () {\n        return '';\n    };\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","import {\n  Tracer,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nimport { createCodePathTracer } from \"./codePathTracer\";\nimport { createCodePathStream } from \"./codePathStream\";\nimport { createDefaultScopeManager } from \"./codePathScopeManager\";\nimport { LOG_LEVEL } from \"./logLevel\";\n\nexport const createRealLowResolutionClock = () => {\n  return {\n    now() {\n      return new Date().getTime();\n    },\n    setInterval(func, delay) {\n      return setInterval(func, delay);\n    },\n    clearInterval(id) {\n      clearInterval(id);\n    },\n    setTimeout(func, delay) {\n      return setTimeout(func, delay);\n    },\n    clearTimeout(id) {\n      clearTimeout(id);\n    }\n  };\n};\n\n// export const createDefaultScopeManager = () => {\n//   let activeTracer = undefined;\n//   let activeSpan = undefined;\n//   return {\n//     getActiveTracer() {\n//       return activeTracer;\n//     },\n//     getActiveSpan() {\n//       return activeSpan;\n//     },\n//     setActiveTracer(tracer) {\n//       activeTracer = tracer;\n//     },\n//     setActiveSpan(span) {\n//       activeSpan = span;\n//     }\n//   };\n// };\n\nexport const noopTracerFactory = () => new Tracer();\n\nexport const defaultTracerFactory = (stream, options) =>\n  createCodePathTracer(`webuser${options.clock.now()}`, stream, options);\n\nexport const GlobalCodePath = {\n  configure(options) {\n    const { input, output } = createCodePath(options);\n    Object.assign(GlobalCodePath, {\n      ...input,\n      getOutputStream() {\n        return output;\n      }\n    });\n  },\n  getOutputStream() {\n    throw new Error(\"GlobalCodePath was not configured\");\n  }\n};\n\nexport function createCodePath(options) {\n  const clock = (options && options.clock) || createRealLowResolutionClock();\n  const scopeManager =\n    (options && options.scopeManager) || createDefaultScopeManager();\n  const tracerFactory =\n    (options && options.tracerFactory) || defaultTracerFactory;\n  const outputStream =\n    (options && options.outputStream) ||\n    createCodePathStream(options ? options.stream : undefined);\n  const spanEntries = {};\n\n  const getOrCreateActiveTracer = () => {\n    const existingTracer = scopeManager.getActiveTracer();\n    if (existingTracer) {\n      return existingTracer;\n    }\n\n    const newTracer = tracerFactory({ clock, scopeManager, tracerFactory });\n    scopeManager.setActiveTracer(newTracer);\n    return newTracer;\n  };\n\n  const getParentSpanContext = parentContext => {\n    if (parentContext) {\n      return parentContext;\n    }\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      return existingSpan.context();\n    }\n  };\n\n  const logToActiveSpan = tags => {\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      existingSpan.log(tags);\n    } else {\n      const tempSpan = activeTracer.startSpan(\"unknown-root\");\n      tempSpan.log(tags);\n      tempSpan.finish();\n    }\n  };\n\n  const startSpan = (id, tags, parentContext, parentReferenceType) => {\n    const tracer = getOrCreateActiveTracer();\n    const parentReferenceContext = getParentSpanContext(parentContext);\n    const spanOptions = {\n      references: parentReferenceContext && [\n        new Reference(parentReferenceType, parentReferenceContext)\n      ],\n      tags\n    };\n    const childSpan = tracer.startSpan(id, spanOptions);\n    scopeManager.setActiveSpan(childSpan);\n    const childSpanId = childSpan.context().toSpanId();\n    spanEntries[childSpanId] = {\n      span: childSpan,\n      options: spanOptions\n    };\n    return childSpan;\n  };\n\n  scopeManager.setActiveTracer(\n    tracerFactory(outputStream, {\n      clock,\n      scopeManager,\n      tracerFactory\n    })\n  );\n\n  const thisCodePath = {\n    logDebug(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.debug, ...tags });\n    },\n    logEvent(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.event, ...tags });\n    },\n    logWarning(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.warning, ...tags });\n    },\n    logError(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.error, ...tags });\n    },\n    logCritical(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.critical, ...tags });\n    },\n    spanRoot(id, tags) {\n      scopeManager.setActiveSpan(undefined);\n      return startSpan(id, tags);\n    },\n    spanChild(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_CHILD_OF);\n    },\n    spanFollower(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_FOLLOWS_FROM);\n    },\n    finishSpan(tags) {\n      const activeSpan = scopeManager.getActiveSpan();\n      if (!activeSpan) {\n        throw new Error(\"Current scope has no active span\");\n      }\n      activeSpan.finish();\n      if (!activeSpan.doesNotifyTracerOnFinish) {\n        thisCodePath.notifySpanFinished(activeSpan);\n      }\n    },\n    notifySpanFinished(span) {\n      const spanContext = span.context();\n      const spanId = spanContext.toSpanId();\n      const traceId = spanContext.toTraceId();\n      const entry = spanEntries[spanId];\n      if (!entry) {\n        throw new Error(`Trace span not found: id [${spanId}]`);\n      }\n      const parentContext =\n        entry.options.references &&\n        entry.options.references[0].referencedContext();\n      if (parentContext && parentContext.toTraceId() === traceId) {\n        const parentEntry = spanEntries[parentContext.toSpanId()];\n        if (parentEntry) {\n          scopeManager.setActiveSpan(parentEntry.span);\n        }\n      } else {\n        scopeManager.setActiveSpan(undefined);\n      }\n      delete spanEntries[spanId];\n    }\n  };\n\n  return {\n    input: thisCodePath,\n    output: outputStream\n  };\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathModel() {\n  const subscribers = createMulticastDelegate(\"CodePathModel.EntriesPublished\");\n\n  let traceNodeMap = undefined;\n  let rootNode = undefined;\n  let nextNodeId = 1;\n\n  const initializeModel = () => {\n    traceNodeMap = createTraceNodeMap();\n    rootNode = createRootNode();\n  };\n\n  const getParentContext = entry => {\n    if (entry.token === \"StartSpan\") {\n      return entry.childOf || entry.followsFrom;\n    } else {\n      return entry;\n    }\n  };\n\n  const findParentNode = entry => {\n    const parentContext = getParentContext(entry);\n    if (parentContext) {\n      const parentNode = traceNodeMap.getSpanNode(\n        parentContext.traceId,\n        parentContext.spanId\n      );\n      if (parentNode) {\n        return parentNode;\n      }\n      console.warn(\"CODEPATH.MODEL>\", \"Span node not found\", parentContext);\n    }\n    return rootNode;\n  };\n\n  const insertNode = entry => {\n    const { traceId, spanId } = entry;\n    const parent = findParentNode(entry);\n    const newNode = createRegularNode(nextNodeId++, parent, entry);\n\n    appendChildNodeToParent(newNode, parent);\n    if (entry.token === \"StartSpan\") {\n      traceNodeMap.setSpanNode(traceId, spanId, newNode);\n    }\n\n    return newNode;\n  };\n\n  initializeModel();\n\n  return {\n    getRootNode() {\n      return rootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(rootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(rootNode);\n    },\n    walkNodesDepthFirst(callback) {\n      walkNodesDepthFirst(rootNode, callback);\n    },\n    publish(entries) {\n      const insertedNodes = entries\n        .filter(\n          entry => entry.token !== \"EndSpan\" && entry.token !== \"StartTracer\"\n        )\n        .map(insertNode);\n\n      subscribers.invoke(insertedNodes);\n    },\n    subscribe(callback) {\n      subscribers.add(callback);\n    },\n    unsubscribe(callback) {\n      subscribers.remove(callback);\n    },\n    // deleteRow(id) {\n    // },\n    clearAll() {\n      initializeModel();\n    }\n  };\n}\n\nexport function createRootNode() {\n  return {\n    id: 0,\n    entry: undefined,\n    parent: undefined,\n    depth: -1,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined\n  };\n}\n\nexport function createRegularNode(id, parent, entry) {\n  return {\n    id,\n    entry,\n    parent,\n    depth: parent.depth + 1,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined\n  };\n}\n\nexport function appendChildNodeToParent(newChild, parent) {\n  if (parent.lastChild) {\n    newChild.prevSibling = parent.lastChild;\n    parent.lastChild.nextSibling = newChild;\n  } else {\n    parent.firstChild = newChild;\n  }\n  parent.lastChild = newChild;\n}\n\nexport function getNodesAsFlatArray(rootNode) {\n  if (!rootNode) {\n    return [];\n  }\n  const flatNodes = [];\n  walkNodesDepthFirst(rootNode, node => flatNodes.push(node));\n  return flatNodes;\n}\n\nexport function getTopLevelNodesAsArray(rootNode) {\n  const topLevelNodes = [];\n  walkImmediateSubNodes(rootNode, node => {\n    topLevelNodes.push(node);\n  });\n  return topLevelNodes;\n}\n\nexport function walkNodesDepthFirst(rootNode, callback) {\n  return walkImmediateSubNodes(rootNode, node => {\n    if (callback(node) === false) {\n      return false;\n    }\n    if (node.firstChild) {\n      if (walkNodesDepthFirst(node, callback) === false) {\n        return false;\n      }\n    }\n  });\n}\n\nexport function walkImmediateSubNodes(parentNode, callback) {\n  if (parentNode) {\n    for (let node = parentNode.firstChild; !!node; node = node.nextSibling) {\n      if (callback(node) === false) {\n        return false;\n      }\n    }\n  }\n}\n\nfunction createTraceNodeMap() {\n  let mapByTraceId = {};\n\n  const getOrAddTraceSpanNodeMap = traceId => {\n    const existingMap = mapByTraceId[traceId];\n    if (existingMap) {\n      return existingMap;\n    }\n\n    const newMap = createSpanNodeMap();\n    mapByTraceId[traceId] = newMap;\n    return newMap;\n  };\n\n  return {\n    getSpanNode(traceId, spanId) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.getSpanNode(spanId);\n    },\n    setSpanNode(traceId, spanId, node) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.setSpanNode(spanId, node);\n    }\n  };\n}\n\nfunction createSpanNodeMap() {\n  let nodeBySpanId = {};\n\n  return {\n    getSpanNode(spanId) {\n      return nodeBySpanId[spanId];\n    },\n    setSpanNode(spanId, node) {\n      nodeBySpanId[spanId] = node;\n    }\n  };\n}\n","import { LOG_LEVEL } from \"./logLevel\";\n\nlet currentScopeManager = createInternalScopeManager();\n\nexport function trace(promiseOrFunc) {\n  const logToActiveSpan = tags => {\n    const activeSpan = currentScopeManager.getActiveSpan();\n    if (activeSpan) {\n      activeSpan.log(tags);\n    }\n  };\n\n  const callerScopeManager = currentScopeManager.clone();\n\n  const originalPromise =\n    typeof promiseOrFunc === \"function\" ? promiseOrFunc() : promiseOrFunc;\n\n  const saveScopeManager = currentScopeManager;\n\n  const wrapperPromise = new Promise((resolve, reject) => {\n    originalPromise\n      .then(value => {\n        currentScopeManager = saveScopeManager;\n        logToActiveSpan({\n          $id: \"async-then\",\n          $async: \"then\",\n          level: LOG_LEVEL.debug,\n          value\n        });\n        resolve(value);\n      })\n      .catch(err => {\n        currentScopeManager = saveScopeManager;\n        logToActiveSpan({\n          $id: \"async-catch\",\n          $async: \"catch\",\n          level: LOG_LEVEL.error,\n          error: err\n        });\n        reject(err);\n      });\n  });\n\n  currentScopeManager = callerScopeManager;\n  return wrapperPromise;\n}\n\nexport function createDefaultScopeManager() {\n  return {\n    getActiveTracer() {\n      return currentScopeManager.getActiveTracer();\n    },\n    getActiveSpan() {\n      return currentScopeManager.getActiveSpan();\n    },\n    setActiveTracer(tracer) {\n      currentScopeManager.setActiveTracer(tracer);\n    },\n    setActiveSpan(span) {\n      currentScopeManager.setActiveSpan(span);\n    }\n  };\n}\n\nexport function resetCurrentScope() {\n  currentScopeManager = createInternalScopeManager();\n}\n\nfunction createInternalScopeManager(source) {\n  let activeTracer = source ? source.getActiveTracer() : undefined;\n  let activeSpan = source ? source.getActiveSpan() : undefined;\n  const thisScopeManager = {\n    getActiveTracer() {\n      return activeTracer;\n    },\n    getActiveSpan() {\n      return activeSpan;\n    },\n    setActiveTracer(tracer) {\n      activeTracer = tracer;\n    },\n    setActiveSpan(span) {\n      activeSpan = span;\n    },\n    clone() {\n      return createInternalScopeManager(thisScopeManager);\n    }\n  };\n  return thisScopeManager;\n}\n","import {\n  createRootNode,\n  createRegularNode,\n  appendChildNodeToParent,\n  getNodesAsFlatArray,\n  getTopLevelNodesAsArray,\n  walkNodesDepthFirst\n} from \"./codePathModel\";\n\nimport { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathSearchModel(sourceModel, predicate) {\n  const subscribers = createMulticastDelegate(\n    \"CodePathSearchModel.EntriesPublished\"\n  );\n\n  let resultNodeById = {};\n  let newlyCreatedResultNodes = undefined;\n  let resultRootNode = undefined;\n\n  const initializeFromSourceModel = () => {\n    resultNodeById = {};\n    newlyCreatedResultNodes = undefined;\n    resultRootNode = performSearch();\n  };\n\n  sourceModel.subscribe(sourceModelSubscriber);\n  initializeFromSourceModel();\n\n  return {\n    getRootNode() {\n      return resultRootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(resultRootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(resultRootNode);\n    },\n    getFirstMatchedNode() {\n      let firstMatchedNode = undefined;\n      walkNodesDepthFirst(resultRootNode, node => {\n        if (node.matched) {\n          firstMatchedNode = node;\n          return false;\n        }\n      });\n      return firstMatchedNode;\n    },\n    getNextMatchedNode(matchedNode) {\n      let currentNode = matchedNode;\n      let finishedSubTree = false;\n\n      while (currentNode) {\n        if (!finishedSubTree && currentNode.firstChild) {\n          currentNode = currentNode.firstChild;\n        } else {\n          finishedSubTree = false;\n          if (currentNode.nextSibling) {\n            currentNode = currentNode.nextSibling;\n          } else {\n            finishedSubTree = true;\n            currentNode = currentNode.parent;\n          }\n        }\n\n        if (!finishedSubTree && currentNode.matched) {\n          return currentNode;\n        }\n      }\n    },\n    subscribe(callback) {\n      subscribers.add(callback);\n    },\n    unsubscribe(callback) {\n      subscribers.remove(callback);\n    },\n    unsubscribeFromSource() {\n      sourceModel.unsubscribe(sourceModelSubscriber);\n    },\n    clearAll() {\n      sourceModel.clearAll();\n      initializeFromSourceModel();\n    }\n  };\n\n  function performSearch() {\n    const sourceRootNode = sourceModel.getRootNode();\n    const resultRootNode = createRootNode();\n    resultNodeById[resultRootNode.id] = resultRootNode;\n\n    depthFirstSearchSubTree(sourceRootNode, () => resultRootNode);\n\n    return resultRootNode;\n  }\n\n  function depthFirstSearchSubTree(node, getResultParentNode) {\n    const createThisResultNode = matched => {\n      return createResultNode(node, matched, getResultParentNode);\n    };\n\n    const isRootNode = !node.parent;\n    const thisNodeMatched = !isRootNode && predicate(node);\n    let thisResultNode = thisNodeMatched\n      ? createThisResultNode(true)\n      : undefined;\n\n    for (\n      let subNode = node.firstChild;\n      !!subNode;\n      subNode = subNode.nextSibling\n    ) {\n      depthFirstSearchSubTree(subNode, () => {\n        if (!thisResultNode) {\n          thisResultNode = isRootNode\n            ? getResultParentNode()\n            : createThisResultNode(false);\n        }\n        return thisResultNode;\n      });\n    }\n  }\n\n  function createResultNode(sourceNode, matched, getResultParentNode) {\n    const resultParentNode = getResultParentNode();\n    let resultNode = createRegularNode(\n      sourceNode.id,\n      resultParentNode,\n      sourceNode.entry\n    );\n    resultNodeById[resultNode.id] = resultNode;\n    if (newlyCreatedResultNodes) {\n      newlyCreatedResultNodes.push(resultNode);\n    }\n    appendChildNodeToParent(resultNode, resultParentNode);\n    resultNode.matched = matched;\n    return resultNode;\n  }\n\n  function getOrCreateResultParentNode(sourceChildNode) {\n    if (!sourceChildNode.parent) {\n      return;\n    }\n    const existingParent = resultNodeById[sourceChildNode.parent.id];\n    if (existingParent) {\n      return existingParent;\n    }\n    return createResultNode(sourceChildNode.parent, false, () =>\n      getOrCreateResultParentNode(sourceChildNode.parent)\n    );\n  }\n\n  function sourceModelSubscriber(insertedNodes) {\n    newlyCreatedResultNodes = [];\n    const matchingNodes = insertedNodes.filter(predicate);\n\n    matchingNodes.forEach(sourceNode => {\n      const getParentNode = () => {\n        return getOrCreateResultParentNode(sourceNode);\n      };\n      createResultNode(sourceNode, true, getParentNode);\n    });\n\n    if (newlyCreatedResultNodes.length > 0) {\n      subscribers.invoke(newlyCreatedResultNodes);\n    }\n    newlyCreatedResultNodes = undefined;\n  }\n}\n","import { REFERENCE_FOLLOWS_FROM, REFERENCE_CHILD_OF } from \"opentracing\";\n\nexport function createCodePathStream(options) {\n  let entries = [];\n  let isEnabled = options ? !!options.enabled : true;\n\n  return {\n    writeStartTracer(time, traceId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"StartTracer\",\n        traceId,\n        tags: tags || {}\n      });\n    },\n    writeStartSpan(time, traceId, spanId, messageId, references, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      const { childOf, followsFrom } = references;\n      entries.push({\n        time,\n        token: \"StartSpan\",\n        traceId,\n        spanId,\n        childOf,\n        followsFrom,\n        messageId,\n        tags: tags || {}\n      });\n    },\n    writeEndSpan(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"EndSpan\",\n        traceId,\n        spanId,\n        tags: tags || {}\n      });\n    },\n    writeLog(time, traceId, spanId, messageId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"Log\",\n        traceId,\n        spanId,\n        messageId,\n        tags: tags || {}\n      });\n    },\n    writeSpanTags(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"SpanTags\",\n        traceId,\n        spanId,\n        tags: tags || {}\n      });\n    },\n    enable(value) {\n      const effectiveValue = typeof value === \"undefined\" ? true : !!value;\n      isEnabled = effectiveValue;\n    },\n    peekEntries() {\n      return entries;\n    },\n    takeEntries() {\n      const copyOfEntries = entries;\n      entries = [];\n      copyOfEntries.forEach(normalizeTags);\n      return copyOfEntries;\n    }\n  };\n\n  function normalizeTags(entry) {\n    let visitedObjects = new Set();\n\n    if (entry.tags) {\n      const meta = entry.tags.$meta;\n      if (meta && meta.stringify) {\n        for (let tag of meta.stringify) {\n          entry.tags[tag] = safeStringify(entry.tags[tag]);\n        }\n      }\n    }\n\n    function safeStringify(obj) {\n      const json = JSON.stringify(\n        obj,\n        replaceCircularReferences\n      );\n      if (json && json.length > 1024) {\n        return json.substr(0, 1024) + '...[trunc]';\n      }\n      return json;\n    }\n\n    function replaceCircularReferences(key, value) {\n      if (typeof value === \"object\" && value !== null) {\n        if (visitedObjects.has(value)) {\n          return \"[circ]\";\n        }\n        visitedObjects.add(value);\n      }\n      return value;\n    }\n  }\n}\n","import {\n  Tracer,\n  Span,\n  SpanContext,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nexport function createCodePathTracer(traceId, stream, options) {\n  return new CodePathTracer(traceId, stream, options);\n}\n\nclass CodePathTracer extends Tracer {\n  _traceId;\n  _clock;\n  _scopeManager;\n  _stream;\n  _nextSpanId;\n\n  constructor(traceId, stream, options) {\n    super();\n    this._traceId = traceId;\n    this._nextSpanId = 1;\n    this._clock = options.clock;\n    this._scopeManager = options.scopeManager;\n    this._stream = stream;\n\n    stream.writeStartTracer(options.clock.now(), traceId);\n  }\n\n  // NOTE: the input to this method is *always* an associative array. The\n  // public-facing startSpan() method normalizes the arguments so that\n  // all N implementations do not need to worry about variations in the call\n  // signature.\n  //\n  // The default behavior returns a no-op span.\n  // protected _startSpan(name: string, fields: SpanOptions): Span {\n  //   return Noop.span!;\n  // }\n  _startSpan(name, options) {\n    return new CodePathSpan(\n      this,\n      this._clock,\n      this._stream,\n      this._nextSpanId++,\n      name,\n      options\n    );\n  }\n\n  // The default behavior is a no-op.\n  // protected _inject(spanContext: SpanContext, format: string, carrier: any): void {\n  // }\n  _inject(spanContext, format, carrier) {}\n\n  // The default behavior is to return a no-op SpanContext.\n  // protected _extract(format: string, carrier: any): SpanContext | null {\n  //   return Noop.spanContext!;\n  // }\n  _extract(format, carrier) {\n    return new CodePathSpanContext(\"\", \"\");\n  }\n\n  getTraceId() {\n    return this._traceId;\n  }\n\n  getCurrentTime() {\n    return this._clock.now();\n  }\n}\n\nclass CodePathSpan extends Span {\n  _tracer;\n  _clock;\n  _stream;\n  _selfContext;\n  // _childOfContext;\n  // _followsFromContext;\n  // _operationName;\n  // _startTime;\n  // _endTime;\n  // _baggageItems;\n  // _tags;\n  // _logs;\n\n  constructor(tracer, clock, stream, spanId, name, options) {\n    super();\n\n    const traceId = tracer.getTraceId();\n\n    this._tracer = tracer;\n    this._clock = clock;\n    this._stream = stream;\n    this._selfContext = new CodePathSpanContext(traceId, spanId);\n\n    const startTime = (options && options.startTime) || clock.now();\n    const { childOf, followsFrom } = findReferences(options);\n\n    stream.writeStartSpan(\n      startTime,\n      traceId,\n      spanId,\n      name,\n      {\n        childOf: contextToPlain(childOf),\n        followsFrom: contextToPlain(followsFrom)\n      },\n      options.tags\n    );\n\n    // this._operationName = name;\n    // this._startTime = (options && options.startTime) || tracer.getCurrentTime();\n    // this._endTime = undefined;\n    // this._baggageItems = {};\n    // this._tags = (options && options.tags) || {};\n    // this._logs = [];\n  }\n\n  // getData() {\n  //   return {\n  //     context: contextToPlain(this._selfContext),\n  //     childOf: contextToPlain(this._childOfContext),\n  //     followsFrom: contextToPlain(this._followsFromContext),\n  //     operationName: this._operationName,\n  //     startTime: this._startTime,\n  //     endTime: this._endTime,\n  //     baggageItems: this._baggageItems,\n  //     tags: this._tags,\n  //     logs: this._logs\n  //   };\n  // }\n\n  // By default returns a no-op SpanContext.\n  // protected _context(): SpanContext {\n  //     return noop.spanContext!;\n  // }\n  _context() {\n    return this._selfContext;\n  }\n\n  // By default returns a no-op tracer.\n  //\n  // The base class could store the tracer that created it, but it does not\n  // in order to ensure the no-op span implementation has zero members,\n  // which allows V8 to aggressively optimize calls to such objects.\n  // protected _tracer(): Tracer {\n  //     return noop.tracer!;\n  // }\n  _tracer() {\n    return this._tracer;\n  }\n\n  // By default does nothing\n  // protected _setOperationName(name: string): void {\n  // }\n  _setOperationName(name) {\n    throw new Error(\"Not supported: setOperationName\");\n    //this._operationName = name;\n  }\n\n  // By default does nothing\n  // protected _setBaggageItem(key: string, value: string): void {\n  // }\n  _setBaggageItem(key, value) {\n    throw new Error(\"Not supported: setBaggageItem\");\n    //this._baggageItems[key] = value;\n  }\n\n  // By default does nothing\n  // protected _getBaggageItem(key: string): string | undefined {\n  //     return undefined;\n  // }\n  _getBaggageItem(key) {\n    return undefined;\n    //return this._baggageItems[key];\n  }\n\n  // By default does nothing\n  //\n  // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n  // will always be an associative array.\n  // protected _addTags(keyValuePairs: { [key: string]: any }): void {\n  // }\n  _addTags(keyValuePairs) {\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeSpanTags(\n      this._clock.now(),\n      traceId,\n      spanId,\n      keyValuePairs\n    );\n    // this._tags = {\n    //   ...this._tags,\n    //   ...keyValuePairs\n    // };\n  }\n\n  // By default does nothing\n  // protected _log(keyValuePairs: { [key: string]: any }, timestamp?: number): void {\n  // }\n  _log(keyValuePairs, timestamp) {\n    const time = timestamp || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeLog(\n      time,\n      traceId,\n      spanId,\n      keyValuePairs.$id,\n      keyValuePairs\n    );\n    // const logEntry = {\n    //   ...(keyValuePairs || {}),\n    //   $time: timestamp || this._tracer.getCurrentTime()\n    // };\n    // this._logs.push(logEntry);\n  }\n\n  // By default does nothing\n  //\n  // finishTime is expected to be either a number or undefined.\n  // protected _finish(finishTime?: number): void {\n  // }\n  _finish(finishTime) {\n    const effectiveFinishTime = finishTime || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeEndSpan(effectiveFinishTime, traceId, spanId);\n\n    // if (this._endTime) {\n    //   throw new Error(\"Invalid operation: span already finished\");\n    // }\n    // this._endTime = finishTime || this._tracer.getCurrentTime();\n  }\n}\n\nclass CodePathSpanContext extends SpanContext {\n  _traceId;\n  _spanId;\n\n  constructor(traceId, spanId) {\n    super();\n    this._traceId = traceId;\n    this._spanId = spanId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal trace ID.\n   *\n   * @returns {string}\n   */\n  toTraceId() {\n    return this._traceId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal span ID.\n   *\n   * @returns {string}\n   */\n  toSpanId() {\n    return this._spanId;\n  }\n}\n\nfunction findReferences(options) {\n  let childOf = undefined;\n  let followsFrom = undefined;\n\n  options &&\n    options.references &&\n    options.references.forEach(ref => {\n      switch (ref.type()) {\n        case REFERENCE_CHILD_OF:\n          childOf = ref.referencedContext();\n          break;\n        case REFERENCE_FOLLOWS_FROM:\n          followsFrom = ref.referencedContext();\n          break;\n      }\n    });\n\n  return {\n    childOf,\n    followsFrom\n  };\n}\n\nexport function contextToPlain(context) {\n  if (context) {\n    return {\n      traceId: context.toTraceId(),\n      spanId: context.toSpanId()\n    };\n  }\n}\n\nexport function plainToContext({ traceId, spanId }) {\n  return new CodePathSpanContext(traceId, spanId);\n}\n","import { createRealLowResolutionClock } from \"./codePath\";\n\nexport function createDebounce(consumer, interval, optionalClock) {\n  const clock = optionalClock || createRealLowResolutionClock();\n  let timeoutId = undefined;\n\n  return {\n    bounce() {\n      if (timeoutId) {\n        clock.clearTimeout(timeoutId);\n      }\n      timeoutId = clock.setTimeout(() => {\n        timeoutId = undefined;\n        consumer();\n      }, interval);\n    }\n  };\n}\n","export { createCodePath, createRealLowResolutionClock } from \"./codePath\";\nexport {\n  createDefaultScopeManager,\n  trace,\n  resetCurrentScope\n} from \"./codePathScopeManager\";\nexport { createCodePathStream } from \"./codePathStream\";\nexport {\n  createCodePathTracer,\n  contextToPlain,\n  plainToContext\n} from \"./codePathTracer\";\nexport {\n  createCodePathModel,\n  walkNodesDepthFirst,\n  walkImmediateSubNodes\n} from \"./codePathModel\";\nexport { createCodePathSearchModel } from \"./codePathSearchModel\";\nexport { createTreeGridController, createTreeGridView } from \"./treeGrid\";\nexport { createMulticastDelegate } from \"./multicastDelegate\";\nexport { createDebounce } from \"./debounce\";\nexport { createResizer } from \"./resizer\";\n","export const LOG_LEVEL = {\n  debug: 0,\n  event: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n","export function createMulticastDelegate(eventName) {\n  let subscribers = [];\n\n  const delegate = {\n    add(subscriber) {\n      delegate.remove(subscriber);\n      subscribers.push(subscriber);\n    },\n    remove(subscriber) {\n      subscribers = subscribers.filter(s => s !== subscriber);\n    },\n    invoke(...args) {\n      subscribers.forEach(subscriber => {\n        try {\n          subscriber(...args);\n        } catch (e) {\n          console.log(`Event [${eventName}] invocation failed!`, e);\n        }\n      });\n    }\n  };\n\n  return delegate;\n}\n","export function createResizer(elements) {\n  const minWidthPx = 10;\n  const moveThresholdPx = 3;\n  const { gripElement, leftSideElement, rightSideElement } = elements;\n\n  let initial = undefined;\n  let last = undefined;\n  let saveBodyCursor = undefined;\n\n  gripElement.onmousedown = onMouseDown;\n\n  function takeSnapshot(e) {\n    return {\n      mouseX: e.pageX,\n      leftWidth: leftSideElement ? leftSideElement.clientWidth : undefined,\n      rightWidth: rightSideElement ? rightSideElement.clientWidth : undefined\n    };\n  }\n\n  function onMouseDown(e) {\n    initial = takeSnapshot(e);\n    last = Object.assign({}, initial);\n\n    window.addEventListener(\"mousemove\", onMouseMove, true);\n    window.addEventListener(\"mouseup\", onMouseUp, true);\n\n    saveBodyCursor = document.body.style.cursor;\n    document.body.style.cursor = \"ew-resize\";\n\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseMove(e) {\n    const current = takeSnapshot(e);\n\n    if (Math.abs(current.mouseX - last.mouseX) >= moveThresholdPx) {\n      last = current;\n      let deltaX = current.mouseX - initial.mouseX;\n\n      if (\n        initial.leftWidth &&\n        deltaX < 0 &&\n        initial.leftWidth + deltaX < minWidthPx\n      ) {\n        deltaX = -(initial.leftWidth - minWidthPx);\n      }\n      if (\n        initial.rightWidth &&\n        deltaX > 0 &&\n        initial.rightWidth - deltaX < minWidthPx\n      ) {\n        deltaX = initial.rightWidth - minWidthPx;\n      }\n\n      if (leftSideElement && leftSideElement.style.width.length > 0) {\n        leftSideElement.style.width = `${initial.leftWidth + deltaX}px`;\n      }\n      if (rightSideElement && rightSideElement.style.width.length > 0) {\n        rightSideElement.style.width = `${initial.rightWidth - deltaX}px`;\n      }\n    }\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseUp(e) {\n    document.body.style.cursor = saveBodyCursor;\n    window.removeEventListener(\"mousemove\", onMouseMove, true);\n    window.removeEventListener(\"mouseup\", onMouseUp, true);\n\n    initial = undefined;\n    last = undefined;\n\n    e.stopPropagation();\n    return false;\n  }\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\nimport { createCodePathModel } from \"./codePathModel\";\n\nexport function createTreeGridController(view, model) {\n  let rowById = {};\n  let masterIndexVersion = 1;\n\n  const controller = {\n    getNodeById(id) {\n      const row = rowById[id];\n      if (row) {\n        return row.getNode();\n      }\n    },\n    toggle(id) {\n      return rowById[id].toggle();\n    },\n    expand(id) {\n      rowById[id].expand();\n    },\n    collapse(id) {\n      rowById[id].collapse();\n    },\n    selectNode(node) {\n      controller.expandToNode(node);\n      const nodeRow = rowById[node.id];\n      const nodeRowIndex = nodeRow.findAbsoluteIndex();\n      view.selectNode(nodeRowIndex, node);\n    },\n    expandToNode(node) {\n      if (!rowById[node.id]) {\n        controller.expandToNode(node.parent);\n        controller.expand(node.parent.id);\n      }\n    },\n    getIsExpanded(id) {\n      return rowById[id].getIsExpanded();\n    },\n    getIsVisible(id) {\n      return rowById[id].getIsVisible();\n    },\n    replaceModel(newModel) {\n      model.unsubscribe(subscriber);\n      model = newModel;\n      initWithCurrentModel();\n    },\n    clearAll() {\n      model.clearAll();\n      controller.replaceModel(model);\n    },\n    onNodeSelected(callback) {\n      view.onNodeSelected(callback);\n    }\n  };\n\n  view.attachController(controller);\n  initWithCurrentModel();\n  return controller;\n\n  function initWithCurrentModel() {\n    rowById = {};\n    masterIndexVersion = 1;\n    initRootNode();\n    view.clearAll();\n    subscriber(model.getTopLevelNodes());\n    model.subscribe(subscriber);\n  }\n\n  function createSubNodesRowControllers(subNodes) {\n    for (let node of subNodes) {\n      const row = createRowController(node);\n      rowById[node.id] = row;\n    }\n  }\n\n  function createRowController(node) {\n    let isExpanded = false;\n    let subTreeHeight = 0;\n    let cachedAbsoluteIndex = undefined;\n    let cachedIndexVersion = masterIndexVersion;\n\n    const getNode = () => {\n      return node;\n    };\n    const getParent = () => {\n      return rowById[node.parent.id];\n    };\n    const getPrevSibling = () => {\n      return node.prevSibling ? rowById[node.prevSibling.id] : undefined;\n    };\n    const getNextSibling = () => {\n      return node.nextSibling ? rowById[node.nextSibling.id] : undefined;\n    };\n    const getFirstChild = () => {\n      return node.firstChild ? rowById[node.firstChild.id] : undefined;\n    };\n    const getIsExpanded = () => {\n      return isExpanded;\n    };\n    const getIsVisible = () => {\n      const parent = getParent();\n      return parent.getIsVisible() && parent.getIsExpanded();\n    };\n    const getSubTreeHeight = () => {\n      return subTreeHeight;\n    };\n    const updateSubTreeHeight = delta => {\n      subTreeHeight += delta;\n      cachedIndexVersion = masterIndexVersion;\n      getParent().updateSubTreeHeight(delta);\n    };\n    const getIndexVersion = () => {\n      return masterIndexVersion;\n    };\n    const isCachedAbsoluteIndexValid = () => {\n      return !!cachedAbsoluteIndex && cachedIndexVersion === masterIndexVersion;\n    };\n    const findAbsoluteIndex = () => {\n      if (!isCachedAbsoluteIndexValid()) {\n        let indexRelativeToParent = 0;\n        for (\n          let sibling = getPrevSibling();\n          !!sibling;\n          sibling = sibling.getPrevSibling()\n        ) {\n          indexRelativeToParent += 1 + sibling.getSubTreeHeight();\n        }\n        const parentAbsoluteIndex = getParent().findAbsoluteIndex();\n        cachedAbsoluteIndex = parentAbsoluteIndex + indexRelativeToParent + 1;\n        cachedIndexVersion = masterIndexVersion;\n      }\n      return cachedAbsoluteIndex;\n    };\n    const showSubNodes = subNodes => {\n      if (!getIsVisible() || !getIsExpanded()) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      createSubNodesRowControllers(subNodes);\n      view.insertNodes(thisRowIndex + subTreeHeight + 1, subNodes);\n      masterIndexVersion++;\n      updateSubTreeHeight(+subNodes.length);\n      view.updateNode(thisRowIndex, node);\n    };\n    const hideSubNodes = () => {\n      if (!getIsVisible() || subTreeHeight === 0) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      view.removeNodes(thisRowIndex + 1, subTreeHeight);\n      masterIndexVersion++;\n      updateSubTreeHeight(-subTreeHeight);\n      view.updateNode(thisRowIndex, node);\n    };\n    const toggle = () => {\n      if (isExpanded) {\n        collapse();\n      } else {\n        expand();\n      }\n      return {\n        isExpanded\n      };\n    };\n    const expand = () => {\n      if (isExpanded || !node.firstChild) {\n        return;\n      }\n      const subNodes = [];\n      for (\n        let subNode = node.firstChild;\n        !!subNode;\n        subNode = subNode.nextSibling\n      ) {\n        subNodes.push(subNode);\n      }\n      isExpanded = true;\n      showSubNodes(subNodes);\n    };\n    const collapse = () => {\n      isExpanded = false;\n      hideSubNodes();\n    };\n\n    return {\n      getNode,\n      getParent,\n      getPrevSibling,\n      getNextSibling,\n      getFirstChild,\n      getIsExpanded,\n      getIsVisible,\n      getSubTreeHeight,\n      updateSubTreeHeight,\n      getIndexVersion,\n      findAbsoluteIndex,\n      toggle,\n      expand,\n      collapse,\n      showSubNodes\n    };\n  }\n\n  function createRootNodeController(rootNode) {\n    let subTreeHeight = 0;\n    const noop = () => {};\n\n    return {\n      getNode: () => rootNode,\n      getParent: noop,\n      getPrevSibling: noop,\n      getNextSibling: noop,\n      getFirstChild: noop,\n      getIsExpanded: () => true,\n      getIsVisible: () => true,\n      getSubTreeHeight: () => subTreeHeight,\n      updateSubTreeHeight(delta) {\n        subTreeHeight += delta;\n      },\n      getIndexVersion: () => masterIndexVersion,\n      findAbsoluteIndex: () => -1,\n      toggle: noop,\n      expand: noop,\n      collapse: noop,\n      showSubNodes(subNodes) {\n        createSubNodesRowControllers(subNodes);\n        view.insertNodes(subTreeHeight, subNodes);\n        subTreeHeight += subNodes.length;\n      }\n    };\n  }\n\n  function subscriber(insertedNodes) {\n    let currentGroup = undefined;\n\n    for (let i = 0; i < insertedNodes.length; i++) {\n      const parentId = insertedNodes[i].parent.id;\n      const parentRow = rowById[parentId];\n      if (!currentGroup || currentGroup.parentId !== parentId) {\n        beginNewGroup(i);\n      }\n    }\n\n    endCurrentGroup(insertedNodes.length);\n\n    function beginNewGroup(index) {\n      endCurrentGroup(index);\n      currentGroup = {\n        parentId: insertedNodes[index].parent.id,\n        startIndex: index\n      };\n    }\n\n    function endCurrentGroup(index) {\n      if (currentGroup && currentGroup.startIndex < index) {\n        const parentRow = rowById[currentGroup.parentId];\n        if (parentRow) {\n          const nodesInGroup = insertedNodes.slice(\n            currentGroup.startIndex,\n            index\n          );\n          parentRow.showSubNodes(nodesInGroup);\n        }\n      }\n    }\n  }\n\n  function initRootNode() {\n    const rootNode = model.getRootNode();\n    rowById[rootNode.id] = createRootNodeController(rootNode);\n  }\n}\n\nexport function createTreeGridView(table, columns) {\n  const nodeSelectedCallbacks = createMulticastDelegate(\n    \"TreeGridView.NodeSelected\"\n  );\n  const keyPressedCallbacks = createMulticastDelegate(\n    \"TreeGridView.KeyPressed\"\n  );\n\n  table.onkeydown = e => {\n    if (handleTableKeyboardEvent(e) === true) {\n      e.stopPropagation();\n      return false;\n    }\n  };\n\n  let tbody = document.createElement(\"tbody\");\n  table.appendChild(tbody);\n\n  let controller = undefined;\n  let selectedTr = undefined;\n\n  const stringToTextNode = element => {\n    if (typeof element === \"string\") {\n      return document.createTextNode(element);\n    }\n    return element;\n  };\n\n  const renderCell = (node, rowIndex, colIndex, tr, td) => {\n    const tdContents = columns[colIndex].renderCell(node, controller, rowIndex);\n    tdContents\n      .filter(htmlNode => !!htmlNode)\n      .map(stringToTextNode)\n      .forEach(htmlNode => td.appendChild(htmlNode));\n  };\n\n  const attachController = theController => {\n    controller = theController;\n  };\n\n  const updateNode = (index, node) => {\n    const tr = tbody.rows[index];\n    for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n      const td = tr.cells[colIndex];\n      td.innerHTML = \"\";\n      renderCell(node, index, colIndex, tr, td);\n    }\n  };\n\n  const selectNode = (index, node) => {\n    if (selectedTr) {\n      selectedTr.classList.remove(\"selected\");\n    }\n    selectedTr = undefined;\n    if (typeof index === \"number\" && index >= 0) {\n      selectedTr = tbody.rows[index];\n      selectedTr.classList.add(\"selected\");\n      nodeSelectedCallbacks.invoke(node);\n      selectedTr.scrollIntoViewIfNeeded(); //TODO\n    }\n  };\n\n  const insertNodes = (index, nodes) => {\n    for (let i = 0; i < nodes.length; i++) {\n      const rowIndex = index + i;\n      const tr = tbody.insertRow(index + i);\n      tr.setAttribute(\"data-nid\", nodes[i].id);\n      tr.onclick = () => {\n        selectNode(tr.rowIndex - 1, nodes[i]);\n      };\n      for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n        const td = tr.insertCell(colIndex);\n        renderCell(nodes[i], rowIndex, colIndex, tr, td);\n      }\n    }\n  };\n\n  const removeNodes = (index, count) => {\n    if (\n      selectedTr &&\n      selectedTr.rowIndex - 1 >= index &&\n      selectedTr.rowIndex - 1 < index + count\n    ) {\n      selectedTr = undefined;\n      nodeSelectedCallbacks.invoke(undefined);\n    }\n    for (let i = count - 1; i >= 0; i--) {\n      tbody.deleteRow(index + i);\n    }\n  };\n\n  const clearAll = () => {\n    const newTbody = document.createElement(\"tbody\");\n    table.replaceChild(newTbody, tbody);\n    tbody = newTbody;\n    selectNode();\n  };\n\n  const onNodeSelected = callback => {\n    nodeSelectedCallbacks.add(callback);\n  };\n\n  const onKeyPressed = callback => {\n    keyPressedCallbacks.add(callback);\n  };\n\n  return {\n    attachController,\n    updateNode,\n    insertNodes,\n    removeNodes,\n    selectNode,\n    clearAll,\n    onNodeSelected,\n    onKeyPressed\n  };\n\n  function handleTableKeyboardEvent(e) {\n    if (e.ctrlKey || e.shiftKey || e.altKey) {\n      return false;\n    }\n\n    if (!selectedTr) {\n      if (tbody.rows.length > 0) {\n        selectNode(0, getTrNode(tbody.rows[0]));\n      }\n      return true;\n    }\n\n    const selectedNodeId = getTrNodeId(selectedTr);\n\n    switch (e.key) {\n      case \"ArrowLeft\":\n        if (controller.getIsExpanded(selectedNodeId)) {\n          controller.collapse(selectedNodeId);\n          return true;\n        }\n        break;\n      case \"ArrowRight\":\n        if (!controller.getIsExpanded(selectedNodeId)) {\n          controller.expand(selectedNodeId);\n          return true;\n        }\n        break;\n    }\n\n    const trToGo = getTrToGo(e.key);\n    if (trToGo) {\n      selectNode(getTrIndex(trToGo), getTrNode(trToGo));\n      return true;\n    }\n\n    return false;\n  }\n\n  function getTrToGo(keyCode) {\n    switch (keyCode) {\n      case \"ArrowUp\":\n        if (getTrIndex(selectedTr) > 0) {\n          return tbody.rows[getTrIndex(selectedTr) - 1];\n        }\n        break;\n      case \"ArrowDown\":\n        if (getTrIndex(selectedTr) < tbody.rows.length - 1) {\n          return tbody.rows[getTrIndex(selectedTr) + 1];\n        }\n        break;\n      case \"ArrowLeft\":\n        return findParentTr(selectedTr);\n      case \"ArrowRight\":\n        return findExpandableChildTr(selectedTr);\n    }\n  }\n\n  function getTrIndex(tr) {\n    return tr.sectionRowIndex;\n  }\n\n  function getTrNodeId(tr) {\n    const nodeId = parseInt(tr.getAttribute(\"data-nid\"));\n    return !isNaN(nodeId) ? nodeId : undefined;\n  }\n\n  function getTrNode(tr) {\n    const nodeId = getTrNodeId(tr);\n    if (nodeId) {\n      return controller.getNodeById(nodeId);\n    }\n  }\n\n  function findParentTr(childTr) {\n    const childNode = getTrNode(childTr);\n    const parentNodeId = childNode.parent.id;\n    if (parentNodeId) {\n      for (let index = getTrIndex(childTr) - 1; index >= 0; index--) {\n        const tr = tbody.rows[index];\n        if (getTrNodeId(tr) === parentNodeId) {\n          return tr;\n        }\n      }\n    }\n  }\n\n  function findExpandableChildTr(parentTr) {\n    const parentNode = getTrNode(parentTr);\n    for (\n      let index = getTrIndex(parentTr) + 1;\n      index < tbody.rows.length;\n      index++\n    ) {\n      const childTr = tbody.rows[index];\n      const childNode = getTrNode(childTr);\n      if (childNode.parent !== parentNode) {\n        break;\n      }\n      if (childNode.firstChild) {\n        return childTr;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}