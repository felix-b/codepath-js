{"version":3,"sources":["webpack://CodePath/webpack/universalModuleDefinition","webpack://CodePath/webpack/bootstrap","webpack://CodePath/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://CodePath/./node_modules/opentracing/lib/index.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://CodePath/./node_modules/opentracing/lib/span.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/typeof.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/createClass.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/inherits.js","webpack://CodePath/./node_modules/opentracing/lib/noop.js","webpack://CodePath/./node_modules/opentracing/lib/tracer.js","webpack://CodePath/./node_modules/opentracing/lib/span_context.js","webpack://CodePath/./node_modules/opentracing/lib/functions.js","webpack://CodePath/./node_modules/opentracing/lib/constants.js","webpack://CodePath/./node_modules/opentracing/lib/reference.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://CodePath/./node_modules/opentracing/lib/binary_carrier.js","webpack://CodePath/./node_modules/opentracing/lib/ext/tags.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://CodePath/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://CodePath/./node_modules/opentracing/lib/global_tracer.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://CodePath/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://CodePath/./src/codePathTracer.js","webpack://CodePath/./src/codePathStream.js","webpack://CodePath/./src/logLevel.js","webpack://CodePath/./src/codePathScopeManager.js","webpack://CodePath/./src/codePath.js","webpack://CodePath/./src/multicastDelegate.js","webpack://CodePath/./src/codePathModel.js","webpack://CodePath/./src/codePathSearchModel.js","webpack://CodePath/./src/treeGrid.js","webpack://CodePath/./src/debounce.js","webpack://CodePath/./src/resizer.js","webpack://CodePath/./src/debugLog.js","webpack://CodePath/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","__export","binary_carrier_1","BinaryCarrier","default","Tags","Noop","reference_1","Reference","span_1","Span","span_context_1","SpanContext","tracer_1","Tracer","mock_tracer_1","MockTracer","initialize","self","ReferenceError","noop","context","this","_context","tracer","_tracer","setOperationName","_setOperationName","setBaggageItem","_setBaggageItem","getBaggageItem","_getBaggageItem","setTag","_a","_addTags","addTags","keyValueMap","log","keyValuePairs","timestamp","_log","logEvent","eventName","payload","event","finish","finishTime","_finish","spanContext","_typeof2","iterator","constructor","_typeof","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","protoProps","staticProps","assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","span","Functions","startSpan","options","childOf","references","push","_startSpan","inject","format","carrier","_inject","extract","_extract","fields","toTraceId","toSpanId","Constants","REFERENCE_CHILD_OF","followsFrom","REFERENCE_FOLLOWS_FROM","FORMAT_BINARY","FORMAT_TEXT_MAP","FORMAT_HTTP_HEADERS","type","referencedContext","_type","_referencedContext","extendStatics","__extends","b","Array","__","MockContext","_super","_this","_span","opentracing","mock_context_1","MockSpan","_mockTracer","_uuid","_generateUUID","_startMs","Date","now","_finishMs","_operationName","_tags","_logs","set","_i","keys_1","keys","uuid","operationName","durationMs","tags","Math","abs","random","toString","substr","addReference","ref","debug","operation","millis","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","buffer","SPAN_KIND","SPAN_KIND_RPC_CLIENT","SPAN_KIND_RPC_SERVER","SPAN_KIND_MESSAGING_PRODUCER","SPAN_KIND_MESSAGING_CONSUMER","ERROR","COMPONENT","SAMPLING_PRIORITY","PEER_SERVICE","PEER_HOSTNAME","PEER_ADDRESS","PEER_HOST_IPV4","PEER_HOST_IPV6","PEER_PORT","HTTP_URL","HTTP_METHOD","HTTP_STATUS_CODE","MESSAGE_BUS_DESTINATION","DB_INSTANCE","DB_STATEMENT","DB_TYPE","DB_USER","mock_span_1","mock_report_1","_spans","_allocSpan","_startStack","Error","stack","clear","report","MockReport","spans","spansByUUID","spansByTag","debugSpans","unfinishedSpans","forEach","val","firstSpanWithTagValue","noopTracer","_globalTracer","globalTracerDelegate","GlobalTracerDelegate","apply","arguments","initGlobalTracer","globalTracer","_setPrototypeOf","isArray","arr2","iter","from","createCodePathTracer","traceId","stream","CodePathTracer","_traceId","_nextSpanId","_clock","clock","_scopeManager","scopeManager","_stream","writeStartTracer","CodePathSpan","CodePathSpanContext","spanId","getTraceId","_selfContext","startTime","undefined","findReferences","writeStartSpan","contextToPlain","epoch","writeSpanTags","time","writeLog","$id","effectiveFinishTime","writeEndSpan","_spanId","plainToContext","createCodePathStream","entries","isEnabled","enabled","token","messageId","enable","peekEntries","takeEntries","copyOfEntries","normalizeTags","entry","visitedObjects","Set","meta","$meta","stringify","tag","safeStringify","json","JSON","replaceCircularReferences","has","add","LOG_LEVEL","warning","error","critical","currentScopeManager","createInternalScopeManager","trace","promiseOrFunc","logToActiveSpan","activeSpan","getActiveSpan","callerScopeManager","clone","originalPromise","saveScopeManager","wrapperPromise","Promise","resolve","reject","then","$async","level","err","message","createDefaultScopeManager","getActiveTracer","setActiveTracer","setActiveSpan","resetCurrentScope","source","activeTracer","thisScopeManager","createRealClock","performance","getTime","setInterval","func","delay","clearInterval","id","setTimeout","clearTimeout","defaultTracerFactory","createCodePath","tracerFactory","outputStream","spanEntries","existingSpan","tempSpan","parentContext","parentReferenceType","existingTracer","newTracer","getOrCreateActiveTracer","parentReferenceContext","getParentSpanContext","spanOptions","childSpan","childSpanId","thisCodePath","logDebug","logWarning","logError","logCritical","spanRoot","spanChild","spanFollower","finishSpan","doesNotifyTracerOnFinish","notifySpanFinished","parentEntry","input","output","createMulticastDelegate","subscribers","delegate","subscriber","remove","filter","invoke","args","e","console","createCodePathModel","insertNodesCallbacks","updateNodesCallbacks","extractEntryMetrics","metrics","traceNodeMap","rootNode","nextNodeId","initializeModel","mapByTraceId","getOrAddTraceSpanNodeMap","existingMap","nodeBySpanId","newMap","getSpanNode","setSpanNode","node","createRootNode","bubbleMetrics","insertQueue","updateQueue","insertSet","metricKeys","targetNode","bubbleSingleMetric","parent","handleInsertNodeEntry","getParentContext","parentNode","warn","findParentNode","newNode","createRegularNode","appendChildNodeToParent","entryHandlerByToken","StartTracer","StartSpan","Log","SpanTags","EndSpan","duration","getRootNode","getNodesFlat","getNodesAsFlatArray","getTopLevelNodes","getTopLevelNodesAsArray","walkNodesDepthFirst","callback","publish","handler","handleEntry","subscribe","insertNodes","updateNodes","unsubscribe","clearAll","top","depth","firstChild","lastChild","prevSibling","nextSibling","newChild","flatNodes","topLevelNodes","walkImmediateSubNodes","findNextMatchingNode","fromNode","predicate","currentNode","finishedSubTree","findPrevMatchingNode","createCodePathSearchModel","sourceModel","resultNodeById","newlyCreatedResultNodes","resultRootNode","initializeFromSourceModel","sourceRootNode","depthFirstSearchSubTree","getResultParentNode","createThisResultNode","matched","createResultNode","isRootNode","thisNodeMatched","thisResultNode","subNode","performSearch","sourceModelSubscriber","handleInsertedSourceNodes","updatedNodes","getFirstMatchedNode","firstMatchedNode","getNextMatchedNode","matchedNode","getPrevMatchedNode","unsubscribeFromSource","sourceNode","resultParentNode","resultNode","insertedNodes","getOrCreateResultParentNode","sourceChildNode","existingParent","createTreeGridController","view","model","rowById","masterIndexVersion","currentGroup","parentId","beginNewGroup","index","endCurrentGroup","startIndex","parentRow","nodesInGroup","slice","showSubNodes","row","findAbsoluteIndex","updateNode","controller","getNodeById","getNode","toggle","expand","collapse","selectNode","expandToNode","nodeRowIndex","getIsExpanded","getIsVisible","replaceModel","newModel","initWithCurrentModel","onNodeSelected","attachController","subTreeHeight","getParent","getPrevSibling","getNextSibling","getFirstChild","getSubTreeHeight","updateSubTreeHeight","delta","getIndexVersion","subNodes","createSubNodesRowControllers","createRootNodeController","createRowController","isExpanded","cachedAbsoluteIndex","cachedIndexVersion","indexRelativeToParent","sibling","parentAbsoluteIndex","thisRowIndex","removedNodeIds","removeNodes","hideSubNodes","createTreeGridView","table","columns","rows","nodeSelectedCallbacks","keyPressedCallbacks","onkeydown","ctrlKey","shiftKey","altKey","selectedTr","tbody","getTrNode","selectedNodeId","getTrNodeId","trToGo","keyCode","getTrIndex","childTr","parentNodeId","tr","findParentTr","parentTr","childNode","findExpandableChildTr","getTrToGo","handleTableKeyboardEvent","stopPropagation","document","createElement","appendChild","stringToTextNode","element","createTextNode","renderCell","rowIndex","colIndex","td","column","tdClass","getTdClass","classList","tdContents","htmlNode","map","applyTrClasses","className","getTrClasses","trClasses","scrollIntoViewIfNeeded","theController","cells","innerHTML","nodes","insertRow","setAttribute","onclick","insertCell","count","deletedNodeIds","deleteRow","newTbody","replaceChild","onKeyPressed","sectionRowIndex","nodeId","parseInt","getAttribute","isNaN","createDebounce","consumer","interval","optionalClock","timeoutId","bounce","createResizer","elements","minWidthPx","moveThresholdPx","gripElement","leftSideElement","rightSideElement","initial","last","saveBodyCursor","takeSnapshot","mouseX","pageX","leftWidth","clientWidth","rightWidth","onMouseMove","current","deltaX","style","width","onMouseUp","body","cursor","removeEventListener","onmousedown","assign","addEventListener","logSwitch","createDebugLog","component","globalVars","setEnabled","createSetEnabled","info","enableDebugLog","createEnableLogMessage","handleEnableLogMessage","postMessage","data","chrome","runtime","sendMessage","onMessage","addListener","request","sender","sendResponse","backgroundConnection"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CodePath\"] = factory();\n\telse\n\t\troot[\"CodePath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    // The SpanContext is entirely implementation dependent\n    /**\n     * Returns a string representation of the implementation internal trace ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toTraceId = function () {\n        return '';\n    };\n    /**\n     * Returns a string representation of the implementation internal span ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toSpanId = function () {\n        return '';\n    };\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","import {\n  Tracer,\n  Span,\n  SpanContext,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nexport function createCodePathTracer(traceId, stream, options) {\n  return new CodePathTracer(traceId, stream, options);\n}\n\nclass CodePathTracer extends Tracer {\n  _traceId;\n  _clock;\n  _scopeManager;\n  _stream;\n  _nextSpanId;\n\n  constructor(traceId, stream, options) {\n    super();\n    this._traceId = traceId;\n    this._nextSpanId = 1;\n    this._clock = options.clock;\n    this._scopeManager = options.scopeManager;\n    this._stream = stream;\n\n    stream.writeStartTracer(options.clock.now(), traceId);\n  }\n\n  // NOTE: the input to this method is *always* an associative array. The\n  // public-facing startSpan() method normalizes the arguments so that\n  // all N implementations do not need to worry about variations in the call\n  // signature.\n  //\n  // The default behavior returns a no-op span.\n  // protected _startSpan(name: string, fields: SpanOptions): Span {\n  //   return Noop.span!;\n  // }\n  _startSpan(name, options) {\n    return new CodePathSpan(\n      this,\n      this._clock,\n      this._stream,\n      this._nextSpanId++,\n      name,\n      options\n    );\n  }\n\n  // The default behavior is a no-op.\n  // protected _inject(spanContext: SpanContext, format: string, carrier: any): void {\n  // }\n  _inject(spanContext, format, carrier) {}\n\n  // The default behavior is to return a no-op SpanContext.\n  // protected _extract(format: string, carrier: any): SpanContext | null {\n  //   return Noop.spanContext!;\n  // }\n  _extract(format, carrier) {\n    return new CodePathSpanContext(\"\", \"\");\n  }\n\n  getTraceId() {\n    return this._traceId;\n  }\n\n  getCurrentTime() {\n    return this._clock.now();\n  }\n}\n\nclass CodePathSpan extends Span {\n  _tracer;\n  _clock;\n  _stream;\n  _selfContext;\n  // _childOfContext;\n  // _followsFromContext;\n  // _operationName;\n  // _startTime;\n  // _endTime;\n  // _baggageItems;\n  // _tags;\n  // _logs;\n\n  constructor(tracer, clock, stream, spanId, name, options) {\n    super();\n\n    const traceId = tracer.getTraceId();\n\n    this._tracer = tracer;\n    this._clock = clock;\n    this._stream = stream;\n    this._selfContext = new CodePathSpanContext(traceId, spanId);\n\n    const startTime = (options && options.startTime) || clock.now();\n    const { childOf, followsFrom } = findReferences(options);\n\n    stream.writeStartSpan(\n      startTime,\n      traceId,\n      spanId,\n      name,\n      {\n        childOf: contextToPlain(childOf),\n        followsFrom: contextToPlain(followsFrom)\n      },\n      options.tags,\n      childOf || followsFrom ? undefined : clock.epoch()\n    );\n\n    // this._operationName = name;\n    // this._startTime = (options && options.startTime) || tracer.getCurrentTime();\n    // this._endTime = undefined;\n    // this._baggageItems = {};\n    // this._tags = (options && options.tags) || {};\n    // this._logs = [];\n  }\n\n  // getData() {\n  //   return {\n  //     context: contextToPlain(this._selfContext),\n  //     childOf: contextToPlain(this._childOfContext),\n  //     followsFrom: contextToPlain(this._followsFromContext),\n  //     operationName: this._operationName,\n  //     startTime: this._startTime,\n  //     endTime: this._endTime,\n  //     baggageItems: this._baggageItems,\n  //     tags: this._tags,\n  //     logs: this._logs\n  //   };\n  // }\n\n  // By default returns a no-op SpanContext.\n  // protected _context(): SpanContext {\n  //     return noop.spanContext!;\n  // }\n  _context() {\n    return this._selfContext;\n  }\n\n  // By default returns a no-op tracer.\n  //\n  // The base class could store the tracer that created it, but it does not\n  // in order to ensure the no-op span implementation has zero members,\n  // which allows V8 to aggressively optimize calls to such objects.\n  // protected _tracer(): Tracer {\n  //     return noop.tracer!;\n  // }\n  _tracer() {\n    return this._tracer;\n  }\n\n  // By default does nothing\n  // protected _setOperationName(name: string): void {\n  // }\n  _setOperationName(name) {\n    throw new Error(\"Not supported: setOperationName\");\n    //this._operationName = name;\n  }\n\n  // By default does nothing\n  // protected _setBaggageItem(key: string, value: string): void {\n  // }\n  _setBaggageItem(key, value) {\n    throw new Error(\"Not supported: setBaggageItem\");\n    //this._baggageItems[key] = value;\n  }\n\n  // By default does nothing\n  // protected _getBaggageItem(key: string): string | undefined {\n  //     return undefined;\n  // }\n  _getBaggageItem(key) {\n    return undefined;\n    //return this._baggageItems[key];\n  }\n\n  // By default does nothing\n  //\n  // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n  // will always be an associative array.\n  // protected _addTags(keyValuePairs: { [key: string]: any }): void {\n  // }\n  _addTags(keyValuePairs) {\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeSpanTags(\n      this._clock.now(),\n      traceId,\n      spanId,\n      keyValuePairs\n    );\n    // this._tags = {\n    //   ...this._tags,\n    //   ...keyValuePairs\n    // };\n  }\n\n  // By default does nothing\n  // protected _log(keyValuePairs: { [key: string]: any }, timestamp?: number): void {\n  // }\n  _log(keyValuePairs, timestamp) {\n    const time = timestamp || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeLog(\n      time,\n      traceId,\n      spanId,\n      keyValuePairs.$id,\n      keyValuePairs\n    );\n    // const logEntry = {\n    //   ...(keyValuePairs || {}),\n    //   $time: timestamp || this._tracer.getCurrentTime()\n    // };\n    // this._logs.push(logEntry);\n  }\n\n  // By default does nothing\n  //\n  // finishTime is expected to be either a number or undefined.\n  // protected _finish(finishTime?: number): void {\n  // }\n  _finish(finishTime) {\n    const effectiveFinishTime = finishTime || this._clock.now();\n    const { traceId, spanId } = contextToPlain(this._selfContext);\n    this._stream.writeEndSpan(effectiveFinishTime, traceId, spanId);\n\n    // if (this._endTime) {\n    //   throw new Error(\"Invalid operation: span already finished\");\n    // }\n    // this._endTime = finishTime || this._tracer.getCurrentTime();\n  }\n}\n\nclass CodePathSpanContext extends SpanContext {\n  _traceId;\n  _spanId;\n\n  constructor(traceId, spanId) {\n    super();\n    this._traceId = traceId;\n    this._spanId = spanId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal trace ID.\n   *\n   * @returns {string}\n   */\n  toTraceId() {\n    return this._traceId;\n  }\n\n  /**\n   * Returns a string representation of the implementation internal span ID.\n   *\n   * @returns {string}\n   */\n  toSpanId() {\n    return this._spanId;\n  }\n}\n\nfunction findReferences(options) {\n  let childOf = undefined;\n  let followsFrom = undefined;\n\n  options &&\n    options.references &&\n    options.references.forEach(ref => {\n      switch (ref.type()) {\n        case REFERENCE_CHILD_OF:\n          childOf = ref.referencedContext();\n          break;\n        case REFERENCE_FOLLOWS_FROM:\n          followsFrom = ref.referencedContext();\n          break;\n      }\n    });\n\n  return {\n    childOf,\n    followsFrom\n  };\n}\n\nexport function contextToPlain(context) {\n  if (context) {\n    return {\n      traceId: context.toTraceId(),\n      spanId: context.toSpanId()\n    };\n  }\n}\n\nexport function plainToContext({ traceId, spanId }) {\n  return new CodePathSpanContext(traceId, spanId);\n}\n","import { REFERENCE_FOLLOWS_FROM, REFERENCE_CHILD_OF } from \"opentracing\";\n\nexport function createCodePathStream(options) {\n  let entries = [];\n  let isEnabled = options ? !!options.enabled : true;\n\n  return {\n    writeStartTracer(time, traceId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"StartTracer\",\n        traceId,\n        tags: tags || {}\n      });\n    },\n    writeStartSpan(time, traceId, spanId, messageId, references, tags, epoch) {\n      if (!isEnabled) {\n        return;\n      }\n      const { childOf, followsFrom } = references;\n      entries.push({\n        time,\n        epoch,\n        token: \"StartSpan\",\n        traceId,\n        spanId,\n        childOf,\n        followsFrom,\n        messageId,\n        tags: tags || {}\n      });\n    },\n    writeEndSpan(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"EndSpan\",\n        traceId,\n        spanId,\n        tags: tags || {}\n      });\n    },\n    writeLog(time, traceId, spanId, messageId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"Log\",\n        traceId,\n        spanId,\n        messageId,\n        tags: tags || {}\n      });\n    },\n    writeSpanTags(time, traceId, spanId, tags) {\n      if (!isEnabled) {\n        return;\n      }\n      entries.push({\n        time,\n        token: \"SpanTags\",\n        traceId,\n        spanId,\n        tags: tags || {}\n      });\n    },\n    enable(value) {\n      const effectiveValue = typeof value === \"undefined\" ? true : !!value;\n      isEnabled = effectiveValue;\n    },\n    peekEntries() {\n      return entries;\n    },\n    takeEntries() {\n      const copyOfEntries = entries;\n      entries = [];\n      copyOfEntries.forEach(normalizeTags);\n      return copyOfEntries;\n    }\n  };\n\n  function normalizeTags(entry) {\n    let visitedObjects = new Set();\n\n    if (entry.tags) {\n      const meta = entry.tags.$meta;\n      if (meta && meta.stringify) {\n        for (let tag of meta.stringify) {\n          entry.tags[tag] = safeStringify(entry.tags[tag]);\n        }\n      }\n    }\n\n    function safeStringify(obj) {\n      const json = JSON.stringify(obj, replaceCircularReferences);\n      if (json && json.length > 1024) {\n        return json.substr(0, 1024) + \"...[trunc]\";\n      }\n      return json;\n    }\n\n    function replaceCircularReferences(key, value) {\n      if (typeof value === \"object\" && value !== null) {\n        if (visitedObjects.has(value)) {\n          return \"[circ]\";\n        }\n        visitedObjects.add(value);\n      }\n      return value;\n    }\n  }\n}\n","export const LOG_LEVEL = {\n  debug: 0,\n  event: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n","import { LOG_LEVEL } from \"./logLevel\";\n\nlet currentScopeManager = createInternalScopeManager();\n\nexport function trace(promiseOrFunc) {\n  const logToActiveSpan = tags => {\n    const activeSpan = currentScopeManager.getActiveSpan();\n    if (activeSpan) {\n      activeSpan.log(tags);\n    }\n  };\n\n  const callerScopeManager = currentScopeManager.clone();\n\n  const originalPromise =\n    typeof promiseOrFunc === \"function\" ? promiseOrFunc() : promiseOrFunc;\n\n  const saveScopeManager = currentScopeManager;\n\n  const wrapperPromise = new Promise((resolve, reject) => {\n    originalPromise\n      .then(value => {\n        currentScopeManager = saveScopeManager;\n        logToActiveSpan({\n          $id: \"async-then\",\n          $async: \"then\",\n          level: LOG_LEVEL.debug,\n          value\n        });\n        resolve(value);\n      })\n      .catch(err => {\n        currentScopeManager = saveScopeManager;\n        logToActiveSpan({\n          $id: \"async-catch\",\n          $async: \"catch\",\n          level: LOG_LEVEL.error,\n          error: {\n            message: err.message,\n            stack: err.stack\n          }\n        });\n        reject(err);\n      });\n  });\n\n  currentScopeManager = callerScopeManager;\n  return wrapperPromise;\n}\n\nexport function createDefaultScopeManager() {\n  return {\n    getActiveTracer() {\n      return currentScopeManager.getActiveTracer();\n    },\n    getActiveSpan() {\n      return currentScopeManager.getActiveSpan();\n    },\n    setActiveTracer(tracer) {\n      currentScopeManager.setActiveTracer(tracer);\n    },\n    setActiveSpan(span) {\n      currentScopeManager.setActiveSpan(span);\n    }\n  };\n}\n\nexport function resetCurrentScope() {\n  currentScopeManager = createInternalScopeManager();\n}\n\nfunction createInternalScopeManager(source) {\n  let activeTracer = source ? source.getActiveTracer() : undefined;\n  let activeSpan = source ? source.getActiveSpan() : undefined;\n  const thisScopeManager = {\n    getActiveTracer() {\n      return activeTracer;\n    },\n    getActiveSpan() {\n      return activeSpan;\n    },\n    setActiveTracer(tracer) {\n      activeTracer = tracer;\n    },\n    setActiveSpan(span) {\n      activeSpan = span;\n    },\n    clone() {\n      return createInternalScopeManager(thisScopeManager);\n    }\n  };\n  return thisScopeManager;\n}\n","import {\n  Tracer,\n  Reference,\n  REFERENCE_FOLLOWS_FROM,\n  REFERENCE_CHILD_OF\n} from \"opentracing\";\n\nimport { createCodePathTracer } from \"./codePathTracer\";\nimport { createCodePathStream } from \"./codePathStream\";\nimport { createDefaultScopeManager } from \"./codePathScopeManager\";\nimport { LOG_LEVEL } from \"./logLevel\";\n\nexport const createRealClock = () => {\n  return {\n    now() {\n      return performance.now();\n    },\n    epoch() {\n      return new Date().getTime();\n    },\n    setInterval(func, delay) {\n      return setInterval(func, delay);\n    },\n    clearInterval(id) {\n      clearInterval(id);\n    },\n    setTimeout(func, delay) {\n      return setTimeout(func, delay);\n    },\n    clearTimeout(id) {\n      clearTimeout(id);\n    }\n  };\n};\n\n// export const createDefaultScopeManager = () => {\n//   let activeTracer = undefined;\n//   let activeSpan = undefined;\n//   return {\n//     getActiveTracer() {\n//       return activeTracer;\n//     },\n//     getActiveSpan() {\n//       return activeSpan;\n//     },\n//     setActiveTracer(tracer) {\n//       activeTracer = tracer;\n//     },\n//     setActiveSpan(span) {\n//       activeSpan = span;\n//     }\n//   };\n// };\n\nexport const noopTracerFactory = () => new Tracer();\n\nexport const defaultTracerFactory = (stream, options) =>\n  createCodePathTracer(`webuser${options.clock.now()}`, stream, options);\n\nexport const GlobalCodePath = {\n  configure(options) {\n    const { input, output } = createCodePath(options);\n    Object.assign(GlobalCodePath, {\n      ...input,\n      getOutputStream() {\n        return output;\n      }\n    });\n  },\n  getOutputStream() {\n    throw new Error(\"GlobalCodePath was not configured\");\n  }\n};\n\nexport function createCodePath(options) {\n  const clock = (options && options.clock) || createRealClock();\n  const scopeManager =\n    (options && options.scopeManager) || createDefaultScopeManager();\n  const tracerFactory =\n    (options && options.tracerFactory) || defaultTracerFactory;\n  const outputStream =\n    (options && options.outputStream) ||\n    createCodePathStream(options ? options.stream : undefined);\n  const spanEntries = {};\n\n  const getOrCreateActiveTracer = () => {\n    const existingTracer = scopeManager.getActiveTracer();\n    if (existingTracer) {\n      return existingTracer;\n    }\n\n    const newTracer = tracerFactory({ clock, scopeManager, tracerFactory });\n    scopeManager.setActiveTracer(newTracer);\n    return newTracer;\n  };\n\n  const getParentSpanContext = parentContext => {\n    if (parentContext) {\n      return parentContext;\n    }\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      return existingSpan.context();\n    }\n  };\n\n  const logToActiveSpan = tags => {\n    const existingSpan = scopeManager.getActiveSpan();\n    if (existingSpan) {\n      existingSpan.log(tags);\n    } else {\n      const activeTracer = scopeManager.getActiveTracer();\n      const tempSpan = activeTracer.startSpan(\"unknown-root\");\n      tempSpan.log(tags);\n      tempSpan.finish();\n    }\n  };\n\n  const startSpan = (id, tags, parentContext, parentReferenceType) => {\n    const tracer = getOrCreateActiveTracer();\n    const parentReferenceContext = getParentSpanContext(parentContext);\n    const spanOptions = {\n      references: parentReferenceContext && [\n        new Reference(parentReferenceType, parentReferenceContext)\n      ],\n      tags\n    };\n    const childSpan = tracer.startSpan(id, spanOptions);\n    scopeManager.setActiveSpan(childSpan);\n    const childSpanId = childSpan.context().toSpanId();\n    spanEntries[childSpanId] = {\n      span: childSpan,\n      options: spanOptions\n    };\n    return childSpan;\n  };\n\n  scopeManager.setActiveTracer(\n    tracerFactory(outputStream, {\n      clock,\n      scopeManager,\n      tracerFactory\n    })\n  );\n\n  const thisCodePath = {\n    logDebug(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.debug, ...tags });\n    },\n    logEvent(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.event, ...tags });\n    },\n    logWarning(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.warning, ...tags });\n    },\n    logError(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.error, ...tags });\n    },\n    logCritical(id, tags) {\n      logToActiveSpan({ $id: id, level: LOG_LEVEL.critical, ...tags });\n    },\n    spanRoot(id, tags) {\n      scopeManager.setActiveSpan(undefined);\n      return startSpan(id, tags);\n    },\n    spanChild(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_CHILD_OF);\n    },\n    spanFollower(id, tags, parentContext) {\n      return startSpan(id, tags, parentContext, REFERENCE_FOLLOWS_FROM);\n    },\n    finishSpan(tags) {\n      const activeSpan = scopeManager.getActiveSpan();\n      if (!activeSpan) {\n        throw new Error(\"Current scope has no active span\");\n      }\n      activeSpan.finish();\n      if (!activeSpan.doesNotifyTracerOnFinish) {\n        thisCodePath.notifySpanFinished(activeSpan);\n      }\n    },\n    notifySpanFinished(span) {\n      const spanContext = span.context();\n      const spanId = spanContext.toSpanId();\n      const traceId = spanContext.toTraceId();\n      const entry = spanEntries[spanId];\n      if (!entry) {\n        throw new Error(`Trace span not found: id [${spanId}]`);\n      }\n      const parentContext =\n        entry.options.references &&\n        entry.options.references[0].referencedContext();\n      if (parentContext && parentContext.toTraceId() === traceId) {\n        const parentEntry = spanEntries[parentContext.toSpanId()];\n        if (parentEntry) {\n          scopeManager.setActiveSpan(parentEntry.span);\n        }\n      } else {\n        scopeManager.setActiveSpan(undefined);\n      }\n      delete spanEntries[spanId];\n    }\n  };\n\n  return {\n    input: thisCodePath,\n    output: outputStream\n  };\n}\n","export function createMulticastDelegate(eventName) {\n  let subscribers = [];\n\n  const delegate = {\n    add(subscriber) {\n      delegate.remove(subscriber);\n      subscribers.push(subscriber);\n    },\n    remove(subscriber) {\n      subscribers = subscribers.filter(s => s !== subscriber);\n    },\n    invoke(...args) {\n      subscribers.forEach(subscriber => {\n        try {\n          subscriber(...args);\n        } catch (e) {\n          console.log(`Event [${eventName}] invocation failed!`, e);\n        }\n      });\n    }\n  };\n\n  return delegate;\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathModel(options) {\n  const insertNodesCallbacks = createMulticastDelegate(\n    \"CodePathModel.insertNodes\"\n  );\n  const updateNodesCallbacks = createMulticastDelegate(\n    \"CodePathModel.updateNodes\"\n  );\n  const extractEntryMetrics =\n    options && options.extractEntryMetrics\n      ? options.extractEntryMetrics\n      : entry => entry.metrics;\n\n  let traceNodeMap = undefined;\n  let rootNode = undefined;\n  let nextNodeId = 1;\n\n  const initializeModel = () => {\n    traceNodeMap = createTraceNodeMap();\n    rootNode = createRootNode();\n  };\n\n  const getParentContext = entry => {\n    if (entry.token === \"StartSpan\") {\n      return entry.childOf || entry.followsFrom;\n    } else {\n      return entry;\n    }\n  };\n\n  const findParentNode = entry => {\n    const parentContext = getParentContext(entry);\n    if (parentContext) {\n      const parentNode = traceNodeMap.getSpanNode(\n        parentContext.traceId,\n        parentContext.spanId\n      );\n      if (parentNode) {\n        return parentNode;\n      }\n      console.warn(\"CODEPATH.MODEL>\", \"Span node not found\", parentContext);\n    }\n    return rootNode;\n  };\n\n  const bubbleSingleMetric = (targetNode, key, value) => {\n    if (!targetNode.metrics) {\n      targetNode.metrics = { [key]: value };\n    } else if (!targetNode.metrics[key]) {\n      targetNode.metrics[key] = value;\n    } else {\n      targetNode.metrics[key] += value;\n    }\n  };\n\n  const bubbleMetrics = (node, insertQueue, updateQueue) => {\n    if (!node.metrics) {\n      return;\n    }\n    const insertSet = new Set(insertQueue);\n    const metricKeys = Object.keys(node.metrics);\n    for (\n      let targetNode = node.parent;\n      targetNode.id > 0;\n      targetNode = targetNode.parent\n    ) {\n      metricKeys.forEach(key => {\n        const value = node.metrics[key];\n        bubbleSingleMetric(targetNode, key, value);\n      });\n      if (!insertSet.has(targetNode)) {\n        updateQueue.push(targetNode);\n      }\n    }\n  };\n\n  const handleInsertNodeEntry = (entry, insertQueue, updateQueue) => {\n    const { traceId, spanId } = entry;\n    const parent = findParentNode(entry);\n    const newNode = createRegularNode(\n      nextNodeId++,\n      parent,\n      entry,\n      extractEntryMetrics\n    );\n\n    appendChildNodeToParent(newNode, parent);\n    if (entry.token === \"StartSpan\") {\n      traceNodeMap.setSpanNode(traceId, spanId, newNode);\n    }\n\n    insertQueue.push(newNode);\n    bubbleMetrics(newNode, insertQueue, updateQueue);\n  };\n\n  const handleSpanTagsEntry = (entry, insertQueue, updateQueue) => {};\n\n  const handleEndSpanEntry = (entry, insertQueue, updateQueue) => {\n    const node = traceNodeMap.getSpanNode(entry.traceId, entry.spanId);\n    if (node) {\n      node.entry.duration = entry.time - node.entry.time;\n      updateQueue.push(node);\n    }\n  };\n\n  const handleStartTracerEntry = (entry, insertQueue, updateQueue) => {};\n\n  const entryHandlerByToken = {\n    StartTracer: handleStartTracerEntry,\n    StartSpan: handleInsertNodeEntry,\n    Log: handleInsertNodeEntry,\n    SpanTags: handleSpanTagsEntry,\n    EndSpan: handleEndSpanEntry\n  };\n\n  const handleEntry = (entry, insertQueue, updateQueue) => {\n    const handler = entryHandlerByToken[entry.token];\n    if (handler) {\n      handler(entry, insertQueue, updateQueue);\n    } else {\n      console.error(`Unknown entry token [${entry.token}]`);\n    }\n  };\n\n  initializeModel();\n\n  return {\n    getRootNode() {\n      return rootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(rootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(rootNode);\n    },\n    walkNodesDepthFirst(callback) {\n      walkNodesDepthFirst(rootNode, callback);\n    },\n    publish(entries) {\n      const insertQueue = [];\n      const updateQueue = [];\n      entries.forEach(entry => {\n        handleEntry(entry, insertQueue, updateQueue);\n      });\n      if (insertQueue.length > 0) {\n        insertNodesCallbacks.invoke(insertQueue);\n      }\n      if (updateQueue.length > 0) {\n        updateNodesCallbacks.invoke(updateQueue);\n      }\n    },\n    subscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.add(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.add(subscriber.updateNodes);\n      }\n    },\n    unsubscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.remove(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.remove(subscriber.updateNodes);\n      }\n    },\n    // deleteRow(id) {\n    // },\n    clearAll() {\n      initializeModel();\n    },\n    extractEntryMetrics\n  };\n}\n\nexport function createRootNode() {\n  return {\n    id: 0,\n    entry: undefined,\n    parent: undefined,\n    top: undefined,\n    depth: -1,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined,\n    metrics: undefined\n  };\n}\n\nexport function createRegularNode(id, parent, entry, extractEntryMetrics) {\n  const node = {\n    id,\n    entry,\n    parent,\n    depth: parent.depth + 1,\n    top: parent.top,\n    firstChild: undefined,\n    lastChild: undefined,\n    prevSibling: undefined,\n    nextSibling: undefined,\n    metrics: extractEntryMetrics ? extractEntryMetrics(entry) : entry.metrics\n  };\n  if (!node.top) {\n    node.top = node;\n  }\n  return node;\n}\n\nexport function appendChildNodeToParent(newChild, parent) {\n  if (parent.lastChild) {\n    newChild.prevSibling = parent.lastChild;\n    parent.lastChild.nextSibling = newChild;\n  } else {\n    parent.firstChild = newChild;\n  }\n  parent.lastChild = newChild;\n}\n\nexport function getNodesAsFlatArray(rootNode) {\n  if (!rootNode) {\n    return [];\n  }\n  const flatNodes = [];\n  walkNodesDepthFirst(rootNode, node => flatNodes.push(node));\n  return flatNodes;\n}\n\nexport function getTopLevelNodesAsArray(rootNode) {\n  const topLevelNodes = [];\n  walkImmediateSubNodes(rootNode, node => {\n    topLevelNodes.push(node);\n  });\n  return topLevelNodes;\n}\n\nexport function walkNodesDepthFirst(rootNode, callback) {\n  return walkImmediateSubNodes(rootNode, node => {\n    if (callback(node) === false) {\n      return false;\n    }\n    if (node.firstChild) {\n      if (walkNodesDepthFirst(node, callback) === false) {\n        return false;\n      }\n    }\n  });\n}\n\nexport function walkImmediateSubNodes(parentNode, callback) {\n  if (parentNode) {\n    for (let node = parentNode.firstChild; !!node; node = node.nextSibling) {\n      if (callback(node) === false) {\n        return false;\n      }\n    }\n  }\n}\n\nexport function findNextMatchingNode(fromNode, predicate) {\n  let currentNode = fromNode;\n  let finishedSubTree = false;\n\n  while (currentNode) {\n    if (!finishedSubTree && currentNode.firstChild) {\n      currentNode = currentNode.firstChild;\n    } else {\n      finishedSubTree = false;\n      if (currentNode.nextSibling) {\n        currentNode = currentNode.nextSibling;\n      } else {\n        finishedSubTree = true;\n        currentNode = currentNode.parent;\n      }\n    }\n\n    if (!finishedSubTree && predicate(currentNode)) {\n      return currentNode;\n    }\n  }\n}\n\nexport function findPrevMatchingNode(fromNode, predicate) {\n  let currentNode = fromNode;\n  let finishedSubTree = false;\n\n  while (currentNode) {\n    if (!finishedSubTree && currentNode.lastChild) {\n      currentNode = currentNode.lastChild;\n    } else {\n      finishedSubTree = false;\n      if (currentNode.prevSibling) {\n        currentNode = currentNode.prevSibling;\n      } else {\n        finishedSubTree = true;\n        currentNode = currentNode.parent;\n      }\n    }\n\n    if (!finishedSubTree && predicate(currentNode)) {\n      return currentNode;\n    }\n  }\n}\n\nfunction createTraceNodeMap() {\n  let mapByTraceId = {};\n\n  const getOrAddTraceSpanNodeMap = traceId => {\n    const existingMap = mapByTraceId[traceId];\n    if (existingMap) {\n      return existingMap;\n    }\n\n    const newMap = createSpanNodeMap();\n    mapByTraceId[traceId] = newMap;\n    return newMap;\n  };\n\n  return {\n    getSpanNode(traceId, spanId) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.getSpanNode(spanId);\n    },\n    setSpanNode(traceId, spanId, node) {\n      const spanNodeMap = getOrAddTraceSpanNodeMap(traceId);\n      return spanNodeMap.setSpanNode(spanId, node);\n    }\n  };\n}\n\nfunction createSpanNodeMap() {\n  let nodeBySpanId = {};\n\n  return {\n    getSpanNode(spanId) {\n      return nodeBySpanId[spanId];\n    },\n    setSpanNode(spanId, node) {\n      nodeBySpanId[spanId] = node;\n    }\n  };\n}\n","import {\n  createRootNode,\n  createRegularNode,\n  appendChildNodeToParent,\n  getNodesAsFlatArray,\n  getTopLevelNodesAsArray,\n  walkNodesDepthFirst,\n  findNextMatchingNode,\n  findPrevMatchingNode\n} from \"./codePathModel\";\n\nimport { createMulticastDelegate } from \"./multicastDelegate\";\n\nexport function createCodePathSearchModel(sourceModel, predicate) {\n  const insertNodesCallbacks = createMulticastDelegate(\n    \"CodePathSearchModel.insertNodes\"\n  );\n  const updateNodesCallbacks = createMulticastDelegate(\n    \"CodePathSearchModel.updateNodes\"\n  );\n\n  let resultNodeById = {};\n  let newlyCreatedResultNodes = undefined;\n  let resultRootNode = undefined;\n\n  const initializeFromSourceModel = () => {\n    resultNodeById = {};\n    newlyCreatedResultNodes = undefined;\n    resultRootNode = performSearch();\n  };\n\n  const sourceModelSubscriber = {\n    insertNodes: handleInsertedSourceNodes,\n    updateNodes: handleUpdatedSourceNodes\n  };\n\n  sourceModel.subscribe(sourceModelSubscriber);\n  initializeFromSourceModel();\n\n  return {\n    getRootNode() {\n      return resultRootNode;\n    },\n    getNodesFlat() {\n      return getNodesAsFlatArray(resultRootNode);\n    },\n    getTopLevelNodes() {\n      return getTopLevelNodesAsArray(resultRootNode);\n    },\n    getFirstMatchedNode() {\n      let firstMatchedNode = undefined;\n      walkNodesDepthFirst(resultRootNode, node => {\n        if (node.matched) {\n          firstMatchedNode = node;\n          return false;\n        }\n      });\n      return firstMatchedNode;\n    },\n    getNextMatchedNode(matchedNode) {\n      return findNextMatchingNode(matchedNode, node => node.matched);\n    },\n    getPrevMatchedNode(matchedNode) {\n      return findPrevMatchingNode(matchedNode, node => node.matched);\n    },\n    subscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.add(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.add(subscriber.updateNodes);\n      }\n    },\n    unsubscribe(subscriber) {\n      if (subscriber.insertNodes) {\n        insertNodesCallbacks.remove(subscriber.insertNodes);\n      }\n      if (subscriber.updateNodes) {\n        updateNodesCallbacks.remove(subscriber.updateNodes);\n      }\n    },\n    unsubscribeFromSource() {\n      sourceModel.unsubscribe(handleInsertedSourceNodes);\n    },\n    clearAll() {\n      sourceModel.clearAll();\n      initializeFromSourceModel();\n    }\n  };\n\n  function performSearch() {\n    const sourceRootNode = sourceModel.getRootNode();\n    const resultRootNode = createRootNode();\n    resultNodeById[resultRootNode.id] = resultRootNode;\n\n    depthFirstSearchSubTree(sourceRootNode, () => resultRootNode);\n\n    return resultRootNode;\n  }\n\n  function depthFirstSearchSubTree(node, getResultParentNode) {\n    const createThisResultNode = matched => {\n      return createResultNode(node, matched, getResultParentNode);\n    };\n\n    const isRootNode = !node.parent;\n    const thisNodeMatched = !isRootNode && predicate(node);\n    let thisResultNode = thisNodeMatched\n      ? createThisResultNode(true)\n      : undefined;\n\n    for (\n      let subNode = node.firstChild;\n      !!subNode;\n      subNode = subNode.nextSibling\n    ) {\n      depthFirstSearchSubTree(subNode, () => {\n        if (!thisResultNode) {\n          thisResultNode = isRootNode\n            ? getResultParentNode()\n            : createThisResultNode(false);\n        }\n        return thisResultNode;\n      });\n    }\n  }\n\n  function createResultNode(sourceNode, matched, getResultParentNode) {\n    const resultParentNode = getResultParentNode();\n    let resultNode = createRegularNode(\n      sourceNode.id,\n      resultParentNode,\n      sourceNode.entry,\n      sourceModel.extractEntryMetrics\n    );\n    resultNodeById[resultNode.id] = resultNode;\n    if (newlyCreatedResultNodes) {\n      newlyCreatedResultNodes.push(resultNode);\n    }\n    appendChildNodeToParent(resultNode, resultParentNode);\n    resultNode.matched = matched;\n    return resultNode;\n  }\n\n  function getOrCreateResultParentNode(sourceChildNode) {\n    if (!sourceChildNode.parent) {\n      return;\n    }\n    const existingParent = resultNodeById[sourceChildNode.parent.id];\n    if (existingParent) {\n      return existingParent;\n    }\n    return createResultNode(sourceChildNode.parent, false, () =>\n      getOrCreateResultParentNode(sourceChildNode.parent)\n    );\n  }\n\n  function handleInsertedSourceNodes(insertedNodes) {\n    newlyCreatedResultNodes = [];\n    const matchingNodes = insertedNodes.filter(predicate);\n\n    matchingNodes.forEach(sourceNode => {\n      const getParentNode = () => {\n        return getOrCreateResultParentNode(sourceNode);\n      };\n      createResultNode(sourceNode, true, getParentNode);\n    });\n\n    if (newlyCreatedResultNodes.length > 0) {\n      insertNodesCallbacks.invoke(newlyCreatedResultNodes);\n    }\n    newlyCreatedResultNodes = undefined;\n  }\n\n  function handleUpdatedSourceNodes(updatedNodes) {}\n}\n","import { createMulticastDelegate } from \"./multicastDelegate\";\nimport { createCodePathModel } from \"./codePathModel\";\n\nexport function createTreeGridController(view, model) {\n  let rowById = {};\n  let masterIndexVersion = 1;\n\n  //setInterval(() => console.log(rowById), 1000);\n\n  const subscriber = {\n    insertNodes: handleInsertedNodes,\n    updateNodes: handleUpdatedNodes\n  };\n\n  const controller = {\n    getNodeById(id) {\n      const row = rowById[id];\n      if (row) {\n        return row.getNode();\n      }\n    },\n    toggle(id) {\n      return rowById[id].toggle();\n    },\n    expand(id) {\n      rowById[id].expand();\n    },\n    collapse(id) {\n      rowById[id].collapse();\n    },\n    selectNode(node) {\n      controller.expandToNode(node);\n      const nodeRow = rowById[node.id];\n      const nodeRowIndex = nodeRow.findAbsoluteIndex();\n      view.selectNode(nodeRowIndex, node);\n    },\n    expandToNode(node) {\n      if (!rowById[node.id]) {\n        controller.expandToNode(node.parent);\n        controller.expand(node.parent.id);\n      }\n    },\n    getIsExpanded(id) {\n      const row = rowById[id];\n      return row ? row.getIsExpanded() : false;\n    },\n    getIsVisible(id) {\n      const row = rowById[id];\n      return row ? rowById[id].getIsVisible() : false;\n    },\n    replaceModel(newModel) {\n      model.unsubscribe(subscriber);\n      model = newModel;\n      initWithCurrentModel();\n    },\n    clearAll() {\n      model.clearAll();\n      controller.replaceModel(model);\n    },\n    onNodeSelected(callback) {\n      view.onNodeSelected(callback);\n    }\n  };\n\n  view.attachController(controller);\n  initWithCurrentModel();\n  return controller;\n\n  function initWithCurrentModel() {\n    rowById = {};\n    masterIndexVersion = 1;\n    initRootNode();\n    view.clearAll();\n    subscriber.insertNodes(model.getTopLevelNodes());\n    model.subscribe(subscriber);\n  }\n\n  function createSubNodesRowControllers(subNodes) {\n    for (let node of subNodes) {\n      const row = createRowController(node);\n      rowById[node.id] = row;\n    }\n  }\n\n  function createRowController(node) {\n    let isExpanded = false;\n    let subTreeHeight = 0;\n    let cachedAbsoluteIndex = undefined;\n    let cachedIndexVersion = masterIndexVersion;\n\n    const getNode = () => {\n      return node;\n    };\n    const getParent = () => {\n      return rowById[node.parent.id];\n    };\n    const getPrevSibling = () => {\n      return node.prevSibling ? rowById[node.prevSibling.id] : undefined;\n    };\n    const getNextSibling = () => {\n      return node.nextSibling ? rowById[node.nextSibling.id] : undefined;\n    };\n    const getFirstChild = () => {\n      return node.firstChild ? rowById[node.firstChild.id] : undefined;\n    };\n    const getIsExpanded = () => {\n      return isExpanded;\n    };\n    const getIsVisible = () => {\n      const parent = getParent();\n      return parent.getIsVisible() && parent.getIsExpanded();\n    };\n    const getSubTreeHeight = () => {\n      return subTreeHeight;\n    };\n    const updateSubTreeHeight = delta => {\n      subTreeHeight += delta;\n      cachedIndexVersion = masterIndexVersion;\n      getParent().updateSubTreeHeight(delta);\n    };\n    const getIndexVersion = () => {\n      return masterIndexVersion;\n    };\n    const isCachedAbsoluteIndexValid = () => {\n      return !!cachedAbsoluteIndex && cachedIndexVersion === masterIndexVersion;\n    };\n    const findAbsoluteIndex = () => {\n      if (!isCachedAbsoluteIndexValid()) {\n        let indexRelativeToParent = 0;\n        for (\n          let sibling = getPrevSibling();\n          !!sibling;\n          sibling = sibling.getPrevSibling()\n        ) {\n          indexRelativeToParent += 1 + sibling.getSubTreeHeight();\n        }\n        const parentAbsoluteIndex = getParent().findAbsoluteIndex();\n        cachedAbsoluteIndex = parentAbsoluteIndex + indexRelativeToParent + 1;\n        cachedIndexVersion = masterIndexVersion;\n      }\n      return cachedAbsoluteIndex;\n    };\n    const showSubNodes = subNodes => {\n      if (!getIsVisible() || !getIsExpanded()) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      createSubNodesRowControllers(subNodes);\n      view.insertNodes(thisRowIndex + subTreeHeight + 1, subNodes);\n      masterIndexVersion++;\n      updateSubTreeHeight(+subNodes.length);\n      view.updateNode(thisRowIndex, node);\n    };\n    const hideSubNodes = () => {\n      if (!getIsVisible() || subTreeHeight === 0) {\n        return;\n      }\n      const thisRowIndex = findAbsoluteIndex();\n      const removedNodeIds = view.removeNodes(thisRowIndex + 1, subTreeHeight);\n      removedNodeIds && removedNodeIds.forEach(id => delete rowById[id]);\n      masterIndexVersion++;\n      updateSubTreeHeight(-subTreeHeight);\n      view.updateNode(thisRowIndex, node);\n    };\n    const toggle = () => {\n      if (isExpanded) {\n        collapse();\n      } else {\n        expand();\n      }\n      return {\n        isExpanded\n      };\n    };\n    const expand = () => {\n      if (isExpanded || !node.firstChild) {\n        return;\n      }\n      const subNodes = [];\n      for (\n        let subNode = node.firstChild;\n        !!subNode;\n        subNode = subNode.nextSibling\n      ) {\n        subNodes.push(subNode);\n      }\n      isExpanded = true;\n      showSubNodes(subNodes);\n    };\n    const collapse = () => {\n      isExpanded = false;\n      hideSubNodes();\n    };\n\n    return {\n      getNode,\n      getParent,\n      getPrevSibling,\n      getNextSibling,\n      getFirstChild,\n      getIsExpanded,\n      getIsVisible,\n      getSubTreeHeight,\n      updateSubTreeHeight,\n      getIndexVersion,\n      findAbsoluteIndex,\n      toggle,\n      expand,\n      collapse,\n      showSubNodes\n    };\n  }\n\n  function createRootNodeController(rootNode) {\n    let subTreeHeight = 0;\n    const noop = () => {};\n\n    return {\n      getNode: () => rootNode,\n      getParent: noop,\n      getPrevSibling: noop,\n      getNextSibling: noop,\n      getFirstChild: noop,\n      getIsExpanded: () => true,\n      getIsVisible: () => true,\n      getSubTreeHeight: () => subTreeHeight,\n      updateSubTreeHeight(delta) {\n        subTreeHeight += delta;\n      },\n      getIndexVersion: () => masterIndexVersion,\n      findAbsoluteIndex: () => -1,\n      toggle: noop,\n      expand: noop,\n      collapse: noop,\n      showSubNodes(subNodes) {\n        createSubNodesRowControllers(subNodes);\n        view.insertNodes(subTreeHeight, subNodes);\n        subTreeHeight += subNodes.length;\n      }\n    };\n  }\n\n  function handleInsertedNodes(insertedNodes) {\n    let currentGroup = undefined;\n\n    for (let i = 0; i < insertedNodes.length; i++) {\n      const parentId = insertedNodes[i].parent.id;\n      const parentRow = rowById[parentId];\n      if (!currentGroup || currentGroup.parentId !== parentId) {\n        beginNewGroup(i);\n      }\n    }\n\n    endCurrentGroup(insertedNodes.length);\n\n    function beginNewGroup(index) {\n      endCurrentGroup(index);\n      currentGroup = {\n        parentId: insertedNodes[index].parent.id,\n        startIndex: index\n      };\n    }\n\n    function endCurrentGroup(index) {\n      if (currentGroup && currentGroup.startIndex < index) {\n        const parentRow = rowById[currentGroup.parentId];\n        if (parentRow) {\n          const nodesInGroup = insertedNodes.slice(\n            currentGroup.startIndex,\n            index\n          );\n          parentRow.showSubNodes(nodesInGroup);\n        }\n      }\n    }\n  }\n\n  function handleUpdatedNodes(updatedNodes) {\n    updatedNodes.forEach(node => {\n      const row = rowById[node.id];\n      if (row) {\n        const index = row.findAbsoluteIndex();\n        view.updateNode(index, node);\n      }\n    });\n  }\n\n  function initRootNode() {\n    const rootNode = model.getRootNode();\n    rowById[rootNode.id] = createRootNodeController(rootNode);\n  }\n}\n\nexport function createTreeGridView(table, columns, rows) {\n  const nodeSelectedCallbacks = createMulticastDelegate(\n    \"TreeGridView.NodeSelected\"\n  );\n  const keyPressedCallbacks = createMulticastDelegate(\n    \"TreeGridView.KeyPressed\"\n  );\n\n  table.onkeydown = e => {\n    if (handleTableKeyboardEvent(e) === true) {\n      e.stopPropagation();\n      return false;\n    }\n  };\n\n  let tbody = document.createElement(\"tbody\");\n  table.appendChild(tbody);\n\n  let controller = undefined;\n  let selectedTr = undefined;\n\n  const stringToTextNode = element => {\n    if (typeof element === \"string\") {\n      return document.createTextNode(element);\n    }\n    return element;\n  };\n\n  const renderCell = (node, rowIndex, colIndex, tr, td) => {\n    const column = columns[colIndex];\n    const tdClass =\n      column.getTdClass && column.getTdClass(node, controller, rowIndex);\n    tdClass && td.classList.add(tdClass);\n    const tdContents = column.renderCell(node, controller, rowIndex);\n    tdContents &&\n      tdContents\n        .filter(htmlNode => !!htmlNode)\n        .map(stringToTextNode)\n        .forEach(htmlNode => td.appendChild(htmlNode));\n  };\n\n  const attachController = theController => {\n    controller = theController;\n  };\n\n  const applyTrClasses = (tr, node, index) => {\n    const isExpanded = controller.getIsExpanded(node.id);\n    tr.className = \"\";\n    tr.classList.add(isExpanded ? \"expanded\" : \"collapsed\");\n    if (tr === selectedTr) {\n      tr.classList.add(\"selected\");\n    }\n    if (rows && rows.getTrClasses) {\n      const trClasses = rows.getTrClasses(node, index);\n      tr.classList.add(...trClasses);\n    }\n  };\n\n  const updateNode = (index, node) => {\n    const tr = tbody.rows[index];\n    applyTrClasses(tr, node, index);\n\n    for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n      const td = tr.cells[colIndex];\n      td.innerHTML = \"\";\n      renderCell(node, index, colIndex, tr, td);\n    }\n  };\n\n  const selectNode = (index, node) => {\n    if (selectedTr) {\n      selectedTr.classList.remove(\"selected\");\n    }\n    selectedTr = undefined;\n    if (typeof index === \"number\" && index >= 0) {\n      selectedTr = tbody.rows[index];\n      selectedTr.classList.add(\"selected\");\n      nodeSelectedCallbacks.invoke(node);\n      selectedTr.scrollIntoViewIfNeeded(); //TODO\n    }\n  };\n\n  const insertNodes = (index, nodes) => {\n    for (let i = 0; i < nodes.length; i++) {\n      const rowIndex = index + i;\n      const tr = tbody.insertRow(index + i);\n      tr.setAttribute(\"data-nid\", nodes[i].id);\n      applyTrClasses(tr, nodes[i], index + i);\n      tr.onclick = () => {\n        selectNode(tr.rowIndex - 1, nodes[i]);\n      };\n      for (let colIndex = 0; colIndex < columns.length; colIndex++) {\n        const td = tr.insertCell(colIndex);\n        renderCell(nodes[i], rowIndex, colIndex, tr, td);\n      }\n    }\n  };\n\n  const removeNodes = (index, count) => {\n    if (\n      selectedTr &&\n      selectedTr.rowIndex - 1 >= index &&\n      selectedTr.rowIndex - 1 < index + count\n    ) {\n      selectedTr = undefined;\n      nodeSelectedCallbacks.invoke(undefined);\n    }\n    const deletedNodeIds = [];\n    for (let i = count - 1; i >= 0; i--) {\n      const tr = tbody.rows[index + i];\n      deletedNodeIds.push(getTrNodeId(tr));\n      tbody.deleteRow(index + i);\n    }\n    return deletedNodeIds;\n  };\n\n  const clearAll = () => {\n    const newTbody = document.createElement(\"tbody\");\n    table.replaceChild(newTbody, tbody);\n    tbody = newTbody;\n    selectNode();\n  };\n\n  const onNodeSelected = callback => {\n    nodeSelectedCallbacks.add(callback);\n  };\n\n  const onKeyPressed = callback => {\n    keyPressedCallbacks.add(callback);\n  };\n\n  return {\n    attachController,\n    updateNode,\n    insertNodes,\n    removeNodes,\n    selectNode,\n    clearAll,\n    onNodeSelected,\n    onKeyPressed\n  };\n\n  function handleTableKeyboardEvent(e) {\n    if (e.ctrlKey || e.shiftKey || e.altKey) {\n      return false;\n    }\n\n    if (!selectedTr) {\n      if (tbody.rows.length > 0) {\n        selectNode(0, getTrNode(tbody.rows[0]));\n      }\n      return true;\n    }\n\n    const selectedNodeId = getTrNodeId(selectedTr);\n\n    switch (e.key) {\n      case \"ArrowLeft\":\n        if (controller.getIsExpanded(selectedNodeId)) {\n          controller.collapse(selectedNodeId);\n          return true;\n        }\n        break;\n      case \"ArrowRight\":\n        if (!controller.getIsExpanded(selectedNodeId)) {\n          controller.expand(selectedNodeId);\n          return true;\n        }\n        break;\n    }\n\n    const trToGo = getTrToGo(e.key);\n    if (trToGo) {\n      selectNode(getTrIndex(trToGo), getTrNode(trToGo));\n      return true;\n    }\n\n    return false;\n  }\n\n  function getTrToGo(keyCode) {\n    switch (keyCode) {\n      case \"ArrowUp\":\n        if (getTrIndex(selectedTr) > 0) {\n          return tbody.rows[getTrIndex(selectedTr) - 1];\n        }\n        break;\n      case \"ArrowDown\":\n        if (getTrIndex(selectedTr) < tbody.rows.length - 1) {\n          return tbody.rows[getTrIndex(selectedTr) + 1];\n        }\n        break;\n      case \"ArrowLeft\":\n        return findParentTr(selectedTr);\n      case \"ArrowRight\":\n        return findExpandableChildTr(selectedTr);\n    }\n  }\n\n  function getTrIndex(tr) {\n    return tr.sectionRowIndex;\n  }\n\n  function getTrNodeId(tr) {\n    const nodeId = parseInt(tr.getAttribute(\"data-nid\"));\n    return !isNaN(nodeId) ? nodeId : undefined;\n  }\n\n  function getTrNode(tr) {\n    const nodeId = getTrNodeId(tr);\n    if (nodeId) {\n      return controller.getNodeById(nodeId);\n    }\n  }\n\n  function findParentTr(childTr) {\n    const childNode = getTrNode(childTr);\n    const parentNodeId = childNode.parent.id;\n    if (parentNodeId) {\n      for (let index = getTrIndex(childTr) - 1; index >= 0; index--) {\n        const tr = tbody.rows[index];\n        if (getTrNodeId(tr) === parentNodeId) {\n          return tr;\n        }\n      }\n    }\n  }\n\n  function findExpandableChildTr(parentTr) {\n    const parentNode = getTrNode(parentTr);\n    for (\n      let index = getTrIndex(parentTr) + 1;\n      index < tbody.rows.length;\n      index++\n    ) {\n      const childTr = tbody.rows[index];\n      const childNode = getTrNode(childTr);\n      if (childNode.parent !== parentNode) {\n        break;\n      }\n      if (childNode.firstChild) {\n        return childTr;\n      }\n    }\n  }\n}\n","import { createRealClock } from \"./codePath\";\n\nexport function createDebounce(consumer, interval, optionalClock) {\n  const clock = optionalClock || createRealClock();\n  let timeoutId = undefined;\n\n  return {\n    bounce() {\n      if (timeoutId) {\n        clock.clearTimeout(timeoutId);\n      }\n      timeoutId = clock.setTimeout(() => {\n        timeoutId = undefined;\n        consumer();\n      }, interval);\n    }\n  };\n}\n","export function createResizer(elements) {\n  const minWidthPx = 10;\n  const moveThresholdPx = 3;\n  const { gripElement, leftSideElement, rightSideElement } = elements;\n\n  let initial = undefined;\n  let last = undefined;\n  let saveBodyCursor = undefined;\n\n  gripElement.onmousedown = onMouseDown;\n\n  function takeSnapshot(e) {\n    return {\n      mouseX: e.pageX,\n      leftWidth: leftSideElement ? leftSideElement.clientWidth : undefined,\n      rightWidth: rightSideElement ? rightSideElement.clientWidth : undefined\n    };\n  }\n\n  function onMouseDown(e) {\n    initial = takeSnapshot(e);\n    last = Object.assign({}, initial);\n\n    window.addEventListener(\"mousemove\", onMouseMove, true);\n    window.addEventListener(\"mouseup\", onMouseUp, true);\n\n    saveBodyCursor = document.body.style.cursor;\n    document.body.style.cursor = \"ew-resize\";\n\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseMove(e) {\n    const current = takeSnapshot(e);\n\n    if (Math.abs(current.mouseX - last.mouseX) >= moveThresholdPx) {\n      last = current;\n      let deltaX = current.mouseX - initial.mouseX;\n\n      if (\n        initial.leftWidth &&\n        deltaX < 0 &&\n        initial.leftWidth + deltaX < minWidthPx\n      ) {\n        deltaX = -(initial.leftWidth - minWidthPx);\n      }\n      if (\n        initial.rightWidth &&\n        deltaX > 0 &&\n        initial.rightWidth - deltaX < minWidthPx\n      ) {\n        deltaX = initial.rightWidth - minWidthPx;\n      }\n\n      if (leftSideElement && leftSideElement.style.width.length > 0) {\n        leftSideElement.style.width = `${initial.leftWidth + deltaX}px`;\n      }\n      if (rightSideElement && rightSideElement.style.width.length > 0) {\n        rightSideElement.style.width = `${initial.rightWidth - deltaX}px`;\n      }\n    }\n    e.stopPropagation();\n    return false;\n  }\n\n  function onMouseUp(e) {\n    document.body.style.cursor = saveBodyCursor;\n    window.removeEventListener(\"mousemove\", onMouseMove, true);\n    window.removeEventListener(\"mouseup\", onMouseUp, true);\n\n    initial = undefined;\n    last = undefined;\n\n    e.stopPropagation();\n    return false;\n  }\n}\n","let logSwitch = undefined;\n\nexport function createDebugLog(component, globalVars) {\n  ensureLogSwitchInitialized();\n\n  return {\n    log(...args) {\n      if (logSwitch.isEnabled) {\n        console.log(...args);\n      }\n    },\n    info(...args) {\n      if (logSwitch.isEnabled) {\n        console.info(...args);\n      }\n    },\n    warn(...args) {\n      if (logSwitch.isEnabled) {\n        console.warn(...args);\n      }\n    },\n    error(...args) {\n      if (logSwitch.isEnabled) {\n        console.error(...args);\n      }\n    }\n  };\n\n  function ensureLogSwitchInitialized() {\n    if (!logSwitch) {\n      logSwitch = {\n        component,\n        isEnabled: false,\n        setEnabled: createSetEnabled(component, globalVars)\n      };\n    }\n  }\n}\n\nexport function enableDebugLog(enable) {\n  if (logSwitch) {\n    logSwitch.setEnabled(enable);\n    console.log(\n      \"CODEPATH.DEBUG-LOG>\",\n      `log switch [${logSwitch.component}] was set to`,\n      enable\n    );\n  } else {\n    console.log(\"CODEPATH.DEBUG-LOG>\", \"log switch was not initialized\");\n  }\n}\n\nfunction createSetEnabled(component, globalVars) {\n  const createEnableLogMessage = enable => {\n    return {\n      type: \"codePath/devTools/enableDebugLog\",\n      enable: !!enable\n    };\n  };\n\n  const handleEnableLogMessage = message => {\n    if (\n      typeof message === \"object\" &&\n      message.type === \"codePath/devTools/enableDebugLog\" &&\n      typeof message.enable === \"boolean\"\n    ) {\n      enableDebugLog(message.enable, true);\n    }\n  };\n\n  switch (component) {\n    case \"page\":\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n        window.postMessage(createEnableLogMessage(enable), \"*\");\n      };\n    case \"content\":\n      window.addEventListener(\"message\", event => {\n        handleEnableLogMessage(event.data);\n      });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n        chrome.runtime.sendMessage(createEnableLogMessage(enable));\n      };\n    case \"background\":\n      chrome.runtime.onMessage.addListener(function(\n        request,\n        sender,\n        sendResponse\n      ) {\n        handleEnableLogMessage(request);\n      });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n    case \"devtool\":\n      globalVars &&\n        globalVars.backgroundConnection.onMessage.addListener(function(\n          message\n        ) {\n          handleEnableLogMessage(message);\n        });\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n    default:\n      return enable => {\n        logSwitch.isEnabled = !!enable;\n      };\n  }\n}\n","export { createCodePath, createRealClock } from \"./codePath\";\nexport {\n  createDefaultScopeManager,\n  trace,\n  resetCurrentScope\n} from \"./codePathScopeManager\";\nexport { createCodePathStream } from \"./codePathStream\";\nexport {\n  createCodePathTracer,\n  contextToPlain,\n  plainToContext\n} from \"./codePathTracer\";\nexport {\n  createCodePathModel,\n  walkNodesDepthFirst,\n  walkImmediateSubNodes,\n  findNextMatchingNode,\n  findPrevMatchingNode\n} from \"./codePathModel\";\nexport { createCodePathSearchModel } from \"./codePathSearchModel\";\nexport { createTreeGridController, createTreeGridView } from \"./treeGrid\";\nexport { createMulticastDelegate } from \"./multicastDelegate\";\nexport { createDebounce } from \"./debounce\";\nexport { createResizer } from \"./resizer\";\nexport { LOG_LEVEL } from \"./logLevel\";\nexport { createDebugLog, enableDebugLog } from \"./debugLog\";\n"],"sourceRoot":""}